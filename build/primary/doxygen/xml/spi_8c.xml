<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="spi_8c" kind="file" language="C++">
    <compoundname>spi.c</compoundname>
    <includes refid="general_8h" local="yes">general.h</includes>
    <includes refid="spi_8h" local="yes">spi.h</includes>
    <includes refid="dma_8h" local="yes">dma.h</includes>
    <includes refid="mcu_8h" local="yes">mcu.h</includes>
    <includes refid="io_8h" local="yes">io.h</includes>
    <includes refid="intermcu_8h" local="yes">intermcu.h</includes>
    <incdepgraph>
      <node id="2581">
        <label>dma.h</label>
        <link refid="dma_8h"/>
        <childnode refid="2582" relation="include">
        </childnode>
      </node>
      <node id="2584">
        <label>intermcu.h</label>
        <link refid="intermcu_8h"/>
        <childnode refid="2585" relation="include">
        </childnode>
        <childnode refid="2576" relation="include">
        </childnode>
        <childnode refid="2574" relation="include">
        </childnode>
        <childnode refid="2583" relation="include">
        </childnode>
      </node>
      <node id="2571">
        <label>general.h</label>
        <link refid="general_8h"/>
        <childnode refid="2572" relation="include">
        </childnode>
        <childnode refid="2573" relation="include">
        </childnode>
      </node>
      <node id="2572">
        <label>stdint.h</label>
      </node>
      <node id="2585">
        <label>intermcu_cfg.h</label>
        <link refid="intermcu__cfg_8h"/>
      </node>
      <node id="2582">
        <label>dma_cfg.h</label>
        <link refid="dma__cfg_8h"/>
        <childnode refid="2576" relation="include">
        </childnode>
      </node>
      <node id="2583">
        <label>mcu.h</label>
        <link refid="mcu_8h"/>
        <childnode refid="2571" relation="include">
        </childnode>
      </node>
      <node id="2579">
        <label>io_package_cfg.h</label>
        <link refid="io__package__cfg_8h"/>
      </node>
      <node id="2570">
        <label>spi.c</label>
        <link refid="spi_8c"/>
        <childnode refid="2571" relation="include">
        </childnode>
        <childnode refid="2574" relation="include">
        </childnode>
        <childnode refid="2581" relation="include">
        </childnode>
        <childnode refid="2583" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
        <childnode refid="2584" relation="include">
        </childnode>
      </node>
      <node id="2574">
        <label>spi.h</label>
        <link refid="spi_8h"/>
        <childnode refid="2575" relation="include">
        </childnode>
      </node>
      <node id="2578">
        <label>io_cfg.h</label>
        <link refid="io__cfg_8h"/>
        <childnode refid="2576" relation="include">
        </childnode>
        <childnode refid="2579" relation="include">
        </childnode>
        <childnode refid="2580" relation="include">
        </childnode>
      </node>
      <node id="2580">
        <label>io_mcu_cfg.h</label>
        <link refid="io__mcu__cfg_8h"/>
      </node>
      <node id="2576">
        <label>mcu_cfg.h</label>
      </node>
      <node id="2573">
        <label>std_types.h</label>
        <link refid="std__types_8h"/>
      </node>
      <node id="2577">
        <label>io.h</label>
        <link refid="io_8h"/>
        <childnode refid="2578" relation="include">
        </childnode>
      </node>
      <node id="2575">
        <label>spi_cfg.h</label>
        <link refid="spi__cfg_8h"/>
        <childnode refid="2576" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="spi_8c_1ac4266d9bacbd486ce9250f933324ae4c" prot="public" static="yes" mutable="no">
        <type><ref refid="structSPI__STATE__s" kindref="compound">SPI_STATE_s</ref></type>
        <definition>SPI_STATE_s spi_state</definition>
        <argsstring></argsstring>
        <name>spi_state</name>
        <initializer>= {
    .transmit_ongoing       = <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,
    .counter                = 0,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>contains variables used by the SPI driver </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/spi/spi.c" line="58" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/spi/spi.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="spi_8c_1a7b5a2ab25bec1f26f0019848c488f4cb" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t spi_cmdDummy[1]</definition>
        <argsstring>[1]</argsstring>
        <name>spi_cmdDummy</name>
        <initializer>={0x00}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/spi/spi.c" line="63" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/spi/spi.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="spi_8c_1a1a4c5c177d7de38a2e439a7a0dad7962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SPI_Init</definition>
        <argsstring>(SPI_HandleTypeDef *hspi)</argsstring>
        <name>SPI_Init</name>
        <param>
          <type>SPI_HandleTypeDef *</type>
          <declname>hspi</declname>
        </param>
        <briefdescription>
<para>initializes the SPI module. </para>        </briefdescription>
        <detaileddescription>
<para>This function initializes the SPI channels according to the configuration given as parameter.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*hspi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the spi configuration</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none(void) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/spi/spi.c" line="70" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/spi/spi.c" bodystart="70" bodyend="119"/>
        <references refid="spi__cfg_8c_1ae8c243378ff07f927ed77244e1df14b6" compoundref="spi__cfg_8c" startline="107">spi_number_of_used_SPI_channels</references>
      </memberdef>
      <memberdef kind="function" id="spi_8c_1a04e63f382f172164c8e7cae4ff5d883c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_SPI_TxRxCpltCallback</definition>
        <argsstring>(SPI_HandleTypeDef *hspi)</argsstring>
        <name>HAL_SPI_TxRxCpltCallback</name>
        <param>
          <type>SPI_HandleTypeDef *</type>
          <declname>hspi</declname>
        </param>
        <briefdescription>
<para>callback SPI transmit and receive complete from SPI-Interrupt </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hspi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to SPI hardware handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none(void) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/spi/spi.c" line="122" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/spi/spi.c" bodystart="122" bodyend="135"/>
        <references refid="spi__cfg_8c_1a090bd651a060ce23ceba57762f2ef0b3" compoundref="spi__cfg_8c" startline="52">spi_devices</references>
        <references refid="spi_8c_1a91406c314b72fede70c5b70edfb75dec" compoundref="spi_8c" startline="208" endline="242">SPI_UnsetCS</references>
        <references refid="structSPI__STATE__s_1abd2e6c06fb5ae9109fee41e25f63a4e2" compoundref="spi_8h" startline="48">SPI_STATE_s::transmit_ongoing</references>
        <references refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="std__types_8h" startline="43">FALSE</references>
        <references refid="io_8c_1a1709c6b36be8ee2ebaf5e076300b6a93" compoundref="io_8c" startline="147" endline="150">IO_WritePin</references>
        <references refid="STM32F4xx_2mcu__cfg_8h_1a7039d296d3f95ff10a372201e2685c0c" compoundref="STM32F4xx_2mcu__cfg_8h" startline="45">IO_PIN_DATA_STORAGE_EEPROM_SPI_NSS</references>
        <references refid="io__cfg_8h_1a810cb4986f0729a97af72c3c80cdd11da1147ec98546e2e04cba09c4e6e4ff2e3" compoundref="io__cfg_8h" startline="204">IO_PIN_SET</references>
      </memberdef>
      <memberdef kind="function" id="spi_8c_1a0a99ab4f6aa6ee7dc2abca5483910dde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_SPI_TxCpltCallback</definition>
        <argsstring>(SPI_HandleTypeDef *hspi)</argsstring>
        <name>HAL_SPI_TxCpltCallback</name>
        <param>
          <type>SPI_HandleTypeDef *</type>
          <declname>hspi</declname>
        </param>
        <briefdescription>
<para>callback SPI transmit complete from SPI-Interrupt </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hspi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to SPI hardware handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none(void) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/spi/spi.c" line="138" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/spi/spi.c" bodystart="138" bodyend="152"/>
        <references refid="spi__cfg_8c_1a090bd651a060ce23ceba57762f2ef0b3" compoundref="spi__cfg_8c" startline="52">spi_devices</references>
        <references refid="spi_8c_1a91406c314b72fede70c5b70edfb75dec" compoundref="spi_8c" startline="208" endline="242">SPI_UnsetCS</references>
        <references refid="structSPI__STATE__s_1abd2e6c06fb5ae9109fee41e25f63a4e2" compoundref="spi_8h" startline="48">SPI_STATE_s::transmit_ongoing</references>
        <references refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="std__types_8h" startline="43">FALSE</references>
        <references refid="io_8c_1a1709c6b36be8ee2ebaf5e076300b6a93" compoundref="io_8c" startline="147" endline="150">IO_WritePin</references>
        <references refid="STM32F4xx_2mcu__cfg_8h_1a7039d296d3f95ff10a372201e2685c0c" compoundref="STM32F4xx_2mcu__cfg_8h" startline="45">IO_PIN_DATA_STORAGE_EEPROM_SPI_NSS</references>
        <references refid="io__cfg_8h_1a810cb4986f0729a97af72c3c80cdd11da1147ec98546e2e04cba09c4e6e4ff2e3" compoundref="io__cfg_8h" startline="204">IO_PIN_SET</references>
      </memberdef>
      <memberdef kind="function" id="spi_8c_1a0ef3d3e3c5397195b3d768fcbf9eefb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SPI_SetCS</definition>
        <argsstring>(uint8_t busID)</argsstring>
        <name>SPI_SetCS</name>
        <param>
          <type>uint8_t</type>
          <declname>busID</declname>
        </param>
        <briefdescription>
<para>sets Chip Select low to start SPI transmission. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets CS low in case CS is driven by software.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>busID</parametername>
</parameternamelist>
<parameterdescription>
<para>selects which CS pin has to be set low</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none(void) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/spi/spi.c" line="170" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/spi/spi.c" bodystart="170" bodyend="205"/>
        <references refid="io_8c_1a1709c6b36be8ee2ebaf5e076300b6a93" compoundref="io_8c" startline="147" endline="150">IO_WritePin</references>
        <references refid="spi__cfg_8h_1a51e296073dbc0c5ee0597f310e3604be" compoundref="spi__cfg_8h" startline="48">SPI_NSS_PORT1</references>
        <references refid="io__cfg_8h_1a810cb4986f0729a97af72c3c80cdd11daa6a9bf5c875444b48ed54169d1bae9fc" compoundref="io__cfg_8h" startline="203">IO_PIN_RESET</references>
      </memberdef>
      <memberdef kind="function" id="spi_8c_1a91406c314b72fede70c5b70edfb75dec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SPI_UnsetCS</definition>
        <argsstring>(uint8_t busID)</argsstring>
        <name>SPI_UnsetCS</name>
        <param>
          <type>uint8_t</type>
          <declname>busID</declname>
        </param>
        <briefdescription>
<para>sets Chip Select high to end SPI transmission. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets CS high in case CS is driven by software. It is typically called in the callback routine of SPI transmission.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>busID</parametername>
</parameternamelist>
<parameterdescription>
<para>selects which CS pin has to be set high</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none(void) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/spi/spi.c" line="208" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/spi/spi.c" bodystart="208" bodyend="242"/>
        <references refid="io_8c_1a1709c6b36be8ee2ebaf5e076300b6a93" compoundref="io_8c" startline="147" endline="150">IO_WritePin</references>
        <references refid="spi__cfg_8h_1a51e296073dbc0c5ee0597f310e3604be" compoundref="spi__cfg_8h" startline="48">SPI_NSS_PORT1</references>
        <references refid="io__cfg_8h_1a810cb4986f0729a97af72c3c80cdd11da1147ec98546e2e04cba09c4e6e4ff2e3" compoundref="io__cfg_8h" startline="204">IO_PIN_SET</references>
      </memberdef>
      <memberdef kind="function" id="spi_8c_1a31d14c356ad99590127446672cd32ad4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398" kindref="member">STD_RETURN_TYPE_e</ref></type>
        <definition>STD_RETURN_TYPE_e SPI_Transmit</definition>
        <argsstring>(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)</argsstring>
        <name>SPI_Transmit</name>
        <param>
          <type>SPI_HandleTypeDef *</type>
          <declname>hspi</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pData</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>Size</declname>
        </param>
        <briefdescription>
<para>transmits through SPI without receiving data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*hspi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to SPI hardware handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*pData</parametername>
</parameternamelist>
<parameterdescription>
<para>data to be sent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the data to be sent</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>E_OK if SPI transmission is OK, E_NOT_OK otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/spi/spi.c" line="245" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/spi/spi.c" bodystart="245" bodyend="267"/>
        <references refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398ab7f63f013a1b30e2bba00534c6f0477c" compoundref="std__types_8h" startline="58">E_OK</references>
        <references refid="spi_8c_1a0ef3d3e3c5397195b3d768fcbf9eefb4" compoundref="spi_8c" startline="170" endline="205">SPI_SetCS</references>
        <references refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398a15b95ea81a76501d167f9beca795cb0e" compoundref="std__types_8h" startline="59">E_NOT_OK</references>
      </memberdef>
      <memberdef kind="function" id="spi_8c_1a32b8897d5a6e5ce8f097436e983dcdce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398" kindref="member">STD_RETURN_TYPE_e</ref></type>
        <definition>STD_RETURN_TYPE_e SPI_TransmitReceive</definition>
        <argsstring>(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxData, uint16_t Size)</argsstring>
        <name>SPI_TransmitReceive</name>
        <param>
          <type>SPI_HandleTypeDef *</type>
          <declname>hspi</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pTxData</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pRxData</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>Size</declname>
        </param>
        <briefdescription>
<para>transmits and receives data through SPI. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*hspi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to SPI hardware handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*pTxData</parametername>
</parameternamelist>
<parameterdescription>
<para>data to be sent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*pRxData</parametername>
</parameternamelist>
<parameterdescription>
<para>data to be received </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the data to be sent/received</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>E_OK if SPI transmission is OK, E_NOT_OK otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/spi/spi.c" line="270" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/spi/spi.c" bodystart="270" bodyend="290"/>
        <references refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398ab7f63f013a1b30e2bba00534c6f0477c" compoundref="std__types_8h" startline="58">E_OK</references>
        <references refid="spi_8c_1a0ef3d3e3c5397195b3d768fcbf9eefb4" compoundref="spi_8c" startline="170" endline="205">SPI_SetCS</references>
        <references refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398a15b95ea81a76501d167f9beca795cb0e" compoundref="std__types_8h" startline="59">E_NOT_OK</references>
      </memberdef>
      <memberdef kind="function" id="spi_8c_1a27af1ec96fd2cb03b6e6739372f8aac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398" kindref="member">STD_RETURN_TYPE_e</ref></type>
        <definition>STD_RETURN_TYPE_e SPI_IsTransmitOngoing</definition>
        <argsstring>(void)</argsstring>
        <name>SPI_IsTransmitOngoing</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>gets the SPI transmit status. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>retval TRUE if transmission still ongoing, FALSE otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/spi/spi.c" line="292" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/spi/spi.c" bodystart="292" bodyend="298"/>
        <references refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="std__types_8h" startline="43">FALSE</references>
        <references refid="structSPI__STATE__s_1abd2e6c06fb5ae9109fee41e25f63a4e2" compoundref="spi_8h" startline="48">SPI_STATE_s::transmit_ongoing</references>
      </memberdef>
      <memberdef kind="function" id="spi_8c_1ac76c884ebda9a3d04a2699ade7dfda9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SPI_SetTransmitOngoing</definition>
        <argsstring>(void)</argsstring>
        <name>SPI_SetTransmitOngoing</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>sets the SPI transmit status. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/spi/spi.c" line="300" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/spi/spi.c" bodystart="300" bodyend="304"/>
        <references refid="structSPI__STATE__s_1abd2e6c06fb5ae9109fee41e25f63a4e2" compoundref="spi_8h" startline="48">SPI_STATE_s::transmit_ongoing</references>
        <references refid="std__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="std__types_8h" startline="42">TRUE</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Driver for the serial peripheral interface module (encapsulation of some HAL functions) </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para><copy/> 2010 - 2017, Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e.V. All rights reserved.</para></simplesect>
BSD 3-Clause License Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:<orderedlist>
<listitem><para>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</para></listitem><listitem><para>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</para></listitem><listitem><para>Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</para></listitem></orderedlist>
</para><para>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</para><para>We kindly request you to use one or more of the following phrases to refer to foxBMS in your hardware, software, documentation or advertising materials:</para><para><Prime/>This product uses parts of foxBMS<registered/><Prime/></para><para><Prime/>This product includes parts of foxBMS<registered/><Prime/></para><para><Prime/>This product is derived from foxBMS<registered/><Prime/></para><para><simplesect kind="author"><para>foxBMS Team </para></simplesect>
<simplesect kind="date"><para>02.10.2015 (date of creation)</para></simplesect>
<simplesect kind="par"><title>Module-prefix</title><para>SPI </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="34"><highlight class="comment">/*==================<sp/>Includes<sp/>=============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>recommended<sp/>include<sp/>order<sp/>of<sp/>header<sp/>files:</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>1.<sp/><sp/><sp/><sp/>include<sp/>general.h</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>2.<sp/><sp/><sp/><sp/>include<sp/>module&apos;s<sp/>own<sp/>header</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>3...<sp/><sp/>other<sp/>headers</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="general_8h" kindref="compound">general.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="spi_8h" kindref="compound">spi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dma_8h" kindref="compound">dma.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mcu_8h" kindref="compound">mcu.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="io_8h" kindref="compound">io.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="intermcu_8h" kindref="compound">intermcu.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Macros<sp/>and<sp/>Definitions<sp/>===============================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Constant<sp/>and<sp/>Variable<sp/>Definitions<sp/>====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="spi_8c_1ac4266d9bacbd486ce9250f933324ae4c" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structSPI__STATE__s" kindref="compound">SPI_STATE_s</ref><sp/><ref refid="spi_8c_1ac4266d9bacbd486ce9250f933324ae4c" kindref="member">spi_state</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="structSPI__STATE__s_1abd2e6c06fb5ae9109fee41e25f63a4e2" kindref="member">transmit_ongoing</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>.counter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="spi_8c_1a7b5a2ab25bec1f26f0019848c488f4cb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="spi_8c_1a7b5a2ab25bec1f26f0019848c488f4cb" kindref="member">spi_cmdDummy</ref>[1]={0x00};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Function<sp/>Prototypes<sp/>==================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Function<sp/>Implementations<sp/>=============================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="spi_8h_1a1a4c5c177d7de38a2e439a7a0dad7962" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="spi_8c_1a1a4c5c177d7de38a2e439a7a0dad7962" kindref="member">SPI_Init</ref>(SPI_HandleTypeDef<sp/>*hspi)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/><ref refid="spi__cfg_8c_1ae8c243378ff07f927ed77244e1df14b6" kindref="member">spi_number_of_used_SPI_channels</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hspi<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>hspi[i].State<sp/><sp/>==<sp/><sp/>HAL_SPI_STATE_RESET)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hspi[i].Instance<sp/>==<sp/>SPI1)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SPI1<sp/>peripheral<sp/>clock<sp/>enable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_SPI1_CLK_ENABLE();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hspi[i].Instance<sp/>==<sp/>SPI2)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SPI2<sp/>peripheral<sp/>clock<sp/>enable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_SPI2_CLK_ENABLE();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hspi[i].Instance<sp/>==<sp/>SPI3)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SPI3<sp/>peripheral<sp/>clock<sp/>enable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_SPI3_CLK_ENABLE();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hspi[i].Instance<sp/>==<sp/>SPI4)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SPI4<sp/>peripheral<sp/>clock<sp/>enable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_SPI4_CLK_ENABLE();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hspi[i].Instance<sp/>==<sp/>SPI5)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SPI5<sp/>peripheral<sp/>clock<sp/>enable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_SPI5_CLK_ENABLE();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hspi[i].Instance<sp/>==<sp/>SPI6)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SPI6<sp/>peripheral<sp/>clock<sp/>enable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_SPI6_CLK_ENABLE();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAL_SPI_Init(&amp;hspi[i]);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="spi_8h_1a04e63f382f172164c8e7cae4ff5d883c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="spi_8c_1a04e63f382f172164c8e7cae4ff5d883c" kindref="member">HAL_SPI_TxRxCpltCallback</ref>(SPI_HandleTypeDef<sp/>*hspi)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hspi<sp/><sp/>==<sp/><sp/>&amp;<ref refid="spi__cfg_8c_1a090bd651a060ce23ceba57762f2ef0b3" kindref="member">spi_devices</ref>[0])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iso-SPI<sp/>Main</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="spi_8c_1a91406c314b72fede70c5b70edfb75dec" kindref="member">SPI_UnsetCS</ref>(1);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spi_state.<ref refid="structSPI__STATE__s_1abd2e6c06fb5ae9109fee41e25f63a4e2" kindref="member">transmit_ongoing</ref><sp/>=<sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hspi<sp/><sp/>==<sp/><sp/>&amp;<ref refid="spi__cfg_8c_1a090bd651a060ce23ceba57762f2ef0b3" kindref="member">spi_devices</ref>[1])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Eeprom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPI_HASEEPROM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="io_8c_1a1709c6b36be8ee2ebaf5e076300b6a93" kindref="member">IO_WritePin</ref>(<ref refid="STM32F4xx_2mcu__cfg_8h_1a7039d296d3f95ff10a372201e2685c0c" kindref="member">IO_PIN_DATA_STORAGE_EEPROM_SPI_NSS</ref>,<sp/><ref refid="io__cfg_8h_1a810cb4986f0729a97af72c3c80cdd11da1147ec98546e2e04cba09c4e6e4ff2e3" kindref="member">IO_PIN_SET</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="spi_8h_1a0a99ab4f6aa6ee7dc2abca5483910dde" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="spi_8c_1a0a99ab4f6aa6ee7dc2abca5483910dde" kindref="member">HAL_SPI_TxCpltCallback</ref>(SPI_HandleTypeDef<sp/>*hspi)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hspi<sp/><sp/>==<sp/><sp/>&amp;<ref refid="spi__cfg_8c_1a090bd651a060ce23ceba57762f2ef0b3" kindref="member">spi_devices</ref>[0])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iso-SPI<sp/>Main</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="spi_8c_1a91406c314b72fede70c5b70edfb75dec" kindref="member">SPI_UnsetCS</ref>(1);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spi_state.<ref refid="structSPI__STATE__s_1abd2e6c06fb5ae9109fee41e25f63a4e2" kindref="member">transmit_ongoing</ref><sp/>=<sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hspi<sp/><sp/>==<sp/><sp/>&amp;<ref refid="spi__cfg_8c_1a090bd651a060ce23ceba57762f2ef0b3" kindref="member">spi_devices</ref>[1])<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Eeprom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPI_HASEEPROM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="io_8c_1a1709c6b36be8ee2ebaf5e076300b6a93" kindref="member">IO_WritePin</ref>(<ref refid="STM32F4xx_2mcu__cfg_8h_1a7039d296d3f95ff10a372201e2685c0c" kindref="member">IO_PIN_DATA_STORAGE_EEPROM_SPI_NSS</ref>,<sp/><ref refid="io__cfg_8h_1a810cb4986f0729a97af72c3c80cdd11da1147ec98546e2e04cba09c4e6e4ff2e3" kindref="member">IO_PIN_SET</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">/*void<sp/>HAL_SPI_RxCpltCallback(SPI_HandleTypeDef<sp/>*hspi)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/>if(hspi<sp/>==<sp/>&amp;spi_devices[2]){</highlight></codeline>
<codeline lineno="156"><highlight class="comment"></highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>spiState<sp/>=<sp/>IMC_readByte();</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(spiState<sp/>==<sp/>0x99){</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IO_WritePin(IO_PIN_MCU_0_DEBUG_LED_0,<sp/>SET);</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(spiState<sp/>==<sp/>0x66)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IO_WritePin(IO_PIN_MCU_0_DEBUG_LED_0,<sp/>RESET);</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IMC_enableInterrupt();</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="comment">}</highlight></codeline>
<codeline lineno="167"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="spi_8h_1a0ef3d3e3c5397195b3d768fcbf9eefb4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="spi_8c_1a0ef3d3e3c5397195b3d768fcbf9eefb4" kindref="member">SPI_SetCS</ref>(uint8_t<sp/>busID)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(busID)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPI_NSS_PORT1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="io_8c_1a1709c6b36be8ee2ebaf5e076300b6a93" kindref="member">IO_WritePin</ref>(<ref refid="spi__cfg_8h_1a51e296073dbc0c5ee0597f310e3604be" kindref="member">SPI_NSS_PORT1</ref>,<sp/><ref refid="io__cfg_8h_1a810cb4986f0729a97af72c3c80cdd11daa6a9bf5c875444b48ed54169d1bae9fc" kindref="member">IO_PIN_RESET</ref>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPI_NSS_PORT2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="io_8c_1a1709c6b36be8ee2ebaf5e076300b6a93" kindref="member">IO_WritePin</ref>(SPI_NSS_PORT2,<sp/><ref refid="io__cfg_8h_1a810cb4986f0729a97af72c3c80cdd11daa6a9bf5c875444b48ed54169d1bae9fc" kindref="member">IO_PIN_RESET</ref>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPI_NSS_PORT3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="io_8c_1a1709c6b36be8ee2ebaf5e076300b6a93" kindref="member">IO_WritePin</ref>(SPI_NSS_PORT3,<sp/><ref refid="io__cfg_8h_1a810cb4986f0729a97af72c3c80cdd11daa6a9bf5c875444b48ed54169d1bae9fc" kindref="member">IO_PIN_RESET</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPI_NSS_PORT4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="io_8c_1a1709c6b36be8ee2ebaf5e076300b6a93" kindref="member">IO_WritePin</ref>(SPI_NSS_PORT4,<sp/><ref refid="io__cfg_8h_1a810cb4986f0729a97af72c3c80cdd11daa6a9bf5c875444b48ed54169d1bae9fc" kindref="member">IO_PIN_RESET</ref>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPI_NSS_PORT5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="io_8c_1a1709c6b36be8ee2ebaf5e076300b6a93" kindref="member">IO_WritePin</ref>(SPI_NSS_PORT5,<sp/><ref refid="io__cfg_8h_1a810cb4986f0729a97af72c3c80cdd11daa6a9bf5c875444b48ed54169d1bae9fc" kindref="member">IO_PIN_RESET</ref>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPI_NSS_PORT6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="io_8c_1a1709c6b36be8ee2ebaf5e076300b6a93" kindref="member">IO_WritePin</ref>(SPI_NSS_PORT6,<sp/><ref refid="io__cfg_8h_1a810cb4986f0729a97af72c3c80cdd11daa6a9bf5c875444b48ed54169d1bae9fc" kindref="member">IO_PIN_RESET</ref>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="spi_8h_1a91406c314b72fede70c5b70edfb75dec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="spi_8c_1a91406c314b72fede70c5b70edfb75dec" kindref="member">SPI_UnsetCS</ref>(uint8_t<sp/>busID)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(busID)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPI_NSS_PORT1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="io_8c_1a1709c6b36be8ee2ebaf5e076300b6a93" kindref="member">IO_WritePin</ref>(<ref refid="spi__cfg_8h_1a51e296073dbc0c5ee0597f310e3604be" kindref="member">SPI_NSS_PORT1</ref>,<sp/><ref refid="io__cfg_8h_1a810cb4986f0729a97af72c3c80cdd11da1147ec98546e2e04cba09c4e6e4ff2e3" kindref="member">IO_PIN_SET</ref>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPI_NSS_PORT2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="io_8c_1a1709c6b36be8ee2ebaf5e076300b6a93" kindref="member">IO_WritePin</ref>(SPI_NSS_PORT2,<sp/><ref refid="io__cfg_8h_1a810cb4986f0729a97af72c3c80cdd11da1147ec98546e2e04cba09c4e6e4ff2e3" kindref="member">IO_PIN_SET</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPI_NSS_PORT3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="io_8c_1a1709c6b36be8ee2ebaf5e076300b6a93" kindref="member">IO_WritePin</ref>(SPI_NSS_PORT3,<sp/><ref refid="io__cfg_8h_1a810cb4986f0729a97af72c3c80cdd11da1147ec98546e2e04cba09c4e6e4ff2e3" kindref="member">IO_PIN_SET</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPI_NSS_PORT4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="io_8c_1a1709c6b36be8ee2ebaf5e076300b6a93" kindref="member">IO_WritePin</ref>(SPI_NSS_PORT4,<sp/><ref refid="io__cfg_8h_1a810cb4986f0729a97af72c3c80cdd11da1147ec98546e2e04cba09c4e6e4ff2e3" kindref="member">IO_PIN_SET</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPI_NSS_PORT5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="io_8c_1a1709c6b36be8ee2ebaf5e076300b6a93" kindref="member">IO_WritePin</ref>(SPI_NSS_PORT5,<sp/><ref refid="io__cfg_8h_1a810cb4986f0729a97af72c3c80cdd11da1147ec98546e2e04cba09c4e6e4ff2e3" kindref="member">IO_PIN_SET</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPI_NSS_PORT6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="io_8c_1a1709c6b36be8ee2ebaf5e076300b6a93" kindref="member">IO_WritePin</ref>(SPI_NSS_PORT6,<sp/><ref refid="io__cfg_8h_1a810cb4986f0729a97af72c3c80cdd11da1147ec98546e2e04cba09c4e6e4ff2e3" kindref="member">IO_PIN_SET</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="spi_8h_1a31d14c356ad99590127446672cd32ad4" refkind="member"><highlight class="normal"><ref refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398" kindref="member">STD_RETURN_TYPE_e</ref><sp/><ref refid="spi_8c_1a31d14c356ad99590127446672cd32ad4" kindref="member">SPI_Transmit</ref>(SPI_HandleTypeDef<sp/>*hspi,<sp/>uint8_t<sp/>*pData,<sp/>uint16_t<sp/>Size)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_StatusTypeDef<sp/>statusSPI<sp/>=<sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398" kindref="member">STD_RETURN_TYPE_e</ref><sp/>retVal<sp/>=<sp/><ref refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398ab7f63f013a1b30e2bba00534c6f0477c" kindref="member">E_OK</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPI_TRANSMIT_WAKEUP<sp/><sp/>==<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="spi_8c_1a0ef3d3e3c5397195b3d768fcbf9eefb4" kindref="member">SPI_SetCS</ref>(1);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>statusSPI<sp/>=<sp/>SPI_SendDummyByte(0x01,<sp/>hspi);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(statusSPI<sp/>!=<sp/><ref refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398ab7f63f013a1b30e2bba00534c6f0477c" kindref="member">E_OK</ref>)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398a15b95ea81a76501d167f9beca795cb0e" kindref="member">E_NOT_OK</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI_Wait();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="spi_8c_1a0ef3d3e3c5397195b3d768fcbf9eefb4" kindref="member">SPI_SetCS</ref>(1);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>statusSPI<sp/>=<sp/>HAL_SPI_Transmit_DMA(hspi,<sp/>pData,<sp/>Size);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(statusSPI<sp/>!=<sp/>HAL_OK)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/><ref refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398a15b95ea81a76501d167f9beca795cb0e" kindref="member">E_NOT_OK</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="spi_8h_1a32b8897d5a6e5ce8f097436e983dcdce" refkind="member"><highlight class="normal"><ref refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398" kindref="member">STD_RETURN_TYPE_e</ref><sp/><ref refid="spi_8c_1a32b8897d5a6e5ce8f097436e983dcdce" kindref="member">SPI_TransmitReceive</ref>(SPI_HandleTypeDef<sp/>*hspi,<sp/>uint8_t<sp/>*pTxData,<sp/>uint8_t<sp/>*pRxData,<sp/>uint16_t<sp/>Size)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_StatusTypeDef<sp/>statusSPI<sp/>=<sp/>HAL_ERROR;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398" kindref="member">STD_RETURN_TYPE_e</ref><sp/>retVal<sp/>=<sp/><ref refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398ab7f63f013a1b30e2bba00534c6f0477c" kindref="member">E_OK</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPI_TRANSMIT_WAKEUP<sp/><sp/>==<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="spi_8c_1a0ef3d3e3c5397195b3d768fcbf9eefb4" kindref="member">SPI_SetCS</ref>(1);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>statusSPI<sp/>=<sp/>SPI_SendDummyByte(0x01,<sp/>hspi);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(statusSPI<sp/>!=<sp/><ref refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398ab7f63f013a1b30e2bba00534c6f0477c" kindref="member">E_OK</ref>)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398a15b95ea81a76501d167f9beca795cb0e" kindref="member">E_NOT_OK</ref>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI_Wait();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="spi_8c_1a0ef3d3e3c5397195b3d768fcbf9eefb4" kindref="member">SPI_SetCS</ref>(1);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>statusSPI<sp/>=<sp/>HAL_SPI_TransmitReceive_DMA(hspi,<sp/>pTxData,<sp/>pRxData,<sp/>Size);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(statusSPI<sp/>!=<sp/>HAL_OK)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/><ref refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398a15b95ea81a76501d167f9beca795cb0e" kindref="member">E_NOT_OK</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="spi_8h_1a27af1ec96fd2cb03b6e6739372f8aac3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398" kindref="member">STD_RETURN_TYPE_e</ref><sp/><ref refid="spi_8c_1a27af1ec96fd2cb03b6e6739372f8aac3" kindref="member">SPI_IsTransmitOngoing</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398" kindref="member">STD_RETURN_TYPE_e</ref><sp/>retval<sp/>=<sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>retval<sp/><sp/><sp/><sp/>=<sp/><sp/>spi_state.<ref refid="structSPI__STATE__s_1abd2e6c06fb5ae9109fee41e25f63a4e2" kindref="member">transmit_ongoing</ref>;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(retval);</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="spi_8h_1ac76c884ebda9a3d04a2699ade7dfda9e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="spi_8c_1ac76c884ebda9a3d04a2699ade7dfda9e" kindref="member">SPI_SetTransmitOngoing</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>spi_state.<ref refid="structSPI__STATE__s_1abd2e6c06fb5ae9109fee41e25f63a4e2" kindref="member">transmit_ongoing</ref><sp/>=<sp/><ref refid="std__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/spi/spi.c"/>
  </compounddef>
</doxygen>
