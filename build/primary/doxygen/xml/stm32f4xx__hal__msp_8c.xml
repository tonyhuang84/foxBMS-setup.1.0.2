<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="stm32f4xx__hal__msp_8c" kind="file" language="C++">
    <compoundname>stm32f4xx_hal_msp.c</compoundname>
    <includes local="yes">stm32f4xx_hal.h</includes>
    <includes refid="dma_8h" local="yes">dma.h</includes>
    <incdepgraph>
      <node id="2801">
        <label>dma.h</label>
        <link refid="dma_8h"/>
        <childnode refid="2802" relation="include">
        </childnode>
      </node>
      <node id="2802">
        <label>dma_cfg.h</label>
        <link refid="dma__cfg_8h"/>
        <childnode refid="2803" relation="include">
        </childnode>
      </node>
      <node id="2803">
        <label>mcu_cfg.h</label>
      </node>
      <node id="2800">
        <label>stm32f4xx_hal.h</label>
      </node>
      <node id="2799">
        <label>stm32f4xx_hal_msp.c</label>
        <link refid="stm32f4xx__hal__msp_8c"/>
        <childnode refid="2800" relation="include">
        </childnode>
        <childnode refid="2801" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="stm32f4xx__hal__msp_8c_1a83d38bda3abf48cb42a2ac1470f34018" prot="public" static="yes" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t CAN_CLK1_enabled</definition>
        <argsstring></argsstring>
        <name>CAN_CLK1_enabled</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/config/STM32F4xx/stm32f4xx_hal_msp.c" line="63" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/config/STM32F4xx/stm32f4xx_hal_msp.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__HAL__MSP__Private__Functions_1gae4fb8e66865c87d0ebab74a726a6891f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_MspInit</definition>
        <argsstring>(void)</argsstring>
        <name>HAL_MspInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initializes the Global MSP. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function is called from HAL_Init() function to perform system level initialization (GPIOs, clock, DMA, interrupt). </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/config/STM32F4xx/stm32f4xx_hal_msp.c" line="77" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/config/STM32F4xx/stm32f4xx_hal_msp.c" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="group__HAL__MSP__Private__Functions_1gadd10d026ef02d00e32e80c9eab9db830" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_MspDeInit</definition>
        <argsstring>(void)</argsstring>
        <name>HAL_MspDeInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>DeInitializes the Global MSP. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This functiona is called from HAL_DeInit() function to perform system level de-initialization (GPIOs, clock, DMA, interrupt). </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/config/STM32F4xx/stm32f4xx_hal_msp.c" line="88" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/config/STM32F4xx/stm32f4xx_hal_msp.c" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="group__HAL__MSP__Private__Functions_1ga4f778ad7de857377eb5493377047e72d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_PPP_MspInit</definition>
        <argsstring>(void)</argsstring>
        <name>HAL_PPP_MspInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initializes the PPP MSP. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This functiona is called from HAL_PPP_Init() function to perform peripheral(PPP) system level initialization (GPIOs, clock, DMA, interrupt) </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/config/STM32F4xx/stm32f4xx_hal_msp.c" line="99" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/config/STM32F4xx/stm32f4xx_hal_msp.c" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="group__HAL__MSP__Private__Functions_1gaca177eaaeb329fc02e292efd92a8ed13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_PPP_MspDeInit</definition>
        <argsstring>(void)</argsstring>
        <name>HAL_PPP_MspDeInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>DeInitializes the PPP MSP. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This functiona is called from HAL_PPP_DeInit() function to perform peripheral(PPP) system level de-initialization (GPIOs, clock, DMA, interrupt) </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/config/STM32F4xx/stm32f4xx_hal_msp.c" line="110" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/config/STM32F4xx/stm32f4xx_hal_msp.c" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="group__HAL__MSP__Private__Functions_1ga8ecddba6a06c36b74e0b754bde266414" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_CAN_MspInit</definition>
        <argsstring>(CAN_HandleTypeDef *hcan)</argsstring>
        <name>HAL_CAN_MspInit</name>
        <param>
          <type>CAN_HandleTypeDef *</type>
          <declname>hcan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inizalizes the CAN modules, called by HAL_CAN_Init() </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/config/STM32F4xx/stm32f4xx_hal_msp.c" line="119" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/config/STM32F4xx/stm32f4xx_hal_msp.c" bodystart="119" bodyend="142"/>
        <references refid="stm32f4xx__hal__msp_8c_1a83d38bda3abf48cb42a2ac1470f34018" compoundref="stm32f4xx__hal__msp_8c" startline="63">CAN_CLK1_enabled</references>
      </memberdef>
      <memberdef kind="function" id="group__HAL__MSP__Private__Functions_1ga7961550b05594a87512b20a4157713e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_CAN_MspDeInit</definition>
        <argsstring>(CAN_HandleTypeDef *hcan)</argsstring>
        <name>HAL_CAN_MspDeInit</name>
        <param>
          <type>CAN_HandleTypeDef *</type>
          <declname>hcan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deinitalizes the CAN modules </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/config/STM32F4xx/stm32f4xx_hal_msp.c" line="148" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/config/STM32F4xx/stm32f4xx_hal_msp.c" bodystart="148" bodyend="179"/>
        <references refid="stm32f4xx__hal__msp_8c_1a83d38bda3abf48cb42a2ac1470f34018" compoundref="stm32f4xx__hal__msp_8c" startline="63">CAN_CLK1_enabled</references>
      </memberdef>
      <memberdef kind="function" id="group__HAL__MSP__Private__Functions_1ga17f583be14b22caffa6c4e56dcd035ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_SPI_MspInit</definition>
        <argsstring>(SPI_HandleTypeDef *hspi)</argsstring>
        <name>HAL_SPI_MspInit</name>
        <param>
          <type>SPI_HandleTypeDef *</type>
          <declname>hspi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>inits SPI 1-3 configures SPI-Pins and SPI-Clocks called by HAL_SPI_Init()</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hspi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to SPI hardware handle </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/config/STM32F4xx/stm32f4xx_hal_msp.c" line="194" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/config/STM32F4xx/stm32f4xx_hal_msp.c" bodystart="194" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="group__HAL__MSP__Private__Functions_1gabadc4d4974af1afd943e8d13589068e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_SPI_MspDeInit</definition>
        <argsstring>(SPI_HandleTypeDef *hspi)</argsstring>
        <name>HAL_SPI_MspDeInit</name>
        <param>
          <type>SPI_HandleTypeDef *</type>
          <declname>hspi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>de-inits SPI 1-3 called by HAL-Functions</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hspi</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to SPI hardware handle </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/config/STM32F4xx/stm32f4xx_hal_msp.c" line="223" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/config/STM32F4xx/stm32f4xx_hal_msp.c" bodystart="223" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="group__HAL__MSP__Private__Functions_1ga0e553b32211877322f949b14801bbfa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HAL_UART_MspInit</definition>
        <argsstring>(UART_HandleTypeDef *huart)</argsstring>
        <name>HAL_UART_MspInit</name>
        <param>
          <type>UART_HandleTypeDef *</type>
          <declname>huart</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>USART2 GPIO Configuration PA2 ---<mdash/>&gt; USART2_TX PA3 ---<mdash/>&gt; USART2_RX</para><para>USART2 GPIO Configuration PA2 ---<mdash/>&gt; USART2_TX PA3 ---<mdash/>&gt; USART2_RX</para>        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/config/STM32F4xx/stm32f4xx_hal_msp.c" line="252" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/config/STM32F4xx/stm32f4xx_hal_msp.c" bodystart="252" bodyend="282"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>HAL MSP Module, definition of initialization/de-initialization functions called when hardware units are activated/deactivated, based on stm32f4xx_hal_msp_template.c. </para>    </briefdescription>
    <detaileddescription>
<para>This file contains the HAL System and Peripheral (PPP) MSP initialization and de-initialization functions. It should be copied to the application folder and renamed into &apos;<ref refid="stm32f4xx__hal__msp_8c" kindref="compound">stm32f4xx_hal_msp.c</ref>&apos;.</para><para><simplesect kind="author"><para>STMicroelectronics </para></simplesect>
<simplesect kind="date"><para>2016</para></simplesect>
<simplesect kind="author"><para>MCD Application Team </para></simplesect>
<simplesect kind="version"><para>V1.5.0 </para></simplesect>
<simplesect kind="date"><para>06-May-2016 </para></simplesect>
<simplesect kind="attention"><para></para></simplesect>
<heading level="2"><center><copy/> COPYRIGHT(c) 2016 STMicroelectronics</center></heading>
</para><para>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:<orderedlist>
<listitem><para>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</para></listitem><listitem><para>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</para></listitem><listitem><para>Neither the name of STMicroelectronics nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</para></listitem></orderedlist>
</para><para>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="50"><highlight class="comment">/*==================<sp/>Includes<sp/>=============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stm32f4xx_hal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dma_8h" kindref="compound">dma.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Macros<sp/>and<sp/>Definitions<sp/>===============================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Function<sp/>Prototypes<sp/>==================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Function<sp/>Implementations<sp/>=============================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="stm32f4xx__hal__msp_8c_1a83d38bda3abf48cb42a2ac1470f34018" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="stm32f4xx__hal__msp_8c_1a83d38bda3abf48cb42a2ac1470f34018" kindref="member">CAN_CLK1_enabled</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="group__HAL__MSP__Private__Functions_1gae4fb8e66865c87d0ebab74a726a6891f" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__HAL__MSP__Private__Functions_1gae4fb8e66865c87d0ebab74a726a6891f" kindref="member">HAL_MspInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="group__HAL__MSP__Private__Functions_1gadd10d026ef02d00e32e80c9eab9db830" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__HAL__MSP__Private__Functions_1gadd10d026ef02d00e32e80c9eab9db830" kindref="member">HAL_MspDeInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="group__HAL__MSP__Private__Functions_1ga4f778ad7de857377eb5493377047e72d" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__HAL__MSP__Private__Functions_1ga4f778ad7de857377eb5493377047e72d" kindref="member">HAL_PPP_MspInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="group__HAL__MSP__Private__Functions_1gaca177eaaeb329fc02e292efd92a8ed13" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__HAL__MSP__Private__Functions_1gaca177eaaeb329fc02e292efd92a8ed13" kindref="member">HAL_PPP_MspDeInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="group__HAL__MSP__Private__Functions_1ga8ecddba6a06c36b74e0b754bde266414" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__HAL__MSP__Private__Functions_1ga8ecddba6a06c36b74e0b754bde266414" kindref="member">HAL_CAN_MspInit</ref>(CAN_HandleTypeDef*<sp/>hcan)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hcan-&gt;Instance<sp/><sp/>==<sp/><sp/>CAN1)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stm32f4xx__hal__msp_8c_1a83d38bda3abf48cb42a2ac1470f34018" kindref="member">CAN_CLK1_enabled</ref>++;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stm32f4xx__hal__msp_8c_1a83d38bda3abf48cb42a2ac1470f34018" kindref="member">CAN_CLK1_enabled</ref><sp/><sp/>==<sp/><sp/>1)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>CAN1<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_CAN1_CLK_ENABLE();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hcan-&gt;Instance<sp/><sp/>==<sp/><sp/><sp/>CAN2)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stm32f4xx__hal__msp_8c_1a83d38bda3abf48cb42a2ac1470f34018" kindref="member">CAN_CLK1_enabled</ref>++;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stm32f4xx__hal__msp_8c_1a83d38bda3abf48cb42a2ac1470f34018" kindref="member">CAN_CLK1_enabled</ref><sp/><sp/>==<sp/><sp/>1)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>CAN1<sp/>clock.<sp/>CAN1<sp/>clock<sp/>needs<sp/>to<sp/>run<sp/>if<sp/>CAN2<sp/>clock<sp/>is<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_CAN1_CLK_ENABLE();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>CAN2<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_CAN2_CLK_ENABLE();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="group__HAL__MSP__Private__Functions_1ga7961550b05594a87512b20a4157713e8" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__HAL__MSP__Private__Functions_1ga7961550b05594a87512b20a4157713e8" kindref="member">HAL_CAN_MspDeInit</ref>(CAN_HandleTypeDef*<sp/>hcan)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hcan-&gt;Instance<sp/><sp/>==<sp/><sp/>CAN1)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stm32f4xx__hal__msp_8c_1a83d38bda3abf48cb42a2ac1470f34018" kindref="member">CAN_CLK1_enabled</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stm32f4xx__hal__msp_8c_1a83d38bda3abf48cb42a2ac1470f34018" kindref="member">CAN_CLK1_enabled</ref>--;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stm32f4xx__hal__msp_8c_1a83d38bda3abf48cb42a2ac1470f34018" kindref="member">CAN_CLK1_enabled</ref><sp/><sp/>==<sp/><sp/>0)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>CAN1<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_CAN1_CLK_DISABLE();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hcan-&gt;Instance<sp/><sp/>==<sp/><sp/><sp/>CAN2)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>CAN2<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_CAN2_CLK_DISABLE();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stm32f4xx__hal__msp_8c_1a83d38bda3abf48cb42a2ac1470f34018" kindref="member">CAN_CLK1_enabled</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stm32f4xx__hal__msp_8c_1a83d38bda3abf48cb42a2ac1470f34018" kindref="member">CAN_CLK1_enabled</ref>--;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stm32f4xx__hal__msp_8c_1a83d38bda3abf48cb42a2ac1470f34018" kindref="member">CAN_CLK1_enabled</ref><sp/><sp/>==<sp/><sp/>0)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>CAN1<sp/>clock.<sp/>CAN1<sp/>clock<sp/>needs<sp/>to<sp/>run<sp/>if<sp/>CAN2<sp/>clock<sp/>is<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_CAN1_CLK_DISABLE();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="group__HAL__MSP__Private__Functions_1ga17f583be14b22caffa6c4e56dcd035ef" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__HAL__MSP__Private__Functions_1ga17f583be14b22caffa6c4e56dcd035ef" kindref="member">HAL_SPI_MspInit</ref>(SPI_HandleTypeDef*<sp/>hspi)</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>GPIO_InitTypeDef<sp/>GPIO_InitStruct;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>BEGIN<sp/>SPI1_MspInit<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>END<sp/>SPI1_MspInit<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>GPIO_InitTypeDef<sp/>GPIO_InitStruct;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hspi-&gt;Instance<sp/>==<sp/>SPI6)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>SPI4<sp/>peripheral<sp/>clock<sp/>enable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>__HAL_RCC_SPI6_CLK_ENABLE();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="group__HAL__MSP__Private__Functions_1gabadc4d4974af1afd943e8d13589068e1" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__HAL__MSP__Private__Functions_1gabadc4d4974af1afd943e8d13589068e1" kindref="member">HAL_SPI_MspDeInit</ref>(SPI_HandleTypeDef*<sp/>hspi)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hspi-&gt;Instance<sp/>==<sp/>SPI4)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>BEGIN<sp/>SPI4_MspDeInit<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>END<sp/>SPI4_MspDeInit<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Peripheral<sp/>clock<sp/>disable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>__SPI1_CLK_DISABLE();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>__SPI4_CLK_DISABLE();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_GPIO_DeInit(GPIOE,<sp/>GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_5|GPIO_PIN_6);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>BEGIN<sp/>SPI1_MspDeInit<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>END<sp/>SPI1_MspDeInit<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hspi-&gt;Instance<sp/>==<sp/>SPI6)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>__SPI6_CLK_DISABLE();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="group__HAL__MSP__Private__Functions_1ga0e553b32211877322f949b14801bbfa7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__HAL__MSP__Private__Functions_1ga0e553b32211877322f949b14801bbfa7" kindref="member">HAL_UART_MspInit</ref>(UART_HandleTypeDef*<sp/>huart)</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(huart-&gt;Instance==USART3)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>BEGIN<sp/>USART2_MspInit<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>END<sp/>USART2_MspInit<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Peripheral<sp/>clock<sp/>enable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>__USART3_CLK_ENABLE();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>/**USART2<sp/>GPIO<sp/>Configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>PA2<sp/><sp/><sp/><sp/><sp/>------&gt;<sp/>USART2_TX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>PA3<sp/><sp/><sp/><sp/><sp/>------&gt;<sp/>USART2_RX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>GPIO_InitStruct.Pin<sp/>=<sp/>GPIO_PIN_2|GPIO_PIN_3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>GPIO_InitStruct.Mode<sp/>=<sp/>GPIO_MODE_AF_PP;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>GPIO_InitStruct.Pull<sp/>=<sp/>GPIO_PULLUP;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>GPIO_InitStruct.Speed<sp/>=<sp/>GPIO_SPEED_LOW;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>GPIO_InitStruct.Alternate<sp/>=<sp/>GPIO_AF7_USART2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>HAL_GPIO_Init(GPIOA,<sp/>&amp;GPIO_InitStruct);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>BEGIN<sp/>USART2_MspInit<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>END<sp/>USART2_MspInit<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(huart-&gt;Instance==USART2)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Peripheral<sp/>clock<sp/>enable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__USART2_CLK_ENABLE();<sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>USE_FULL_ASSERT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assert_failed(uint8_t*<sp/>srcfile,<sp/>uint32_t<sp/>srcline)</highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>;<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="comment">/************************<sp/>(C)<sp/>COPYRIGHT<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/config/STM32F4xx/stm32f4xx_hal_msp.c"/>
  </compounddef>
</doxygen>
