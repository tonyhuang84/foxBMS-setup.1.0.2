<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="nvic_8c" kind="file" language="C++">
    <compoundname>nvic.c</compoundname>
    <includes refid="general_8h" local="yes">general.h</includes>
    <includes refid="nvic_8h" local="yes">nvic.h</includes>
    <includes refid="diag_8h" local="yes">diag.h</includes>
    <includes local="yes">mcu_cfg.h</includes>
    <incdepgraph>
      <node id="2207">
        <label>general.h</label>
        <link refid="general_8h"/>
        <childnode refid="2208" relation="include">
        </childnode>
        <childnode refid="2209" relation="include">
        </childnode>
      </node>
      <node id="2217">
        <label>rtc.h</label>
        <link refid="rtc_8h"/>
        <childnode refid="2218" relation="include">
        </childnode>
        <childnode refid="2212" relation="include">
        </childnode>
      </node>
      <node id="2208">
        <label>stdint.h</label>
      </node>
      <node id="2213">
        <label>diag.h</label>
        <link refid="diag_8h"/>
        <childnode refid="2214" relation="include">
        </childnode>
        <childnode refid="2215" relation="include">
        </childnode>
      </node>
      <node id="2214">
        <label>diag_cfg.h</label>
        <link refid="diag__cfg_8h"/>
        <childnode refid="2215" relation="include">
        </childnode>
        <childnode refid="2216" relation="include">
        </childnode>
        <childnode refid="2217" relation="include">
        </childnode>
      </node>
      <node id="2211">
        <label>nvic_cfg.h</label>
        <link refid="nvic__cfg_8h"/>
        <childnode refid="2212" relation="include">
        </childnode>
      </node>
      <node id="2206">
        <label>nvic.c</label>
        <link refid="nvic_8c"/>
        <childnode refid="2207" relation="include">
        </childnode>
        <childnode refid="2210" relation="include">
        </childnode>
        <childnode refid="2213" relation="include">
        </childnode>
        <childnode refid="2212" relation="include">
        </childnode>
      </node>
      <node id="2210">
        <label>nvic.h</label>
        <link refid="nvic_8h"/>
        <childnode refid="2211" relation="include">
        </childnode>
      </node>
      <node id="2212">
        <label>mcu_cfg.h</label>
      </node>
      <node id="2209">
        <label>std_types.h</label>
        <link refid="std__types_8h"/>
      </node>
      <node id="2218">
        <label>rtc_cfg.h</label>
        <link refid="rtc__cfg_8h"/>
        <childnode refid="2212" relation="include">
        </childnode>
      </node>
      <node id="2216">
        <label>diag_id_cfg.h</label>
        <link refid="diag__id__cfg_8h"/>
      </node>
      <node id="2215">
        <label>batterysystem_cfg.h</label>
        <link refid="batterysystem__cfg_8h"/>
        <childnode refid="2207" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="nvic_8c_1a17f2b2a1889138fa01456c8f68a19449" prot="public" static="no">
        <name>__NVIC_EXTI_SELECT_LINE</name>
        <param><defname>__EXTI_LINE__</defname></param>
        <initializer>(EXTI-&gt;IMR | (__EXTI_LINE__))</initializer>
        <briefdescription>
<para>Sets the specified EXTI line. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&lt;strong&gt;EXTI_LINE&lt;/strong&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the EXTI line flag to check. This parameter can be GPIO_PIN_x where x can be(0..15) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>void</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/nvic.c" line="83" column="9" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/nvic.c" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nvic_8c_1a778322a9192c7887dfebcb11222cc100" prot="public" static="no">
        <name>__NVIC_EXTI_SELECT_RISING_EDGE</name>
        <param><defname>__EXTI_LINE__</defname></param>
        <initializer>(EXTI-&gt;RTSR | (__EXTI_LINE__))</initializer>
        <briefdescription>
<para>Sets the specified EXTI line to trigger on rising edges. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&lt;strong&gt;EXTI_LINE&lt;/strong&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the EXTI line flag to check. This parameter can be GPIO_PIN_x where x can be(0..15) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>void</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/nvic.c" line="91" column="9" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/nvic.c" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nvic_8c_1a8217b97a0a426ad9bb311d353e66f909" prot="public" static="no">
        <name>__NVIC_EXTI_SELECT_FALLING_EDGE</name>
        <param><defname>__EXTI_LINE__</defname></param>
        <initializer>(EXTI-&gt;RTSR | (__EXTI_LINE__))</initializer>
        <briefdescription>
<para>Sets the specified EXTI line to trigger on falling edges. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&lt;strong&gt;EXTI_LINE&lt;/strong&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the EXTI line flag to check. This parameter can be GPIO_PIN_x where x can be(0..15) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>void</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/nvic.c" line="100" column="9" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/nvic.c" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="nvic_8c_1abc0deed107f8b105a0f01d890128ac46" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void NVIC_InitEXTI</definition>
        <argsstring>(void)</argsstring>
        <name>NVIC_InitEXTI</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/nvic.c" line="105" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/nvic.c" bodystart="195" bodyend="212"/>
        <references refid="nvic_8c_1a17f2b2a1889138fa01456c8f68a19449" compoundref="nvic_8c" startline="83">__NVIC_EXTI_SELECT_LINE</references>
        <references refid="nvic_8c_1a778322a9192c7887dfebcb11222cc100" compoundref="nvic_8c" startline="91">__NVIC_EXTI_SELECT_RISING_EDGE</references>
        <references refid="nvic_8c_1a8217b97a0a426ad9bb311d353e66f909" compoundref="nvic_8c" startline="100">__NVIC_EXTI_SELECT_FALLING_EDGE</references>
      </memberdef>
      <memberdef kind="function" id="nvic_8c_1a31f2a19589eeadbf5ad1e592ddcea455" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NVIC_PreOsInit</definition>
        <argsstring>(void)</argsstring>
        <name>NVIC_PreOsInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initializes and enables interrupts for usage before operating system has started. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/nvic.c" line="109" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/nvic.c" bodystart="109" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="nvic_8c_1a609f6efbe6a90d1908ae1e3f1a7096fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NVIC_PostOsInit</definition>
        <argsstring>(void)</argsstring>
        <name>NVIC_PostOsInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initializes and enables interrupts for usage after operating system has started. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/nvic.c" line="114" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/nvic.c" bodystart="114" bodyend="173"/>
        <references refid="nvic__cfg_8c_1a51a6fd3fae58ac66dd7c5859a4c5e0c5" compoundref="nvic__cfg_8c" startline="96">nvic_cfg_length</references>
        <references refid="nvic__cfg_8c_1a3e2ff0dce043bfe0c23ad30d0b1e43eb" compoundref="nvic__cfg_8c" startline="65">nvic_interrupts</references>
        <references refid="structNVIC__InitStruct__s_1abc52307d1754ab65885f69b7ab875e97" compoundref="nvic__cfg_8h" startline="56">NVIC_InitStruct_s::Prio</references>
        <references refid="group__API__DIAG_1gaf3e14f837ad6b7df26392f0164a8a0bd" compoundref="diag_8c" startline="450" endline="484">DIAG_Handler</references>
        <references refid="diag__cfg_8h_1a784e3f5a94879333b96d6975ea3770c6" compoundref="diag__cfg_8h" startline="99">DIAG_CH_NVIC_INIT_FAILURE</references>
        <references refid="diag__id__cfg_8h_1a1cf4ebb501b8762842208748e9f44868a5d181c9c635e48349f8b78ed23749482" compoundref="diag__id__cfg_8h" startline="44">DIAG_EVENT_NOK</references>
        <references refid="nvic_8c_1abc0deed107f8b105a0f01d890128ac46" compoundref="nvic_8c" startline="195" endline="212">NVIC_InitEXTI</references>
        <references refid="nvic__cfg_8h_1ac71000c5fe2076f48dc1522b45793fdead2f084ab0460b22e6649479bb596103d" compoundref="nvic__cfg_8h" startline="45">NVIC_IRQ_ENABLE</references>
      </memberdef>
      <memberdef kind="function" id="nvic_8c_1a284efe8c7e1c409a9bc43d0d3d638066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NVIC_EnableInterrupts</definition>
        <argsstring>(IRQn_Type interrupt)</argsstring>
        <name>NVIC_EnableInterrupts</name>
        <param>
          <type>IRQn_Type</type>
          <declname>interrupt</declname>
        </param>
        <briefdescription>
<para>Enables interrupt, if interrupt is not locked. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interrupt</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt to enable</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/nvic.c" line="176" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/nvic.c" bodystart="176" bodyend="183"/>
        <references refid="nvic__cfg_8c_1a51a6fd3fae58ac66dd7c5859a4c5e0c5" compoundref="nvic__cfg_8c" startline="96">nvic_cfg_length</references>
        <references refid="nvic__cfg_8c_1a3e2ff0dce043bfe0c23ad30d0b1e43eb" compoundref="nvic__cfg_8c" startline="65">nvic_interrupts</references>
        <references refid="nvic__cfg_8h_1a58ef9dfcf158c948fa34ab3aa8dbc172a6f92b9016197df7147ebeeb8e671df0e" compoundref="nvic__cfg_8h" startline="50">NVIC_IRQ_LOCK_DISABLE</references>
        <references refid="structNVIC__InitStruct__s_1ad80cb8344a91d77f953ef49839c84cbb" compoundref="nvic__cfg_8h" startline="58">NVIC_InitStruct_s::state</references>
        <references refid="nvic__cfg_8h_1ac71000c5fe2076f48dc1522b45793fdead2f084ab0460b22e6649479bb596103d" compoundref="nvic__cfg_8h" startline="45">NVIC_IRQ_ENABLE</references>
      </memberdef>
      <memberdef kind="function" id="nvic_8c_1a0890deaa8e7d3fe5be5854dedb2b9a6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NVIC_DisableInterrupt</definition>
        <argsstring>(IRQn_Type interrupt)</argsstring>
        <name>NVIC_DisableInterrupt</name>
        <param>
          <type>IRQn_Type</type>
          <declname>interrupt</declname>
        </param>
        <briefdescription>
<para>Disables interrupt, if interrupt is not locked. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interrupt</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt to disable</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/nvic.c" line="186" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/nvic.c" bodystart="186" bodyend="193"/>
        <references refid="nvic__cfg_8c_1a51a6fd3fae58ac66dd7c5859a4c5e0c5" compoundref="nvic__cfg_8c" startline="96">nvic_cfg_length</references>
        <references refid="nvic__cfg_8c_1a3e2ff0dce043bfe0c23ad30d0b1e43eb" compoundref="nvic__cfg_8c" startline="65">nvic_interrupts</references>
        <references refid="nvic__cfg_8h_1a58ef9dfcf158c948fa34ab3aa8dbc172a6f92b9016197df7147ebeeb8e671df0e" compoundref="nvic__cfg_8h" startline="50">NVIC_IRQ_LOCK_DISABLE</references>
        <references refid="structNVIC__InitStruct__s_1ad80cb8344a91d77f953ef49839c84cbb" compoundref="nvic__cfg_8h" startline="58">NVIC_InitStruct_s::state</references>
        <references refid="nvic__cfg_8h_1ac71000c5fe2076f48dc1522b45793fdea6fab0ce7cda32afb1943cb032e880fc7" compoundref="nvic__cfg_8h" startline="46">NVIC_IRQ_DISABLE</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Functions for setting and enabling interrupts. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para><copy/> 2010 - 2017, Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e.V. All rights reserved.</para></simplesect>
BSD 3-Clause License Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:<orderedlist>
<listitem><para>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</para></listitem><listitem><para>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</para></listitem><listitem><para>Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</para></listitem></orderedlist>
</para><para>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</para><para>We kindly request you to use one or more of the following phrases to refer to foxBMS in your hardware, software, documentation or advertising materials:</para><para><Prime/>This product uses parts of foxBMS<registered/><Prime/></para><para><Prime/>This product includes parts of foxBMS<registered/><Prime/></para><para><Prime/>This product is derived from foxBMS<registered/><Prime/></para><para><simplesect kind="author"><para>foxBMS Team </para></simplesect>
<simplesect kind="date"><para>10.09.2015 (date of creation)</para></simplesect>
<simplesect kind="par"><title>Module-prefix</title><para>NVIC</para></simplesect>
The MCU has 16 interrupt priority levels: Priority number 0 means highest (strongest) priority Priority number 15 means lowest (weakest) priority</para><para>FreeRTOS priority model: The systick interrupt has the lowest priority FreeRTOSConfig.h defines the max syscall priority in configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY Interrupts which uses FreeRTOS syscalls have to be assigned to a priority number &gt;= max syscall priority (priority is not stronger than max syscall priority), however they can only use syscalls like xxx_fromISR(). Real-Time-Interrupts should be configured to a priority number &lt; max syscall priority, thus they could not be blocked by FreeRTOS because the blocking priority level is configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY. Real-Time-Interrupts must not use FreeRTOS-API like xxx_fromISR().</para><para>All task priorities are weaker than the interrupt priorities, the strongest task priority will be interrupted by the weakest interrupt priority.</para><para>Example: max syscall priority = 5 <verbatim>Priority number        description
</verbatim> | Task priorities Always weaker than interrupts | 15 Systick interrupt, weakest interrupt | 14..5 Interrupts which use FreeRTOS syscalls | 4..1 Real-Time Interrupts V 0 Real-Time Interrupt, strongest interrupt down = stronger </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="61"><highlight class="comment">/*==================<sp/>Includes<sp/>=============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>recommended<sp/>include<sp/>order<sp/>of<sp/>header<sp/>files:</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>1.<sp/><sp/><sp/><sp/>include<sp/>general.h</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>2.<sp/><sp/><sp/><sp/>include<sp/>module&apos;s<sp/>own<sp/>header</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>3...<sp/><sp/>other<sp/>headers</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="general_8h" kindref="compound">general.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nvic_8h" kindref="compound">nvic.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="diag_8h" kindref="compound">diag.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mcu_cfg.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Macros<sp/>and<sp/>Definitions<sp/>===============================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="nvic_8c_1a17f2b2a1889138fa01456c8f68a19449" refkind="member"><highlight class="preprocessor">#define<sp/>__NVIC_EXTI_SELECT_LINE(__EXTI_LINE__)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(EXTI-&gt;IMR<sp/>|<sp/>(__EXTI_LINE__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="nvic_8c_1a778322a9192c7887dfebcb11222cc100" refkind="member"><highlight class="preprocessor">#define<sp/>__NVIC_EXTI_SELECT_RISING_EDGE(__EXTI_LINE__)<sp/><sp/><sp/>(EXTI-&gt;RTSR<sp/>|<sp/>(__EXTI_LINE__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="nvic_8c_1a8217b97a0a426ad9bb311d353e66f909" refkind="member"><highlight class="preprocessor">#define<sp/>__NVIC_EXTI_SELECT_FALLING_EDGE(__EXTI_LINE__)<sp/><sp/><sp/>(EXTI-&gt;RTSR<sp/>|<sp/>(__EXTI_LINE__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Constant<sp/>and<sp/>Variable<sp/>Definitions<sp/>====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Function<sp/>Prototypes<sp/>==================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nvic_8c_1abc0deed107f8b105a0f01d890128ac46" kindref="member">NVIC_InitEXTI</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Function<sp/>Implementations<sp/>=============================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="nvic_8h_1a31f2a19589eeadbf5ad1e592ddcea455" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nvic_8c_1a31f2a19589eeadbf5ad1e592ddcea455" kindref="member">NVIC_PreOsInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="nvic_8h_1a609f6efbe6a90d1908ae1e3f1a7096fa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nvic_8c_1a609f6efbe6a90d1908ae1e3f1a7096fa" kindref="member">NVIC_PostOsInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>indexnumber<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>invalidpriority<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>every<sp/>interrupt<sp/>is<sp/>only<sp/>defined<sp/>once<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="nvic__cfg_8c_1a51a6fd3fae58ac66dd7c5859a4c5e0c5" kindref="member">nvic_cfg_length</ref><sp/>-<sp/>1;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>i<sp/>+<sp/>1;<sp/>j<sp/>&lt;<sp/><ref refid="nvic__cfg_8c_1a51a6fd3fae58ac66dd7c5859a4c5e0c5" kindref="member">nvic_cfg_length</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="nvic__cfg_8c_1a3e2ff0dce043bfe0c23ad30d0b1e43eb" kindref="member">nvic_interrupts</ref>[i].IRQ<sp/>==<sp/><ref refid="nvic__cfg_8c_1a3e2ff0dce043bfe0c23ad30d0b1e43eb" kindref="member">nvic_interrupts</ref>[j].IRQ)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexnumber<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>interrupts<sp/>for<sp/>valid<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="nvic__cfg_8c_1a51a6fd3fae58ac66dd7c5859a4c5e0c5" kindref="member">nvic_cfg_length</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="nvic__cfg_8c_1a3e2ff0dce043bfe0c23ad30d0b1e43eb" kindref="member">nvic_interrupts</ref>[i].Prio<sp/>&gt;<sp/>15)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalidpriority<sp/>=<sp/><ref refid="nvic__cfg_8c_1a3e2ff0dce043bfe0c23ad30d0b1e43eb" kindref="member">nvic_interrupts</ref>[i].<ref refid="structNVIC__InitStruct__s_1abc52307d1754ab65885f69b7ab875e97" kindref="member">Prio</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexnumber<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>here<sp/>if<sp/>error<sp/>occurred<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indexnumber<sp/>!=<sp/>0<sp/>||<sp/>invalidpriority<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>indexnumber<sp/>holds<sp/>entry<sp/>in<sp/>nvic_interrupts<sp/>where<sp/>multiple<sp/>initializations<sp/>occur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>if<sp/>invalidpriority<sp/>is<sp/>also<sp/>unequal<sp/>0,<sp/>it<sp/>holds<sp/>the<sp/>index<sp/>where<sp/>the<sp/>invalid<sp/>priority,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>invalidpriority,<sp/>is<sp/>defined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__API__DIAG_1gaf3e14f837ad6b7df26392f0164a8a0bd" kindref="member">DIAG_Handler</ref>(<ref refid="diag__cfg_8h_1a784e3f5a94879333b96d6975ea3770c6" kindref="member">DIAG_CH_NVIC_INIT_FAILURE</ref>,<sp/><ref refid="diag__id__cfg_8h_1a1cf4ebb501b8762842208748e9f44868a5d181c9c635e48349f8b78ed23749482" kindref="member">DIAG_EVENT_NOK</ref>,<sp/>0,<sp/>NULL);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>SysTick_IRQn<sp/>interrupt<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_NVIC_SetPriority(SysTick_IRQn,<sp/>15,<sp/>0);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>Interrupt<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="nvic__cfg_8c_1a51a6fd3fae58ac66dd7c5859a4c5e0c5" kindref="member">nvic_cfg_length</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAL_NVIC_SetPriority(<ref refid="nvic__cfg_8c_1a3e2ff0dce043bfe0c23ad30d0b1e43eb" kindref="member">nvic_interrupts</ref>[i].IRQ,<sp/><ref refid="nvic__cfg_8c_1a3e2ff0dce043bfe0c23ad30d0b1e43eb" kindref="member">nvic_interrupts</ref>[i].Prio,<sp/>0);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>external<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nvic_8c_1abc0deed107f8b105a0f01d890128ac46" kindref="member">NVIC_InitEXTI</ref>();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>Interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="nvic__cfg_8c_1a51a6fd3fae58ac66dd7c5859a4c5e0c5" kindref="member">nvic_cfg_length</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="nvic__cfg_8c_1a3e2ff0dce043bfe0c23ad30d0b1e43eb" kindref="member">nvic_interrupts</ref>[i].state<sp/>==<sp/><ref refid="nvic__cfg_8h_1ac71000c5fe2076f48dc1522b45793fdead2f084ab0460b22e6649479bb596103d" kindref="member">NVIC_IRQ_ENABLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAL_NVIC_EnableIRQ(<ref refid="nvic__cfg_8c_1a3e2ff0dce043bfe0c23ad30d0b1e43eb" kindref="member">nvic_interrupts</ref>[i].IRQ);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="nvic_8h_1a284efe8c7e1c409a9bc43d0d3d638066" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nvic_8c_1a284efe8c7e1c409a9bc43d0d3d638066" kindref="member">NVIC_EnableInterrupts</ref>(IRQn_Type<sp/>interrupt)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="nvic__cfg_8c_1a51a6fd3fae58ac66dd7c5859a4c5e0c5" kindref="member">nvic_cfg_length</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="nvic__cfg_8c_1a3e2ff0dce043bfe0c23ad30d0b1e43eb" kindref="member">nvic_interrupts</ref>[i].IRQ<sp/>==<sp/>interrupt<sp/>&amp;&amp;<sp/><ref refid="nvic__cfg_8c_1a3e2ff0dce043bfe0c23ad30d0b1e43eb" kindref="member">nvic_interrupts</ref>[i].irqlock<sp/>==<sp/><ref refid="nvic__cfg_8h_1a58ef9dfcf158c948fa34ab3aa8dbc172a6f92b9016197df7147ebeeb8e671df0e" kindref="member">NVIC_IRQ_LOCK_DISABLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nvic__cfg_8c_1a3e2ff0dce043bfe0c23ad30d0b1e43eb" kindref="member">nvic_interrupts</ref>[i].<ref refid="structNVIC__InitStruct__s_1ad80cb8344a91d77f953ef49839c84cbb" kindref="member">state</ref><sp/>=<sp/><ref refid="nvic__cfg_8h_1ac71000c5fe2076f48dc1522b45793fdead2f084ab0460b22e6649479bb596103d" kindref="member">NVIC_IRQ_ENABLE</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAL_NVIC_EnableIRQ(interrupt);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="nvic_8h_1a0890deaa8e7d3fe5be5854dedb2b9a6d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nvic_8c_1a0890deaa8e7d3fe5be5854dedb2b9a6d" kindref="member">NVIC_DisableInterrupt</ref>(IRQn_Type<sp/>interrupt)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="nvic__cfg_8c_1a51a6fd3fae58ac66dd7c5859a4c5e0c5" kindref="member">nvic_cfg_length</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="nvic__cfg_8c_1a3e2ff0dce043bfe0c23ad30d0b1e43eb" kindref="member">nvic_interrupts</ref>[i].IRQ<sp/>==<sp/>interrupt<sp/>&amp;&amp;<sp/><ref refid="nvic__cfg_8c_1a3e2ff0dce043bfe0c23ad30d0b1e43eb" kindref="member">nvic_interrupts</ref>[i].irqlock<sp/>==<sp/><ref refid="nvic__cfg_8h_1a58ef9dfcf158c948fa34ab3aa8dbc172a6f92b9016197df7147ebeeb8e671df0e" kindref="member">NVIC_IRQ_LOCK_DISABLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nvic__cfg_8c_1a3e2ff0dce043bfe0c23ad30d0b1e43eb" kindref="member">nvic_interrupts</ref>[i].<ref refid="structNVIC__InitStruct__s_1ad80cb8344a91d77f953ef49839c84cbb" kindref="member">state</ref><sp/>=<sp/><ref refid="nvic__cfg_8h_1ac71000c5fe2076f48dc1522b45793fdea6fab0ce7cda32afb1943cb032e880fc7" kindref="member">NVIC_IRQ_DISABLE</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAL_NVIC_DisableIRQ(interrupt);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="nvic_8c_1abc0deed107f8b105a0f01d890128ac46" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nvic_8c_1abc0deed107f8b105a0f01d890128ac46" kindref="member">NVIC_InitEXTI</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO:</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>SYSCFG_EXTICR4<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>EXTI_IMR.MR12<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>EXTI_RTSR.TR12/FTSR.TR12<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>uint32_t<sp/>tmp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>SYSCFG-&gt;EXTICR[3];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>__HAL_RCC_SYSCFG_CLK_ENABLE();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>SYSCFG-&gt;EXTICR[3]<sp/>|=<sp/>1;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTI-&gt;IMR<sp/>=<sp/><ref refid="nvic_8c_1a17f2b2a1889138fa01456c8f68a19449" kindref="member">__NVIC_EXTI_SELECT_LINE</ref>(GPIO_PIN_12);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTI-&gt;RTSR<sp/>=<sp/><ref refid="nvic_8c_1a778322a9192c7887dfebcb11222cc100" kindref="member">__NVIC_EXTI_SELECT_RISING_EDGE</ref>(GPIO_PIN_12);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>EXTI-&gt;FTSR<sp/>=<sp/><ref refid="nvic_8c_1a8217b97a0a426ad9bb311d353e66f909" kindref="member">__NVIC_EXTI_SELECT_FALLING_EDGE</ref>(GPIO_PIN_12);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-primary/src/general/nvic.c"/>
  </compounddef>
</doxygen>
