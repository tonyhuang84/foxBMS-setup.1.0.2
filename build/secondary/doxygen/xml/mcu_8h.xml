<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="mcu_8h" kind="file" language="C++">
    <compoundname>mcu.h</compoundname>
    <includes refid="general_8h" local="yes">general.h</includes>
    <includedby refid="bms__cfg_8h" local="yes">bms_cfg.h</includedby>
    <includedby refid="sox_8c" local="yes">sox.c</includedby>
    <includedby refid="sys__cfg_8h" local="yes">sys_cfg.h</includedby>
    <includedby refid="diag_8c" local="yes">diag.c</includedby>
    <includedby refid="main_8c" local="yes">main.c</includedby>
    <includedby refid="adc__ex_8c" local="yes">adc_ex.c</includedby>
    <includedby refid="bkpsram__cfg_8c" local="yes">bkpsram_cfg.c</includedby>
    <includedby refid="can__cfg_8c" local="yes">can_cfg.c</includedby>
    <includedby refid="cansignal__cfg_8c" local="yes">cansignal_cfg.c</includedby>
    <includedby refid="intermcu_8h" local="yes">intermcu.h</includedby>
    <includedby refid="can_8c" local="yes">can.c</includedby>
    <includedby refid="cansignal_8c" local="yes">cansignal.c</includedby>
    <includedby refid="ltc_8c" local="yes">ltc.c</includedby>
    <includedby refid="mcu_8c" local="yes">mcu.c</includedby>
    <includedby refid="spi_8c" local="yes">spi.c</includedby>
    <incdepgraph>
      <node id="1568">
        <label>stdint.h</label>
      </node>
      <node id="1566">
        <label>mcu.h</label>
        <link refid="mcu_8h"/>
        <childnode refid="1567" relation="include">
        </childnode>
      </node>
      <node id="1569">
        <label>std_types.h</label>
        <link refid="std__types_8h"/>
      </node>
      <node id="1567">
        <label>general.h</label>
        <link refid="general_8h"/>
        <childnode refid="1568" relation="include">
        </childnode>
        <childnode refid="1569" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1574">
        <label>appltask_cfg.c</label>
        <link refid="appltask__cfg_8c"/>
      </node>
      <node id="1578">
        <label>bms_cfg.c</label>
        <link refid="bms__cfg_8c"/>
      </node>
      <node id="1571">
        <label>bms_cfg.h</label>
        <link refid="bms__cfg_8h"/>
        <childnode refid="1572" relation="include">
        </childnode>
        <childnode refid="1578" relation="include">
        </childnode>
      </node>
      <node id="1588">
        <label>cansignal_cfg.c</label>
        <link refid="cansignal__cfg_8c"/>
      </node>
      <node id="1590">
        <label>intermcu.c</label>
        <link refid="intermcu_8c"/>
      </node>
      <node id="1589">
        <label>intermcu.h</label>
        <link refid="intermcu_8h"/>
        <childnode refid="1577" relation="include">
        </childnode>
        <childnode refid="1590" relation="include">
        </childnode>
        <childnode refid="1591" relation="include">
        </childnode>
        <childnode refid="1592" relation="include">
        </childnode>
      </node>
      <node id="1596">
        <label>mcu.c</label>
        <link refid="mcu_8c"/>
      </node>
      <node id="1584">
        <label>main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="1570">
        <label>mcu.h</label>
        <link refid="mcu_8h"/>
        <childnode refid="1571" relation="include">
        </childnode>
        <childnode refid="1579" relation="include">
        </childnode>
        <childnode refid="1580" relation="include">
        </childnode>
        <childnode refid="1575" relation="include">
        </childnode>
        <childnode refid="1584" relation="include">
        </childnode>
        <childnode refid="1585" relation="include">
        </childnode>
        <childnode refid="1586" relation="include">
        </childnode>
        <childnode refid="1587" relation="include">
        </childnode>
        <childnode refid="1588" relation="include">
        </childnode>
        <childnode refid="1589" relation="include">
        </childnode>
        <childnode refid="1593" relation="include">
        </childnode>
        <childnode refid="1594" relation="include">
        </childnode>
        <childnode refid="1595" relation="include">
        </childnode>
        <childnode refid="1596" relation="include">
        </childnode>
        <childnode refid="1592" relation="include">
        </childnode>
      </node>
      <node id="1592">
        <label>spi.c</label>
        <link refid="spi_8c"/>
      </node>
      <node id="1583">
        <label>os.c</label>
        <link refid="os_8c"/>
      </node>
      <node id="1576">
        <label>sys.c</label>
        <link refid="sys_8c"/>
      </node>
      <node id="1582">
        <label>sys.h</label>
        <link refid="sys_8h"/>
        <childnode refid="1576" relation="include">
        </childnode>
        <childnode refid="1577" relation="include">
        </childnode>
        <childnode refid="1583" relation="include">
        </childnode>
      </node>
      <node id="1585">
        <label>adc_ex.c</label>
        <link refid="adc__ex_8c"/>
      </node>
      <node id="1591">
        <label>timer.c</label>
        <link refid="timer_8c"/>
      </node>
      <node id="1573">
        <label>bms.c</label>
        <link refid="bms_8c"/>
      </node>
      <node id="1572">
        <label>bms.h</label>
        <link refid="bms_8h"/>
        <childnode refid="1573" relation="include">
        </childnode>
        <childnode refid="1574" relation="include">
        </childnode>
        <childnode refid="1575" relation="include">
        </childnode>
        <childnode refid="1576" relation="include">
        </childnode>
        <childnode refid="1577" relation="include">
        </childnode>
      </node>
      <node id="1577">
        <label>enginetask.c</label>
        <link refid="enginetask_8c"/>
      </node>
      <node id="1579">
        <label>sox.c</label>
        <link refid="sox_8c"/>
      </node>
      <node id="1595">
        <label>ltc.c</label>
        <link refid="ltc_8c"/>
      </node>
      <node id="1586">
        <label>bkpsram_cfg.c</label>
        <link refid="bkpsram__cfg_8c"/>
      </node>
      <node id="1587">
        <label>can_cfg.c</label>
        <link refid="can__cfg_8c"/>
      </node>
      <node id="1594">
        <label>cansignal.c</label>
        <link refid="cansignal_8c"/>
      </node>
      <node id="1593">
        <label>can.c</label>
        <link refid="can_8c"/>
      </node>
      <node id="1581">
        <label>sys_cfg.c</label>
        <link refid="sys__cfg_8c"/>
      </node>
      <node id="1580">
        <label>sys_cfg.h</label>
        <link refid="sys__cfg_8h"/>
        <childnode refid="1581" relation="include">
        </childnode>
        <childnode refid="1582" relation="include">
        </childnode>
      </node>
      <node id="1575">
        <label>diag.c</label>
        <link refid="diag_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structMCU__DeviceID__s" prot="public">MCU_DeviceID_s</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="mcu_8h_1ac898f928970a9d55fcd431ac1fb30ce4" prot="public" static="no" mutable="no">
        <type><ref refid="structMCU__DeviceID__s" kindref="compound">MCU_DeviceID_s</ref></type>
        <definition>MCU_DeviceID_s mcu_unique_deviceID</definition>
        <argsstring></argsstring>
        <name>mcu_unique_deviceID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/mcu/mcu.h" line="52" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/mcu/mcu.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="mcu_8h_1ad73255284eee7230c9082a9f0e0500f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCU_Wait_us</definition>
        <argsstring>(uint32_t time)</argsstring>
        <name>MCU_Wait_us</name>
        <param>
          <type>uint32_t</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>simple wait-loop to wait short periods of time </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>number of microseconds to wait, max. 1000us </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/mcu/mcu.h" line="62" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/mcu/mcu.c" bodystart="62" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="mcu_8h_1aa7a3020dbc1fb1110a8c41a2989f25b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int MCU_DisableINT</definition>
        <argsstring>(void)</argsstring>
        <name>MCU_DisableINT</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>disables interrupts and returns prior state (enabled or disabled) </para>        </briefdescription>
        <detaileddescription>
<para>this function is used for synchronization of real-time interrupts when bypassing FreeRTOS context and could be used (called) from &apos;interrupt blocked&apos; or &apos;interrupt unblocked&apos; context</para><para><simplesect kind="return"><para>current priority mask register, store this value and use it to enable interrupts again with CPU_RestoreINT() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/mcu/mcu.h" line="72" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/mcu/mcu.c" bodystart="95" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="mcu_8h_1a74382aca8f0a3c77df269579204ee9b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCU_RestoreINT</definition>
        <argsstring>(unsigned int primask_reg)</argsstring>
        <name>MCU_RestoreINT</name>
        <param>
          <type>unsigned int</type>
          <declname>primask_reg</declname>
        </param>
        <briefdescription>
<para>restores interrupts to given state (enable or disable) </para>        </briefdescription>
        <detaileddescription>
<para>this function is used for synchronization of real-time interrupts when bypassing FreeRTOS context</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>primask_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>value for priority mask register, for use in case of nesting calling</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/mcu/mcu.h" line="83" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/mcu/mcu.c" bodystart="103" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="mcu_8h_1ad330c9b64342cd301086b357822a1d5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t MCU_SystemResetStatus_Init</definition>
        <argsstring>(void)</argsstring>
        <name>MCU_SystemResetStatus_Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets system reset status. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>csr controller reset status register </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/mcu/mcu.h" line="90" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/mcu/mcu.c" bodystart="117" bodyend="162"/>
        <references refid="group__API__DIAG_1gaf3e14f837ad6b7df26392f0164a8a0bd" compoundref="diag_8c" startline="449" endline="481">DIAG_Handler</references>
        <references refid="diag__cfg_8h_1aed68c0e94bcf97cee97200d60b64fe4b" compoundref="diag__cfg_8h" startline="95">DIAG_CH_WATCHDOGRESET_FAILURE</references>
        <references refid="diag__id__cfg_8h_1a1cf4ebb501b8762842208748e9f44868a5d181c9c635e48349f8b78ed23749482" compoundref="diag__id__cfg_8h" startline="44">DIAG_EVENT_NOK</references>
      </memberdef>
      <memberdef kind="function" id="mcu_8h_1ac5a4af3d1911474d17f4ec0fcdd48bd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t MCU_GetTimeBase</definition>
        <argsstring>(void)</argsstring>
        <name>MCU_GetTimeBase</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>gets systick value which is a 24-bit downcounter, auto refreshed with 71999 </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>time current systick value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/mcu/mcu.h" line="97" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/mcu/mcu.c" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="mcu_8h_1a09e5f493b1f3dc15a07b7b72ad69cede" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t MCU_GetTimeStamp</definition>
        <argsstring>(void)</argsstring>
        <name>MCU_GetTimeStamp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>returns OS based system tick value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>time stamp in ms, based on the OS time. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/mcu/mcu.h" line="104" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/mcu/mcu.c" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="mcu_8h_1abe9ce7ce94ce132936a0076f88a7513e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCU_GetDeviceID</definition>
        <argsstring>(MCU_DeviceID_s *deviceID)</argsstring>
        <name>MCU_GetDeviceID</name>
        <param>
          <type><ref refid="structMCU__DeviceID__s" kindref="compound">MCU_DeviceID_s</ref> *</type>
          <declname>deviceID</declname>
        </param>
        <briefdescription>
<para>Get unique device ID. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/mcu/mcu.h" line="111" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/mcu/mcu.c" bodystart="169" bodyend="177"/>
        <references refid="structMCU__DeviceID__s_1accd8834084207e61cc922c4cf3018389" compoundref="mcu_8h" startline="45">MCU_DeviceID_s::off0</references>
        <references refid="structMCU__DeviceID__s_1a2676826c216b45917976f73b9b8c8621" compoundref="mcu_8h" startline="46">MCU_DeviceID_s::off32</references>
        <references refid="structMCU__DeviceID__s_1a5242a065f63764d11d4f15c9287ad070" compoundref="mcu_8h" startline="47">MCU_DeviceID_s::off64</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Headers for the functions for the MCU to manage time and interrupts. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para><copy/> 2010 - 2017, Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e.V. All rights reserved.</para></simplesect>
BSD 3-Clause License Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:<orderedlist>
<listitem><para>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</para></listitem><listitem><para>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</para></listitem><listitem><para>Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</para></listitem></orderedlist>
</para><para>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</para><para>We kindly request you to use one or more of the following phrases to refer to foxBMS in your hardware, software, documentation or advertising materials:</para><para><Prime/>This product uses parts of foxBMS<registered/><Prime/></para><para><Prime/>This product includes parts of foxBMS<registered/><Prime/></para><para><Prime/>This product is derived from foxBMS<registered/><Prime/></para><para><simplesect kind="author"><para>foxBMS Team </para></simplesect>
<simplesect kind="date"><para>22.11.2015 (date of creation)</para></simplesect>
<simplesect kind="par"><title>Module-prefix</title><para>MCU</para></simplesect>
Header file provides interfaces to set boot information, to disable/enable all interrupts, to wait a designated time and and to get the a timestamp based on the os systick. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="37"><highlight class="preprocessor">#ifndef<sp/>MCU_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCU_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Includes<sp/>=============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="general_8h" kindref="compound">general.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Macros<sp/>and<sp/>Definitions<sp/>===============================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="structMCU__DeviceID__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="45" refid="structMCU__DeviceID__s_1accd8834084207e61cc922c4cf3018389" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structMCU__DeviceID__s_1accd8834084207e61cc922c4cf3018389" kindref="member">off0</ref>;</highlight></codeline>
<codeline lineno="46" refid="structMCU__DeviceID__s_1a2676826c216b45917976f73b9b8c8621" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structMCU__DeviceID__s_1a2676826c216b45917976f73b9b8c8621" kindref="member">off32</ref>;</highlight></codeline>
<codeline lineno="47" refid="structMCU__DeviceID__s_1a5242a065f63764d11d4f15c9287ad070" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structMCU__DeviceID__s_1a5242a065f63764d11d4f15c9287ad070" kindref="member">off64</ref>;</highlight></codeline>
<codeline lineno="48" refid="structMCU__DeviceID__s_1a11610e666fa6c63bcf31b76a7530d799" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structMCU__DeviceID__s_1a11610e666fa6c63bcf31b76a7530d799" kindref="member">crc</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}<ref refid="structMCU__DeviceID__s" kindref="compound">MCU_DeviceID_s</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Constant<sp/>and<sp/>Variable<sp/>Definitions<sp/>====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structMCU__DeviceID__s" kindref="compound">MCU_DeviceID_s</ref><sp/><ref refid="mcu_8h_1ac898f928970a9d55fcd431ac1fb30ce4" kindref="member">mcu_unique_deviceID</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Function<sp/>Prototypes<sp/>==================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mcu_8h_1ad73255284eee7230c9082a9f0e0500f9" kindref="member">MCU_Wait_us</ref>(uint32_t<sp/>time);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mcu_8h_1aa7a3020dbc1fb1110a8c41a2989f25b0" kindref="member">MCU_DisableINT</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mcu_8h_1a74382aca8f0a3c77df269579204ee9b1" kindref="member">MCU_RestoreINT</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>primask_reg);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="mcu_8h_1ad330c9b64342cd301086b357822a1d5e" kindref="member">MCU_SystemResetStatus_Init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="mcu_8h_1ac5a4af3d1911474d17f4ec0fcdd48bd6" kindref="member">MCU_GetTimeBase</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="mcu_8h_1a09e5f493b1f3dc15a07b7b72ad69cede" kindref="member">MCU_GetTimeStamp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mcu_8h_1abe9ce7ce94ce132936a0076f88a7513e" kindref="member">MCU_GetDeviceID</ref>(<ref refid="structMCU__DeviceID__s" kindref="compound">MCU_DeviceID_s</ref><sp/>*<sp/>deviceID);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Function<sp/>Implementations<sp/>=============================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MCU_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/module/mcu/mcu.h"/>
  </compounddef>
</doxygen>
