<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="database_8c" kind="file" language="C++">
    <compoundname>database.c</compoundname>
    <includes refid="general_8h" local="yes">general.h</includes>
    <includes refid="database_8h" local="yes">database.h</includes>
    <includes refid="os_8h" local="yes">os.h</includes>
    <includes refid="enginetask_8h" local="yes">enginetask.h</includes>
    <includes refid="diag_8h" local="yes">diag.h</includes>
    <includes local="yes">string.h</includes>
    <incdepgraph>
      <node id="485">
        <label>database.c</label>
        <link refid="database_8c"/>
        <childnode refid="486" relation="include">
        </childnode>
        <childnode refid="489" relation="include">
        </childnode>
        <childnode refid="492" relation="include">
        </childnode>
        <childnode refid="494" relation="include">
        </childnode>
        <childnode refid="496" relation="include">
        </childnode>
        <childnode refid="506" relation="include">
        </childnode>
      </node>
      <node id="489">
        <label>database.h</label>
        <link refid="database_8h"/>
        <childnode refid="490" relation="include">
        </childnode>
      </node>
      <node id="504">
        <label>io_package_cfg.h</label>
        <link refid="io__package__cfg_8h"/>
      </node>
      <node id="499">
        <label>rtc.h</label>
        <link refid="rtc_8h"/>
        <childnode refid="500" relation="include">
        </childnode>
        <childnode refid="501" relation="include">
        </childnode>
      </node>
      <node id="487">
        <label>stdint.h</label>
      </node>
      <node id="490">
        <label>database_cfg.h</label>
        <link refid="database__cfg_8h"/>
        <childnode refid="491" relation="include">
        </childnode>
      </node>
      <node id="495">
        <label>enginetask_cfg.h</label>
        <link refid="enginetask__cfg_8h"/>
        <childnode refid="486" relation="include">
        </childnode>
        <childnode refid="492" relation="include">
        </childnode>
      </node>
      <node id="493">
        <label>cmsis_os.h</label>
      </node>
      <node id="491">
        <label>batterysystem_cfg.h</label>
        <link refid="batterysystem__cfg_8h"/>
        <childnode refid="486" relation="include">
        </childnode>
      </node>
      <node id="492">
        <label>os.h</label>
        <link refid="os_8h"/>
        <childnode refid="493" relation="include">
        </childnode>
      </node>
      <node id="501">
        <label>mcu_cfg.h</label>
        <link refid="mcu__cfg_8h"/>
        <childnode refid="502" relation="include">
        </childnode>
        <childnode refid="503" relation="include">
        </childnode>
      </node>
      <node id="505">
        <label>io_mcu_cfg.h</label>
        <link refid="io__mcu__cfg_8h"/>
      </node>
      <node id="494">
        <label>enginetask.h</label>
        <link refid="enginetask_8h"/>
        <childnode refid="495" relation="include">
        </childnode>
      </node>
      <node id="503">
        <label>io_cfg.h</label>
        <link refid="io__cfg_8h"/>
        <childnode refid="501" relation="include">
        </childnode>
        <childnode refid="504" relation="include">
        </childnode>
        <childnode refid="505" relation="include">
        </childnode>
      </node>
      <node id="506">
        <label>string.h</label>
      </node>
      <node id="488">
        <label>std_types.h</label>
        <link refid="std__types_8h"/>
      </node>
      <node id="498">
        <label>diag_id_cfg.h</label>
        <link refid="diag__id__cfg_8h"/>
      </node>
      <node id="486">
        <label>general.h</label>
        <link refid="general_8h"/>
        <childnode refid="487" relation="include">
        </childnode>
        <childnode refid="488" relation="include">
        </childnode>
      </node>
      <node id="497">
        <label>diag_cfg.h</label>
        <link refid="diag__cfg_8h"/>
        <childnode refid="491" relation="include">
        </childnode>
        <childnode refid="498" relation="include">
        </childnode>
        <childnode refid="499" relation="include">
        </childnode>
      </node>
      <node id="502">
        <label>stm32f4xx_hal.h</label>
      </node>
      <node id="500">
        <label>rtc_cfg.h</label>
        <link refid="rtc__cfg_8h"/>
        <childnode refid="501" relation="include">
        </childnode>
      </node>
      <node id="496">
        <label>diag.h</label>
        <link refid="diag_8h"/>
        <childnode refid="497" relation="include">
        </childnode>
        <childnode refid="491" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="database_8c_1ac2cc366a3b5c10b1d7c2814af0029c56" prot="public" static="no">
        <name>DATA_QUEUE_TIMEOUT_MS</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum queue timeout time in milliseconds </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/engine/database/database.c" line="56" column="9" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/engine/database/database.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="database_8c_1abce6b7e705b14b803531a192b55e29de" prot="public" static="yes" mutable="no">
        <type><ref refid="structDATA__BASE__HEADER__DEV__s" kindref="compound">DATA_BASE_HEADER_DEV_s</ref> *</type>
        <definition>DATA_BASE_HEADER_DEV_s* data_block_devptr</definition>
        <argsstring></argsstring>
        <name>data_block_devptr</name>
        <initializer>= (<ref refid="structDATA__BASE__HEADER__DEV__s" kindref="compound">DATA_BASE_HEADER_DEV_s</ref> *)<ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/engine/database/database.c" line="60" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/engine/database/database.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="database_8c_1ad4fdd9153d8e46ebbe3ff3d01e336f3d" prot="public" static="yes" mutable="no">
        <type><ref refid="structDATA__BLOCK__ACCESS__s" kindref="compound">DATA_BLOCK_ACCESS_s</ref></type>
        <definition>DATA_BLOCK_ACCESS_s data_block_access[DATA_MAX_BLOCK_NR]</definition>
        <argsstring>[DATA_MAX_BLOCK_NR]</argsstring>
        <name>data_block_access</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/engine/database/database.c" line="61" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/engine/database/database.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="database_8c_1a30ec6818c2e23b11b34ea2c2ceccf01f" prot="public" static="yes" mutable="no">
        <type>osMutexId</type>
        <definition>osMutexId data_base_mutex[DATA_MAX_BLOCK_NR]</definition>
        <argsstring>[DATA_MAX_BLOCK_NR]</argsstring>
        <name>data_base_mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/engine/database/database.c" line="62" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/engine/database/database.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="database_8c_1ac56512eaa1dc0a6ae7174aabd33720d6" prot="public" static="yes" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t data_state</definition>
        <argsstring></argsstring>
        <name>data_state</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>state of database task: 0: not initialized, 1: database ready </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/engine/database/database.c" line="67" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/engine/database/database.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="database_8c_1a15d2ff576e5aa63eac01df9d81ff4c89" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void DATA_Init</definition>
        <argsstring>(DATA_BASE_HEADER_DEV_s *devptr)</argsstring>
        <name>DATA_Init</name>
        <param>
          <type><ref refid="structDATA__BASE__HEADER__DEV__s" kindref="compound">DATA_BASE_HEADER_DEV_s</ref> *</type>
          <declname>devptr</declname>
        </param>
        <briefdescription>
<para>Initialization of database manager. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>devptr</parametername>
</parameternamelist>
<parameterdescription>
<para>(type: <ref refid="structDATA__BASE__HEADER__DEV__s" kindref="compound">DATA_BASE_HEADER_DEV_s</ref>) pointer to device configuration</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/engine/database/database.c" line="72" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/engine/database/database.c" bodystart="242" bodyend="281"/>
        <references refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" compoundref="std__types_8h" startline="40">NULL_PTR</references>
        <references refid="structDATA__BASE__HEADER__DEV__s_1a9c2247b06c09095d5815da8e99e308ad" compoundref="database__cfg_8h" startline="110">DATA_BASE_HEADER_DEV_s::nr_of_blockheader</references>
        <references refid="structDATA__BLOCK__ACCESS__s_1a74d7daabe117c16195c42b9ab004fcd7" compoundref="database_8h" startline="60">DATA_BLOCK_ACCESS_s::WRptr</references>
        <references refid="structDATA__BASE__HEADER__DEV__s_1a0d0803ea24dcf80657d7d76e9b7e0dd9" compoundref="database__cfg_8h" startline="111">DATA_BASE_HEADER_DEV_s::blockheaderptr</references>
        <references refid="database__cfg_8h_1a311de4fcd71b45a64471cce98fb27100ae27f9860c788fb3e2cc35538a868961f" compoundref="database__cfg_8h" startline="93">DOUBLE_BUFFERING</references>
        <references refid="structDATA__BLOCK__ACCESS__s_1abbba39d578864435d50df35472492728" compoundref="database_8h" startline="59">DATA_BLOCK_ACCESS_s::RDptr</references>
        <references refid="database_8c_1a30ec6818c2e23b11b34ea2c2ceccf01f" compoundref="database_8c" startline="62">data_base_mutex</references>
      </memberdef>
      <memberdef kind="function" id="database_8c_1a71c46da113f917afb39cc80c56e598be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DATA_StoreDataBlock</definition>
        <argsstring>(void *dataptrfromSender, DATA_BLOCK_ID_TYPE_e blockID)</argsstring>
        <name>DATA_StoreDataBlock</name>
        <param>
          <type>void *</type>
          <declname>dataptrfromSender</declname>
        </param>
        <param>
          <type><ref refid="database__cfg_8h_1aeec01bdaeac15bc320a373d4593ac2aa" kindref="member">DATA_BLOCK_ID_TYPE_e</ref></type>
          <declname>blockID</declname>
        </param>
        <briefdescription>
<para>Stores a datablock in database. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>blockID</parametername>
</parameternamelist>
<parameterdescription>
<para>(type: DATA_BLOCK_ID_TYPE_e) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataptrfromSender</parametername>
</parameternamelist>
<parameterdescription>
<para>(type: void *) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/engine/database/database.c" line="78" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/engine/database/database.c" bodystart="78" bodyend="105"/>
        <references refid="database_8c_1ac2cc366a3b5c10b1d7c2814af0029c56" compoundref="database_8c" startline="56">DATA_QUEUE_TIMEOUT_MS</references>
        <references refid="structDATA__QUEUE__MESSAGE__s_1aadfc4149a3671549c4f91d5442961ccb" compoundref="database_8h" startline="53">DATA_QUEUE_MESSAGE_s::blockID</references>
        <references refid="structDATA__QUEUE__MESSAGE__s_1a27ab2ea0a108938fce353b69cd6e6cdf">DATA_QUEUE_MESSAGE_s::value</references>
        <references refid="structDATA__QUEUE__MESSAGE__s_1a43261554f8d42316f3b7ab2de680d55a" compoundref="database_8h" startline="51">DATA_QUEUE_MESSAGE_s::voidptr</references>
        <references refid="structDATA__QUEUE__MESSAGE__s_1a7f90aea9c8268a9cfe75fe56ed2d570d" compoundref="database_8h" startline="54">DATA_QUEUE_MESSAGE_s::accesstype</references>
        <references refid="database__cfg_8h_1a146e0fa1ea9fb5bc6c9033931a141be1a3ffa6efae04a5a66bad75f41a2e8708d" compoundref="database__cfg_8h" startline="81">WRITE_ACCESS</references>
        <references refid="enginetask__cfg_8c_1aca362e39966bcd2f7777aa4b9fd4171c" compoundref="enginetask__cfg_8c" startline="89">data_queueID</references>
      </memberdef>
      <memberdef kind="function" id="database_8c_1a1585d5c7665504898be0371c5c6295b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DATA_Task</definition>
        <argsstring>(void)</argsstring>
        <name>DATA_Task</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>trigger of database manager </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/engine/database/database.c" line="108" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/engine/database/database.c" bodystart="108" bodyend="192"/>
        <references refid="database_8c_1ac56512eaa1dc0a6ae7174aabd33720d6" compoundref="database_8c" startline="67">data_state</references>
        <references refid="database_8c_1a15d2ff576e5aa63eac01df9d81ff4c89" compoundref="database_8c" startline="242" endline="281">DATA_Init</references>
        <references refid="database__cfg_8c_1ac202bc9e7cb828a73634dea7ca001762" compoundref="database__cfg_8c" startline="219">data_base_dev</references>
        <references refid="enginetask__cfg_8c_1aca362e39966bcd2f7777aa4b9fd4171c" compoundref="enginetask__cfg_8c" startline="89">data_queueID</references>
        <references refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" compoundref="std__types_8h" startline="40">NULL_PTR</references>
        <references refid="structDATA__QUEUE__MESSAGE__s_1aadfc4149a3671549c4f91d5442961ccb" compoundref="database_8h" startline="53">DATA_QUEUE_MESSAGE_s::blockID</references>
        <references refid="structDATA__QUEUE__MESSAGE__s_1a27ab2ea0a108938fce353b69cd6e6cdf">DATA_QUEUE_MESSAGE_s::value</references>
        <references refid="structDATA__QUEUE__MESSAGE__s_1a43261554f8d42316f3b7ab2de680d55a" compoundref="database_8h" startline="51">DATA_QUEUE_MESSAGE_s::voidptr</references>
        <references refid="structDATA__QUEUE__MESSAGE__s_1a7f90aea9c8268a9cfe75fe56ed2d570d" compoundref="database_8h" startline="54">DATA_QUEUE_MESSAGE_s::accesstype</references>
        <references refid="database__cfg_8h_1a29647333a361ef456746044eaf041e5b" compoundref="database__cfg_8h" startline="49">DATA_MAX_BLOCK_NR</references>
        <references refid="database__cfg_8h_1a146e0fa1ea9fb5bc6c9033931a141be1a3ffa6efae04a5a66bad75f41a2e8708d" compoundref="database__cfg_8h" startline="81">WRITE_ACCESS</references>
        <references refid="structDATA__BASE__HEADER__DEV__s_1a0d0803ea24dcf80657d7d76e9b7e0dd9" compoundref="database__cfg_8h" startline="111">DATA_BASE_HEADER_DEV_s::blockheaderptr</references>
        <references refid="structDATA__BLOCK__ACCESS__s_1a74d7daabe117c16195c42b9ab004fcd7" compoundref="database_8h" startline="60">DATA_BLOCK_ACCESS_s::WRptr</references>
        <references refid="database_8c_1a30ec6818c2e23b11b34ea2c2ceccf01f" compoundref="database_8c" startline="62">data_base_mutex</references>
        <references refid="std__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="std__types_8h" startline="42">TRUE</references>
        <references refid="database__cfg_8h_1a311de4fcd71b45a64471cce98fb27100ae27f9860c788fb3e2cc35538a868961f" compoundref="database__cfg_8h" startline="93">DOUBLE_BUFFERING</references>
        <references refid="structDATA__BLOCK__ACCESS__s_1abbba39d578864435d50df35472492728" compoundref="database_8h" startline="59">DATA_BLOCK_ACCESS_s::RDptr</references>
        <references refid="database__cfg_8h_1a146e0fa1ea9fb5bc6c9033931a141be1ac223a4833c94fa66ccb85f033d259d8a" compoundref="database__cfg_8h" startline="82">READ_ACCESS</references>
        <references refid="database__cfg_8h_1a311de4fcd71b45a64471cce98fb27100a7a07be2ac1b4b4c51e4228a1e150d40d" compoundref="database__cfg_8h" startline="92">SINGLE_BUFFERING</references>
        <references refid="diag_8c_1a7970909aa22bb87427a96c694fbab0e4" compoundref="diag_8c" startline="709" endline="718">DIAG_SysMonNotify</references>
        <references refid="diag__cfg_8h_1ab8bcd0c1c3cbdf47eae14308b979a78fa4ba3cda6fb12ac36bf6be9ca9cae824f" compoundref="diag__cfg_8h" startline="291">DIAG_SYSMON_DATABASE_ID</references>
      </memberdef>
      <memberdef kind="function" id="database_8c_1ace052ca2c5098dcade967992ecebc8bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398" kindref="member">STD_RETURN_TYPE_e</ref></type>
        <definition>STD_RETURN_TYPE_e DATA_GetTable</definition>
        <argsstring>(void *dataptrtoReceiver, DATA_BLOCK_ID_TYPE_e blockID)</argsstring>
        <name>DATA_GetTable</name>
        <param>
          <type>void *</type>
          <declname>dataptrtoReceiver</declname>
        </param>
        <param>
          <type><ref refid="database__cfg_8h_1aeec01bdaeac15bc320a373d4593ac2aa" kindref="member">DATA_BLOCK_ID_TYPE_e</ref></type>
          <declname>blockID</declname>
        </param>
        <briefdescription>
<para>Reads a datablock in database by value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>blockID</parametername>
</parameternamelist>
<parameterdescription>
<para>(type: DATA_BLOCK_ID_TYPE_e) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataptrtoReceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>(type: void *) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>STD_RETURN_TYPE_e </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/engine/database/database.c" line="195" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/engine/database/database.c" bodystart="195" bodyend="225"/>
        <references refid="database_8c_1ac2cc366a3b5c10b1d7c2814af0029c56" compoundref="database_8c" startline="56">DATA_QUEUE_TIMEOUT_MS</references>
        <references refid="structDATA__QUEUE__MESSAGE__s_1aadfc4149a3671549c4f91d5442961ccb" compoundref="database_8h" startline="53">DATA_QUEUE_MESSAGE_s::blockID</references>
        <references refid="structDATA__QUEUE__MESSAGE__s_1a27ab2ea0a108938fce353b69cd6e6cdf">DATA_QUEUE_MESSAGE_s::value</references>
        <references refid="structDATA__QUEUE__MESSAGE__s_1a43261554f8d42316f3b7ab2de680d55a" compoundref="database_8h" startline="51">DATA_QUEUE_MESSAGE_s::voidptr</references>
        <references refid="structDATA__QUEUE__MESSAGE__s_1a7f90aea9c8268a9cfe75fe56ed2d570d" compoundref="database_8h" startline="54">DATA_QUEUE_MESSAGE_s::accesstype</references>
        <references refid="database__cfg_8h_1a146e0fa1ea9fb5bc6c9033931a141be1ac223a4833c94fa66ccb85f033d259d8a" compoundref="database__cfg_8h" startline="82">READ_ACCESS</references>
        <references refid="enginetask__cfg_8c_1aca362e39966bcd2f7777aa4b9fd4171c" compoundref="enginetask__cfg_8c" startline="89">data_queueID</references>
        <references refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398ab7f63f013a1b30e2bba00534c6f0477c" compoundref="std__types_8h" startline="58">E_OK</references>
      </memberdef>
      <memberdef kind="function" id="database_8c_1a2efc6eb177da1d157951867390b07927" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* DATA_GetTablePtrBeginCritical</definition>
        <argsstring>(DATA_BLOCK_ID_TYPE_e blockID)</argsstring>
        <name>DATA_GetTablePtrBeginCritical</name>
        <param>
          <type><ref refid="database__cfg_8h_1aeec01bdaeac15bc320a373d4593ac2aa" kindref="member">DATA_BLOCK_ID_TYPE_e</ref></type>
          <declname>blockID</declname>
        </param>
        <briefdescription>
<para>Gets a pointer to datablock in database () </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>blockID</parametername>
</parameternamelist>
<parameterdescription>
<para>(type: DATA_BLOCK_ID_TYPE_e) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void* RDptr </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/engine/database/database.c" line="228" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/engine/database/database.c" bodystart="228" bodyend="231"/>
        <references refid="structDATA__BLOCK__ACCESS__s_1abbba39d578864435d50df35472492728" compoundref="database_8h" startline="59">DATA_BLOCK_ACCESS_s::RDptr</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Database module implementation. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para><copy/> 2010 - 2017, Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e.V. All rights reserved.</para></simplesect>
BSD 3-Clause License Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:<orderedlist>
<listitem><para>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</para></listitem><listitem><para>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</para></listitem><listitem><para>Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</para></listitem></orderedlist>
</para><para>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</para><para>We kindly request you to use one or more of the following phrases to refer to foxBMS in your hardware, software, documentation or advertising materials:</para><para><Prime/>This product uses parts of foxBMS<registered/><Prime/></para><para><Prime/>This product includes parts of foxBMS<registered/><Prime/></para><para><Prime/>This product is derived from foxBMS<registered/><Prime/></para><para><simplesect kind="author"><para>foxBMS Team </para></simplesect>
<simplesect kind="date"><para>18.08.2015 (date of creation)</para></simplesect>
<simplesect kind="par"><title>Module-prefix</title><para>DATA</para></simplesect>
Implementation of database module </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="35"><highlight class="comment">/*==================<sp/>Includes<sp/>=============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>recommended<sp/>include<sp/>order<sp/>of<sp/>header<sp/>files:</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>1.<sp/><sp/><sp/><sp/>include<sp/>general.h</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>2.<sp/><sp/><sp/><sp/>include<sp/>module&apos;s<sp/>own<sp/>header</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>3...<sp/><sp/>other<sp/>headers</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME<sp/>general<sp/>already<sp/>includes<sp/>database</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="general_8h" kindref="compound">general.h</ref>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>already<sp/>included<sp/>in<sp/>database_cfg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="database_8h" kindref="compound">database.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="os_8h" kindref="compound">os.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="enginetask_8h" kindref="compound">enginetask.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="diag_8h" kindref="compound">diag.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;string.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Macros<sp/>and<sp/>Definitions<sp/>===============================*/</highlight></codeline>
<codeline lineno="56" refid="database_8c_1ac2cc366a3b5c10b1d7c2814af0029c56" refkind="member"><highlight class="preprocessor">#define<sp/>DATA_QUEUE_TIMEOUT_MS<sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Constant<sp/>and<sp/>Variable<sp/>Definitions<sp/>====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME<sp/>Some<sp/>uninitialized<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="database_8c_1abce6b7e705b14b803531a192b55e29de" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structDATA__BASE__HEADER__DEV__s" kindref="compound">DATA_BASE_HEADER_DEV_s</ref><sp/>*<ref refid="database_8c_1abce6b7e705b14b803531a192b55e29de" kindref="member">data_block_devptr</ref><sp/>=<sp/>(<ref refid="structDATA__BASE__HEADER__DEV__s" kindref="compound">DATA_BASE_HEADER_DEV_s</ref><sp/>*)<ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="61" refid="database_8c_1ad4fdd9153d8e46ebbe3ff3d01e336f3d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structDATA__BLOCK__ACCESS__s" kindref="compound">DATA_BLOCK_ACCESS_s</ref><sp/><ref refid="database_8c_1ad4fdd9153d8e46ebbe3ff3d01e336f3d" kindref="member">data_block_access</ref>[<ref refid="database__cfg_8h_1a29647333a361ef456746044eaf041e5b" kindref="member">DATA_MAX_BLOCK_NR</ref>];</highlight></codeline>
<codeline lineno="62" refid="database_8c_1a30ec6818c2e23b11b34ea2c2ceccf01f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>osMutexId<sp/><ref refid="database_8c_1a30ec6818c2e23b11b34ea2c2ceccf01f" kindref="member">data_base_mutex</ref>[<ref refid="database__cfg_8h_1a29647333a361ef456746044eaf041e5b" kindref="member">DATA_MAX_BLOCK_NR</ref>];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="database_8c_1ac56512eaa1dc0a6ae7174aabd33720d6" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="database_8c_1ac56512eaa1dc0a6ae7174aabd33720d6" kindref="member">data_state</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Function<sp/>Prototypes<sp/>==================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="database_8c_1a15d2ff576e5aa63eac01df9d81ff4c89" kindref="member">DATA_Init</ref>(<ref refid="structDATA__BASE__HEADER__DEV__s" kindref="compound">DATA_BASE_HEADER_DEV_s</ref>*<sp/>devptr);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Function<sp/>Implementations<sp/>=============================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Public<sp/>functions<sp/>=====================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="database_8h_1a71c46da113f917afb39cc80c56e598be" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="database_8c_1a71c46da113f917afb39cc80c56e598be" kindref="member">DATA_StoreDataBlock</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dataptrfromSender,<sp/><ref refid="database__cfg_8h_1aeec01bdaeac15bc320a373d4593ac2aa" kindref="member">DATA_BLOCK_ID_TYPE_e</ref><sp/><sp/>blockID)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dataptrfromSender<sp/>is<sp/>a<sp/>pointer<sp/>to<sp/>data<sp/>of<sp/>caller<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dataptr_toptr_fromSender<sp/>is<sp/>a<sp/>pointer<sp/>to<sp/>this<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>used<sp/>for<sp/>passing<sp/>message<sp/>variable<sp/>by<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note:<sp/>xQueueSend()<sp/>always<sp/>takes<sp/>message<sp/>variable<sp/>by<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDATA__QUEUE__MESSAGE__s" kindref="compound">DATA_QUEUE_MESSAGE_s</ref><sp/>data_send_msg;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>TickType_t<sp/>queuetimeout;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>vPortCheckCriticalSection()<sp/>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configASSERT(0);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>queuetimeout<sp/>=<sp/><ref refid="database_8c_1ac2cc366a3b5c10b1d7c2814af0029c56" kindref="member">DATA_QUEUE_TIMEOUT_MS</ref><sp/>/<sp/>portTICK_RATE_MS;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queuetimeout<sp/><sp/>==<sp/><sp/>0)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queuetimeout<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prepare<sp/>send<sp/>message<sp/>with<sp/>attributes<sp/>of<sp/>data<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>data_send_msg.<ref refid="structDATA__QUEUE__MESSAGE__s_1aadfc4149a3671549c4f91d5442961ccb" kindref="member">blockID</ref><sp/>=<sp/>blockID;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>data_send_msg.<ref refid="structDATA__QUEUE__MESSAGE__s_1a27ab2ea0a108938fce353b69cd6e6cdf" kindref="member">value</ref>.<ref refid="structDATA__QUEUE__MESSAGE__s_1a43261554f8d42316f3b7ab2de680d55a" kindref="member">voidptr</ref><sp/>=<sp/>dataptrfromSender;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>data_send_msg.<ref refid="structDATA__QUEUE__MESSAGE__s_1a7f90aea9c8268a9cfe75fe56ed2d570d" kindref="member">accesstype</ref><sp/>=<sp/><ref refid="database__cfg_8h_1a146e0fa1ea9fb5bc6c9033931a141be1a3ffa6efae04a5a66bad75f41a2e8708d" kindref="member">WRITE_ACCESS</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>message<sp/>object<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maximum<sp/>block<sp/>time:<sp/>queuetimeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>xQueueSend(<sp/><ref refid="enginetask__cfg_8c_1aca362e39966bcd2f7777aa4b9fd4171c" kindref="member">data_queueID</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>&amp;data_send_msg,<sp/>queuetimeout);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="database_8h_1a1585d5c7665504898be0371c5c6295b9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="database_8c_1a1585d5c7665504898be0371c5c6295b9" kindref="member">DATA_Task</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDATA__QUEUE__MESSAGE__s" kindref="compound">DATA_QUEUE_MESSAGE_s</ref><sp/>receive_msg;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*srcdataptr;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dstdataptr;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="database__cfg_8h_1aeec01bdaeac15bc320a373d4593ac2aa" kindref="member">DATA_BLOCK_ID_TYPE_e</ref><sp/>blockID;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="database__cfg_8h_1a146e0fa1ea9fb5bc6c9033931a141be1" kindref="member">DATA_BLOCK_ACCESS_TYPE_e</ref><sp/><sp/><sp/><sp/>accesstype;<sp/></highlight><highlight class="comment">/*<sp/>read<sp/>or<sp/>write<sp/>access<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>datalength;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="database__cfg_8h_1a311de4fcd71b45a64471cce98fb27100" kindref="member">DATA_BLOCK_CONSISTENCY_TYPE_e</ref><sp/>buffertype;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="database_8c_1ac56512eaa1dc0a6ae7174aabd33720d6" kindref="member">data_state</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="database_8c_1a15d2ff576e5aa63eac01df9d81ff4c89" kindref="member">DATA_Init</ref>(&amp;<ref refid="database__cfg_8c_1ac202bc9e7cb828a73634dea7ca001762" kindref="member">data_base_dev</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="database_8c_1ac56512eaa1dc0a6ae7174aabd33720d6" kindref="member">data_state</ref>=1;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="enginetask__cfg_8c_1aca362e39966bcd2f7777aa4b9fd4171c" kindref="member">data_queueID</ref><sp/>!=<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xQueueReceive(<ref refid="enginetask__cfg_8c_1aca362e39966bcd2f7777aa4b9fd4171c" kindref="member">data_queueID</ref>,(&amp;receive_msg),(TickType_t<sp/>)<sp/>1)<sp/>)<sp/><sp/></highlight><highlight class="comment">//<sp/>scan<sp/>queue<sp/>and<sp/>wait<sp/>for<sp/>a<sp/>message<sp/>up<sp/>to<sp/>a<sp/>maximum<sp/>amount<sp/>of<sp/>1ms<sp/>(block<sp/>time)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ptrrcvmessage<sp/>now<sp/>points<sp/>to<sp/>message<sp/>of<sp/>sender<sp/>which<sp/>contains<sp/>data<sp/>pointer<sp/>and<sp/>data<sp/>block<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockID<sp/>=<sp/>receive_msg.<ref refid="structDATA__QUEUE__MESSAGE__s_1aadfc4149a3671549c4f91d5442961ccb" kindref="member">blockID</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcdataptr<sp/>=<sp/>receive_msg.<ref refid="structDATA__QUEUE__MESSAGE__s_1a27ab2ea0a108938fce353b69cd6e6cdf" kindref="member">value</ref>.<ref refid="structDATA__QUEUE__MESSAGE__s_1a43261554f8d42316f3b7ab2de680d55a" kindref="member">voidptr</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accesstype<sp/>=<sp/>receive_msg.<ref refid="structDATA__QUEUE__MESSAGE__s_1a7f90aea9c8268a9cfe75fe56ed2d570d" kindref="member">accesstype</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((blockID<sp/>&lt;<sp/><ref refid="database__cfg_8h_1a29647333a361ef456746044eaf041e5b" kindref="member">DATA_MAX_BLOCK_NR</ref>)<sp/>&amp;&amp;<sp/>(srcdataptr<sp/>!=<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>))<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>plausibility<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>entries<sp/>of<sp/>blockheader<sp/>and<sp/>write<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(accesstype<sp/>==<sp/><ref refid="database__cfg_8h_1a146e0fa1ea9fb5bc6c9033931a141be1a3ffa6efae04a5a66bad75f41a2e8708d" kindref="member">WRITE_ACCESS</ref>)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>access<sp/>to<sp/>data<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datalength<sp/>=<sp/>(data_block_devptr-&gt;<ref refid="structDATA__BASE__HEADER__DEV__s_1a0d0803ea24dcf80657d7d76e9b7e0dd9" kindref="member">blockheaderptr</ref><sp/>+<sp/>blockID)-&gt;datalength;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffertype<sp/>=<sp/>(data_block_devptr-&gt;<ref refid="structDATA__BASE__HEADER__DEV__s_1a0d0803ea24dcf80657d7d76e9b7e0dd9" kindref="member">blockheaderptr</ref><sp/>+<sp/>blockID)-&gt;buffertype;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstdataptr=data_block_access[blockID].<ref refid="structDATA__BLOCK__ACCESS__s_1a74d7daabe117c16195c42b9ab004fcd7" kindref="member">WRptr</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>there<sp/>any<sp/>read<sp/>accesses<sp/>taking<sp/>place<sp/>(in<sp/>tasks<sp/>with<sp/>lower<sp/>priorities)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xSemaphoreTake(<ref refid="database_8c_1a30ec6818c2e23b11b34ea2c2ceccf01f" kindref="member">data_base_mutex</ref>[blockID],<sp/>0)<sp/><sp/>==<sp/><sp/><ref refid="std__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(dstdataptr,<sp/>srcdataptr,<sp/>datalength);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xSemaphoreGive(<ref refid="database_8c_1a30ec6818c2e23b11b34ea2c2ceccf01f" kindref="member">data_base_mutex</ref>[blockID]);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buffertype<sp/><sp/>==<sp/><sp/><ref refid="database__cfg_8h_1a311de4fcd71b45a64471cce98fb27100ae27f9860c788fb3e2cc35538a868961f" kindref="member">DOUBLE_BUFFERING</ref>)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>swap<sp/>the<sp/>WR<sp/>and<sp/>RD<sp/>pointers:</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WRptr<sp/>always<sp/>points<sp/>to<sp/>buffer<sp/>to<sp/>be<sp/>written<sp/>next<sp/>time<sp/>and<sp/>changed<sp/>afterwards</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RDptr<sp/>always<sp/>points<sp/>to<sp/>buffer<sp/>to<sp/>be<sp/>read<sp/>next<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_block_access[blockID].<ref refid="structDATA__BLOCK__ACCESS__s_1a74d7daabe117c16195c42b9ab004fcd7" kindref="member">WRptr</ref>=data_block_access[blockID].<ref refid="structDATA__BLOCK__ACCESS__s_1abbba39d578864435d50df35472492728" kindref="member">RDptr</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_block_access[blockID].<ref refid="structDATA__BLOCK__ACCESS__s_1abbba39d578864435d50df35472492728" kindref="member">RDptr</ref>=dstdataptr;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstdataptr=data_block_access[blockID].<ref refid="structDATA__BLOCK__ACCESS__s_1a74d7daabe117c16195c42b9ab004fcd7" kindref="member">WRptr</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(accesstype<sp/>==<sp/><ref refid="database__cfg_8h_1a146e0fa1ea9fb5bc6c9033931a141be1ac223a4833c94fa66ccb85f033d259d8a" kindref="member">READ_ACCESS</ref>)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>access<sp/>to<sp/>data<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datalength<sp/>=<sp/>(data_block_devptr-&gt;<ref refid="structDATA__BASE__HEADER__DEV__s_1a0d0803ea24dcf80657d7d76e9b7e0dd9" kindref="member">blockheaderptr</ref><sp/>+<sp/>blockID)-&gt;datalength;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffertype<sp/>=<sp/>(data_block_devptr-&gt;<ref refid="structDATA__BASE__HEADER__DEV__s_1a0d0803ea24dcf80657d7d76e9b7e0dd9" kindref="member">blockheaderptr</ref><sp/>+<sp/>blockID)-&gt;buffertype;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstdataptr<sp/>=<sp/>srcdataptr;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buffertype<sp/><sp/>==<sp/><sp/><ref refid="database__cfg_8h_1a311de4fcd71b45a64471cce98fb27100ae27f9860c788fb3e2cc35538a868961f" kindref="member">DOUBLE_BUFFERING</ref>)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xSemaphoreTake(<ref refid="database_8c_1a30ec6818c2e23b11b34ea2c2ceccf01f" kindref="member">data_base_mutex</ref>[blockID],<sp/>0)<sp/><sp/>==<sp/><sp/><ref refid="std__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcdataptr<sp/>=<sp/>data_block_access[blockID].<ref refid="structDATA__BLOCK__ACCESS__s_1abbba39d578864435d50df35472492728" kindref="member">RDptr</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(srcdataptr<sp/>!=<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(dstdataptr,<sp/>srcdataptr,<sp/>datalength);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xSemaphoreGive(<ref refid="database_8c_1a30ec6818c2e23b11b34ea2c2ceccf01f" kindref="member">data_base_mutex</ref>[blockID]);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buffertype<sp/><sp/>==<sp/><sp/><ref refid="database__cfg_8h_1a311de4fcd71b45a64471cce98fb27100a7a07be2ac1b4b4c51e4228a1e150d40d" kindref="member">SINGLE_BUFFERING</ref>)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcdataptr<sp/>=<sp/>data_block_access[blockID].<ref refid="structDATA__BLOCK__ACCESS__s_1abbba39d578864435d50df35472492728" kindref="member">RDptr</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(srcdataptr<sp/>!=<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(dstdataptr,<sp/>srcdataptr,<sp/>datalength);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="diag_8c_1a7970909aa22bb87427a96c694fbab0e4" kindref="member">DIAG_SysMonNotify</ref>(<ref refid="diag__cfg_8h_1ab8bcd0c1c3cbdf47eae14308b979a78fa4ba3cda6fb12ac36bf6be9ca9cae824f" kindref="member">DIAG_SYSMON_DATABASE_ID</ref>,<sp/>0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>task<sp/>is<sp/>running,<sp/>state<sp/>=<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="database_8h_1ace052ca2c5098dcade967992ecebc8bf" refkind="member"><highlight class="normal"><ref refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398" kindref="member">STD_RETURN_TYPE_e</ref><sp/><ref refid="database_8c_1ace052ca2c5098dcade967992ecebc8bf" kindref="member">DATA_GetTable</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dataptrtoReceiver,<sp/><ref refid="database__cfg_8h_1aeec01bdaeac15bc320a373d4593ac2aa" kindref="member">DATA_BLOCK_ID_TYPE_e</ref><sp/><sp/>blockID)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDATA__QUEUE__MESSAGE__s" kindref="compound">DATA_QUEUE_MESSAGE_s</ref><sp/>data_send_msg;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>TickType_t<sp/>queuetimeout;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vPortCheckCriticalSection())</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configASSERT(0);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>queuetimeout<sp/>=<sp/><ref refid="database_8c_1ac2cc366a3b5c10b1d7c2814af0029c56" kindref="member">DATA_QUEUE_TIMEOUT_MS</ref><sp/>/<sp/>portTICK_RATE_MS;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queuetimeout<sp/><sp/>==<sp/><sp/>0)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queuetimeout<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prepare<sp/>send<sp/>message<sp/>with<sp/>attributes<sp/>of<sp/>data<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>data_send_msg.<ref refid="structDATA__QUEUE__MESSAGE__s_1aadfc4149a3671549c4f91d5442961ccb" kindref="member">blockID</ref><sp/>=<sp/>blockID;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>data_send_msg.<ref refid="structDATA__QUEUE__MESSAGE__s_1a27ab2ea0a108938fce353b69cd6e6cdf" kindref="member">value</ref>.<ref refid="structDATA__QUEUE__MESSAGE__s_1a43261554f8d42316f3b7ab2de680d55a" kindref="member">voidptr</ref><sp/>=<sp/>dataptrtoReceiver;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>data_send_msg.<ref refid="structDATA__QUEUE__MESSAGE__s_1a7f90aea9c8268a9cfe75fe56ed2d570d" kindref="member">accesstype</ref><sp/>=<sp/><ref refid="database__cfg_8h_1a146e0fa1ea9fb5bc6c9033931a141be1ac223a4833c94fa66ccb85f033d259d8a" kindref="member">READ_ACCESS</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>message<sp/>object<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maximum<sp/>block<sp/>time:<sp/>queuetimeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>xQueueSend(<sp/><ref refid="enginetask__cfg_8c_1aca362e39966bcd2f7777aa4b9fd4171c" kindref="member">data_queueID</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>&amp;data_send_msg,<sp/>queuetimeout);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="std__types_8h_1a15c0d7d047c476ea033586165d49d398ab7f63f013a1b30e2bba00534c6f0477c" kindref="member">E_OK</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME<sp/>not<sp/>used<sp/><sp/>currently<sp/>-<sp/>delete?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="database_8h_1a2efc6eb177da1d157951867390b07927" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="database_8c_1a2efc6eb177da1d157951867390b07927" kindref="member">DATA_GetTablePtrBeginCritical</ref>(<ref refid="database__cfg_8h_1aeec01bdaeac15bc320a373d4593ac2aa" kindref="member">DATA_BLOCK_ID_TYPE_e</ref><sp/><sp/>blockID)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//FIXME<sp/>block<sp/>with<sp/>semaphore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_block_access[blockID].<ref refid="structDATA__BLOCK__ACCESS__s_1abbba39d578864435d50df35472492728" kindref="member">RDptr</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Static<sp/>functions<sp/>=====================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="database_8c_1a15d2ff576e5aa63eac01df9d81ff4c89" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="database_8c_1a15d2ff576e5aa63eac01df9d81ff4c89" kindref="member">DATA_Init</ref>(<ref refid="structDATA__BASE__HEADER__DEV__s" kindref="compound">DATA_BASE_HEADER_DEV_s</ref><sp/>*devptr)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(devptr<sp/>!=<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_block_devptr<sp/>=<sp/>devptr;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>todo<sp/>fatal<sp/>error!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>What<sp/>is<sp/>mymessage<sp/>structures?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>a<sp/>queue<sp/>capable<sp/>of<sp/>containing<sp/>10<sp/>pointers<sp/>to<sp/>mymessage<sp/>structures.</highlight></codeline>
<codeline lineno="252"><highlight class="comment">//<sp/><sp/><sp/><sp/>These<sp/>should<sp/>be<sp/>passed<sp/>by<sp/>pointer<sp/>as<sp/>they<sp/>contain<sp/>a<sp/>lot<sp/>of<sp/>data.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>data_queueID<sp/>=<sp/>xQueueCreate(<sp/>devptr-&gt;nr_of_blockheader,<sp/>sizeof(<sp/>DATA_QUEUE_MESSAGE_s)<sp/>);<sp/><sp/><sp/><sp/>//<sp/>FIXME<sp/>number<sp/>of<sp/>queues=1<sp/>should<sp/>be<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if(data_queueID<sp/><sp/>==<sp/><sp/>NULL_PTR)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Failed<sp/>to<sp/>create<sp/>the<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>@<sp/>TODO<sp/>Error<sp/>Handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>in<sp/>comparison<sp/>to<sp/>the<sp/>missing<sp/>comments<sp/>inside<sp/>the<sp/>for<sp/>loop,<sp/>the<sp/>next<sp/>comment<sp/>is<sp/>relatively<sp/>trivial</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>data<sp/>block<sp/>access<sp/>control:</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>initialise<sp/>read<sp/>and<sp/>write<sp/>pointers<sp/>and</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>create<sp/>a<sp/>Mutex<sp/>for<sp/>each<sp/>block</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>this<sp/>is<sp/>the<sp/>only<sp/>place<sp/>where<sp/>nr_of_blockheader<sp/>is<sp/>used<sp/>so<sp/>why<sp/>not<sp/>just<sp/>use<sp/>here<sp/>the<sp/>sizeof/sizeof<sp/>and<sp/>delete<sp/>DATA_BASE_HEADER_DEV_s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(c=0;c&lt;devptr-&gt;<ref refid="structDATA__BASE__HEADER__DEV__s_1a9c2247b06c09095d5815da8e99e308ad" kindref="member">nr_of_blockheader</ref>;c++)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>data_block_access<sp/>has<sp/>DATA_MAX_BLOCK_NR<sp/>array<sp/>elements,<sp/>but<sp/>for<sp/>loop<sp/>iterates<sp/>over<sp/>nr_of_blockheaders,<sp/>why<sp/>is<sp/>this<sp/>not<sp/>the<sp/>same?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_block_access[c].<ref refid="structDATA__BLOCK__ACCESS__s_1a74d7daabe117c16195c42b9ab004fcd7" kindref="member">WRptr</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)*(uint32_t*)(devptr-&gt;<ref refid="structDATA__BASE__HEADER__DEV__s_1a0d0803ea24dcf80657d7d76e9b7e0dd9" kindref="member">blockheaderptr</ref><sp/>+<sp/>c);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((devptr-&gt;<ref refid="structDATA__BASE__HEADER__DEV__s_1a0d0803ea24dcf80657d7d76e9b7e0dd9" kindref="member">blockheaderptr</ref><sp/>+<sp/>c)-&gt;buffertype<sp/><sp/>==<sp/><sp/><ref refid="database__cfg_8h_1a311de4fcd71b45a64471cce98fb27100ae27f9860c788fb3e2cc35538a868961f" kindref="member">DOUBLE_BUFFERING</ref>)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>a<sp/>comment<sp/>would<sp/>be<sp/>good<sp/>to<sp/>understand<sp/>the<sp/>pointer<sp/>magic<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_block_access[c].<ref refid="structDATA__BLOCK__ACCESS__s_1abbba39d578864435d50df35472492728" kindref="member">RDptr</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)((uint32_t)data_block_access[c].<ref refid="structDATA__BLOCK__ACCESS__s_1a74d7daabe117c16195c42b9ab004fcd7" kindref="member">WRptr</ref><sp/>+<sp/>(devptr-&gt;<ref refid="structDATA__BASE__HEADER__DEV__s_1a0d0803ea24dcf80657d7d76e9b7e0dd9" kindref="member">blockheaderptr</ref><sp/>+<sp/>c)-&gt;datalength);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_block_access[c].<ref refid="structDATA__BLOCK__ACCESS__s_1abbba39d578864435d50df35472492728" kindref="member">RDptr</ref><sp/>=<sp/>data_block_access[c].<ref refid="structDATA__BLOCK__ACCESS__s_1a74d7daabe117c16195c42b9ab004fcd7" kindref="member">WRptr</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="database_8c_1a30ec6818c2e23b11b34ea2c2ceccf01f" kindref="member">data_base_mutex</ref>[c]<sp/>=<sp/>xSemaphoreCreateMutex();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-common/src/engine/database/database.c"/>
  </compounddef>
</doxygen>
