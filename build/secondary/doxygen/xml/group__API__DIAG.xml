<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__API__DIAG" kind="group">
    <compoundname>API_DIAG</compoundname>
    <title>Diagnosis Interfaces</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__API__DIAG_1gaf3e14f837ad6b7df26392f0164a8a0bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="diag_8h_1a55d0865d598a27a1bb18d386171cfd93" kindref="member">DIAG_RETURNTYPE_e</ref></type>
        <definition>DIAG_RETURNTYPE_e DIAG_Handler</definition>
        <argsstring>(DIAG_CH_ID_e diag_ch_id, DIAG_EVENT_e event, uint8_t item_nr, void *data)</argsstring>
        <name>DIAG_Handler</name>
        <param>
          <type><ref refid="diag__id__cfg_8h_1a685609f013e9b75687b2422019115a8f" kindref="member">DIAG_CH_ID_e</ref></type>
          <declname>diag_ch_id</declname>
        </param>
        <param>
          <type><ref refid="diag__id__cfg_8h_1a1cf4ebb501b8762842208748e9f44868" kindref="member">DIAG_EVENT_e</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>item_nr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>DIAG_Handler provides generic error handling, based on diagnosis group.</para><para>This function calls the handler functions depending on the diagnosis group of call. It needs to get called in every function which wants to apply some kind of diagnosis handling. According to its return value further treatment is either left to the calling module itself, or can be done in the callback function defined in <ref refid="diag__cfg_8c" kindref="compound">diag_cfg.c</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>diag_ch_id</parametername>
</parameternamelist>
<parameterdescription>
<para>event ID of the event that has occurred </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>event that occurred (OK, NOK, RESET) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>item_nr</parametername>
</parameternamelist>
<parameterdescription>
<para>item nr of event, to distinguish between different calling locations of the event </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to data if DIAG_CONT_TYPE</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DIAG_HANDLER_RETURN_UNKNOWN if invalid DIAG_TYPE_e, otherwise return value of DIAG_GeneralHandler or DIAG_ContHandler </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/engine/diag/diag.h" line="175" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/engine/diag/diag.c" bodystart="449" bodyend="481"/>
        <references refid="diag_8h_1a55d0865d598a27a1bb18d386171cfd93aef612bcca143074c40371c91129a8bb0" compoundref="diag_8h" startline="51">DIAG_HANDLER_RETURN_UNKNOWN</references>
        <references refid="diag__cfg_8c_1a38ec347f2786572d994d5328a5d56373" compoundref="diag__cfg_8c" startline="436">diag_dev</references>
        <references refid="structDIAG__DEV__s_1afc06a818592ea9f1d0c0daba76beed32" compoundref="diag__cfg_8h" startline="334">DIAG_DEV_s::ch_cfg</references>
        <references refid="structDIAG__s_1aa753e90df77b66852371b8718db73548" compoundref="diag_8h" startline="142">DIAG_s::id2ch</references>
        <references refid="structDIAG__CH__CFG__s_1a3b081fff2cf3428c615bf377995659a7" compoundref="diag__cfg_8h" startline="320">DIAG_CH_CFG_s::type</references>
        <references refid="diag__cfg_8h_1ac374425569a774aa18a8571c69be37b2a26a5ce014ffce41a84f1eb7189465549" compoundref="diag__cfg_8h" startline="240">DIAG_GENERAL_TYPE</references>
        <references refid="diag_8c_1ac6d010cd0f6962d7f0cc5ff4abf03d09" compoundref="diag_8c" startline="500" endline="642">DIAG_GeneralHandler</references>
        <references refid="diag__cfg_8h_1ac374425569a774aa18a8571c69be37b2a98ce642fecdd5c6e36c87e6d30a13892" compoundref="diag__cfg_8h" startline="241">DIAG_CELLMON_TYPE</references>
        <references refid="diag__cfg_8h_1ac374425569a774aa18a8571c69be37b2a500e8cf3e6b9782f6d7ab790e362587a" compoundref="diag__cfg_8h" startline="242">DIAG_COM_TYPE</references>
        <references refid="diag__cfg_8h_1ac374425569a774aa18a8571c69be37b2a9a07613a2c11c2f5f532f0ec6f8b7c25" compoundref="diag__cfg_8h" startline="243">DIAG_ADC_TYPE</references>
        <references refid="diag__cfg_8h_1ac374425569a774aa18a8571c69be37b2ab50448feddb43176a427531e2ba63a92" compoundref="diag__cfg_8h" startline="245">DIAG_CONT_TYPE</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Contains the provided interfaces to diagnostis module </para>    </detaileddescription>
  </compounddef>
</doxygen>
