<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="cansignal__cfg_8c" kind="file" language="C++">
    <compoundname>cansignal_cfg.c</compoundname>
    <includes refid="general_8h" local="yes">general.h</includes>
    <includes refid="cansignal__cfg_8h" local="yes">cansignal_cfg.h</includes>
    <includes refid="database_8h" local="yes">database.h</includes>
    <includes refid="mcu_8h" local="yes">mcu.h</includes>
    <includes refid="sox_8h" local="yes">sox.h</includes>
    <incdepgraph>
      <node id="445">
        <label>database.h</label>
        <link refid="database_8h"/>
        <childnode refid="446" relation="include">
        </childnode>
      </node>
      <node id="443">
        <label>io_package_cfg.h</label>
        <link refid="io__package__cfg_8h"/>
      </node>
      <node id="434">
        <label>cansignal_cfg.c</label>
        <link refid="cansignal__cfg_8c"/>
        <childnode refid="435" relation="include">
        </childnode>
        <childnode refid="438" relation="include">
        </childnode>
        <childnode refid="445" relation="include">
        </childnode>
        <childnode refid="448" relation="include">
        </childnode>
        <childnode refid="449" relation="include">
        </childnode>
      </node>
      <node id="438">
        <label>cansignal_cfg.h</label>
        <link refid="cansignal__cfg_8h"/>
        <childnode refid="439" relation="include">
        </childnode>
      </node>
      <node id="436">
        <label>stdint.h</label>
      </node>
      <node id="446">
        <label>database_cfg.h</label>
        <link refid="database__cfg_8h"/>
        <childnode refid="447" relation="include">
        </childnode>
      </node>
      <node id="448">
        <label>mcu.h</label>
        <link refid="mcu_8h"/>
        <childnode refid="435" relation="include">
        </childnode>
      </node>
      <node id="447">
        <label>batterysystem_cfg.h</label>
        <link refid="batterysystem__cfg_8h"/>
        <childnode refid="435" relation="include">
        </childnode>
      </node>
      <node id="440">
        <label>mcu_cfg.h</label>
        <link refid="mcu__cfg_8h"/>
        <childnode refid="441" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
      </node>
      <node id="444">
        <label>io_mcu_cfg.h</label>
        <link refid="io__mcu__cfg_8h"/>
      </node>
      <node id="442">
        <label>io_cfg.h</label>
        <link refid="io__cfg_8h"/>
        <childnode refid="440" relation="include">
        </childnode>
        <childnode refid="443" relation="include">
        </childnode>
        <childnode refid="444" relation="include">
        </childnode>
      </node>
      <node id="449">
        <label>sox.h</label>
        <link refid="sox_8h"/>
        <childnode refid="450" relation="include">
        </childnode>
      </node>
      <node id="439">
        <label>can_cfg.h</label>
        <link refid="can__cfg_8h"/>
        <childnode refid="440" relation="include">
        </childnode>
      </node>
      <node id="437">
        <label>std_types.h</label>
        <link refid="std__types_8h"/>
      </node>
      <node id="435">
        <label>general.h</label>
        <link refid="general_8h"/>
        <childnode refid="436" relation="include">
        </childnode>
        <childnode refid="437" relation="include">
        </childnode>
      </node>
      <node id="441">
        <label>stm32f4xx_hal.h</label>
      </node>
      <node id="450">
        <label>sox_cfg.h</label>
        <link refid="sox__cfg_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="cansignal__cfg_8c_1a7f1cdf83dae8c7f1b2709d17d1290ef6" prot="public" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t cans_signalToMuxMapping[]</definition>
        <argsstring>[]</argsstring>
        <name>cans_signalToMuxMapping</name>
        <initializer>= {

 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" line="65" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cansignal__cfg_8c_1aed67cd1a990077da6dae445d3e450612" prot="public" static="yes" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t cans_muxVal[sizeof(cans_signalToMuxMapping)/sizeof(cans_signalToMuxMapping[0])]</definition>
        <argsstring>[sizeof(cans_signalToMuxMapping)/sizeof(cans_signalToMuxMapping[0])]</argsstring>
        <name>cans_muxVal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" line="68" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cansignal__cfg_8c_1a415dab297402d39a8f48f901c2a5c04a" prot="public" static="yes" mutable="no">
        <type><ref refid="structDATA__BLOCK__CURRENT__s" kindref="compound">DATA_BLOCK_CURRENT_s</ref></type>
        <definition>DATA_BLOCK_CURRENT_s cans_current_tab</definition>
        <argsstring></argsstring>
        <name>cans_current_tab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" line="70" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cansignal__cfg_8c_1a00b5c5f6e2c4347b7898ae4cd8946670" prot="public" static="no" mutable="no">
        <type>const <ref refid="structCANS__signal__s" kindref="compound">CANS_signal_s</ref></type>
        <definition>const CANS_signal_s cans_CAN0_signals_tx[]</definition>
        <argsstring>[]</argsstring>
        <name>cans_CAN0_signals_tx</name>
        <initializer>= {
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>array for transmission CAN0 signals definition </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" line="74" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cansignal__cfg_8c_1a7441a668581186628ab12dd0ebdd0f7c" prot="public" static="no" mutable="no">
        <type>const <ref refid="structCANS__signal__s" kindref="compound">CANS_signal_s</ref></type>
        <definition>const CANS_signal_s cans_CAN1_signals_tx[]</definition>
        <argsstring>[]</argsstring>
        <name>cans_CAN1_signals_tx</name>
        <initializer>= {
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>array for transmission CAN1 signals definition </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" line="78" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cansignal__cfg_8c_1aab49b0b2fd3ee38354c5d64f75416425" prot="public" static="no" mutable="no">
        <type>const <ref refid="structCANS__signal__s" kindref="compound">CANS_signal_s</ref></type>
        <definition>const CANS_signal_s cans_CAN0_signals_rx[]</definition>
        <argsstring>[]</argsstring>
        <name>cans_CAN0_signals_rx</name>
        <initializer>= {
        { {<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a85e44d1bb639235677ba9ed8600a3757" kindref="member">CAN0_MSG_BMS10</ref>},   0,  8,    32, 0, 1,        0,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  {<ref refid="cansignal__cfg_8h_1ae5f77a630a6e5da831a285789ee32701ae27bd24c9ff9f6a948625a8242cb982e" kindref="member">CAN0_SIGNAL_NONE</ref>}, <ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,               <ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref> },
        { {<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a85e44d1bb639235677ba9ed8600a3757" kindref="member">CAN0_MSG_BMS10</ref>},   8,  8,    8, 0, 1,        0,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  {<ref refid="cansignal__cfg_8h_1ae5f77a630a6e5da831a285789ee32701ae27bd24c9ff9f6a948625a8242cb982e" kindref="member">CAN0_SIGNAL_NONE</ref>}, &amp;<ref refid="cansignal__cfg_8c_1a7651cc6ec1d238ce7110af01e47e1211" kindref="member">cans_setstaterequest</ref>,  <ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref> },
        { {<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9ae9df40569e9594ac06ae16cf3f55359e" kindref="member">CAN0_MSG_ISENS0</ref>},  0,  8,    32, 0, 1,        0,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  {<ref refid="cansignal__cfg_8h_1ae5f77a630a6e5da831a285789ee32701ae27bd24c9ff9f6a948625a8242cb982e" kindref="member">CAN0_SIGNAL_NONE</ref>}, <ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,               <ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref> },
        { {<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9ae9df40569e9594ac06ae16cf3f55359e" kindref="member">CAN0_MSG_ISENS0</ref>},  8,  8,  255, 0, 1,        0,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  {<ref refid="cansignal__cfg_8h_1ae5f77a630a6e5da831a285789ee32701ae27bd24c9ff9f6a948625a8242cb982e" kindref="member">CAN0_SIGNAL_NONE</ref>}, <ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,               <ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref> },
        { {<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9ae9df40569e9594ac06ae16cf3f55359e" kindref="member">CAN0_MSG_ISENS0</ref>}, 16, 32, 0xFFFFFFFF, -3000, 0.001,    0,  FALSE,  FALSE,  FALSE,  {CAN0_SIGNAL_NONE}, &amp;cans_setcurr,          NULL_PTR },
        { {CAN0_MSG_ISENS1},  0,  8,    32, 0, 1,        0,  FALSE,  FALSE,  FALSE,  {CAN0_SIGNAL_NONE}, NULL_PTR,               NULL_PTR },
        { {CAN0_MSG_ISENS1},  8,  8,    255, 0, 1,        0,  FALSE,  FALSE,  FALSE,  {CAN0_SIGNAL_NONE}, NULL_PTR,               NULL_PTR },
        { {CAN0_MSG_ISENS1}, 16, 32,  0xFFFFFFFF, 0, 0.001,    0,  FALSE,  FALSE,  FALSE,  {CAN0_SIGNAL_NONE}, &amp;cans_setcurr,          NULL_PTR },
        { {CAN0_MSG_ISENS2},  0,  8,    32, 0, 1,        0,  FALSE,  FALSE,  FALSE,  {CAN0_SIGNAL_NONE}, NULL_PTR,               NULL_PTR },
        { {CAN0_MSG_ISENS2},  8,  8,    255, 0, 1,        0,  FALSE,  FALSE,  FALSE,  {CAN0_SIGNAL_NONE}, NULL_PTR,               NULL_PTR },
        { {CAN0_MSG_ISENS2}, 16, 32,  0xFFFFFFFF, 0, 0.001,    0,  FALSE,  FALSE,  FALSE,  {CAN0_SIGNAL_NONE}, &amp;cans_setcurr,          NULL_PTR },
        { {CAN0_MSG_ISENS3},  0,  8,    32, 0, 0.001,    0,  FALSE,  FALSE,  FALSE,  {CAN0_SIGNAL_NONE}, NULL_PTR,               NULL_PTR },
        { {CAN0_MSG_ISENS3},  8,  8,    255, 0, 1,        0,  FALSE,  FALSE,  FALSE,  {CAN0_SIGNAL_NONE}, NULL_PTR,               NULL_PTR },
        { {CAN0_MSG_ISENS3}, 16, 32,  0xFFFFFFFF, 0, 0.001,    0,     FALSE,  FALSE,  FALSE,  {CAN0_SIGNAL_NONE}, &amp;cans_setcurr,       NULL_PTR },
        { {CAN0_MSG_DEBUG},   0, 64,  100, 0, 0.001,    0,     FALSE,  FALSE,  FALSE,  {CAN0_SIGNAL_NONE}, &amp;cans_setdebug,      NULL_PTR }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>array for received CAN0 signals definition </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" line="82" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cansignal__cfg_8c_1a6a25a471299bc5e3290e06a8f79989e7" prot="public" static="no" mutable="no">
        <type>const <ref refid="structCANS__signal__s" kindref="compound">CANS_signal_s</ref></type>
        <definition>const CANS_signal_s cans_CAN1_signals_rx[]</definition>
        <argsstring>[]</argsstring>
        <name>cans_CAN1_signals_rx</name>
        <initializer>= {
        { {<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a1ed56e0d38e6397fa1dce103647f8643" kindref="member">CAN1_MSG_BMS10</ref>},   0,  8,    32, 0, 1,        0,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  {<ref refid="cansignal__cfg_8h_1a5c9a69298eda1483fc3e8c37dbb3acbca3ba1668933e268670cc0fd283891836d" kindref="member">CAN1_SIGNAL_NONE</ref>}, <ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,               <ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref> },
        { {<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a1ed56e0d38e6397fa1dce103647f8643" kindref="member">CAN1_MSG_BMS10</ref>},   8,  8,    8, 0, 1,        0,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  {<ref refid="cansignal__cfg_8h_1a5c9a69298eda1483fc3e8c37dbb3acbca3ba1668933e268670cc0fd283891836d" kindref="member">CAN1_SIGNAL_NONE</ref>}, &amp;<ref refid="cansignal__cfg_8c_1a7651cc6ec1d238ce7110af01e47e1211" kindref="member">cans_setstaterequest</ref>,  <ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref> },
        { {<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a6fd2b260b8792577157a773dfe6037a0" kindref="member">CAN1_MSG_ISENS0</ref>},  0,  8,    32, 0, 1,        0,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  {<ref refid="cansignal__cfg_8h_1a5c9a69298eda1483fc3e8c37dbb3acbca3ba1668933e268670cc0fd283891836d" kindref="member">CAN1_SIGNAL_NONE</ref>}, <ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,               <ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref> },
        { {<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a6fd2b260b8792577157a773dfe6037a0" kindref="member">CAN1_MSG_ISENS0</ref>},  8,  8,    255, 0, 1,        0,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  <ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,  {<ref refid="cansignal__cfg_8h_1a5c9a69298eda1483fc3e8c37dbb3acbca3ba1668933e268670cc0fd283891836d" kindref="member">CAN1_SIGNAL_NONE</ref>}, <ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,               <ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref> },
        { {<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a6fd2b260b8792577157a773dfe6037a0" kindref="member">CAN1_MSG_ISENS0</ref>}, 16, 32,  0xFFFFFFFF, 0, 0.001,    0,  FALSE,  FALSE,  FALSE,  {CAN1_SIGNAL_NONE}, &amp;cans_setcurr,          NULL_PTR },
        { {CAN1_MSG_ISENS1},  0,  8,    32, 0, 1,        0,  FALSE,  FALSE,  FALSE,  {CAN1_SIGNAL_NONE}, NULL_PTR,               NULL_PTR },
        { {CAN1_MSG_ISENS1},  8,  8,    255, 0, 1,        0,  FALSE,  FALSE,  FALSE,  {CAN1_SIGNAL_NONE}, NULL_PTR,               NULL_PTR },
        { {CAN1_MSG_ISENS1}, 16, 32,  0xFFFFFFFF, 0, 0.001,    0,  FALSE,  FALSE,  FALSE,  {CAN1_SIGNAL_NONE}, &amp;cans_setcurr,          NULL_PTR },
        { {CAN1_MSG_ISENS2},  0,  8,    32, 0, 1,        0,  FALSE,  FALSE,  FALSE,  {CAN1_SIGNAL_NONE}, NULL_PTR,               NULL_PTR },
        { {CAN1_MSG_ISENS2},  8,  8,    255, 0, 1,        0,  FALSE,  FALSE,  FALSE,  {CAN1_SIGNAL_NONE}, NULL_PTR,               NULL_PTR },
        { {CAN1_MSG_ISENS2}, 16, 32,  0xFFFFFFFF, 0, 0.001,    0,  FALSE,  FALSE,  FALSE,  {CAN1_SIGNAL_NONE}, &amp;cans_setcurr,          NULL_PTR },
        { {CAN1_MSG_ISENS3},  0,  8,    32, 0, 0.001,    0,  FALSE,  FALSE,  FALSE,  {CAN1_SIGNAL_NONE}, NULL_PTR,               NULL_PTR },
        { {CAN1_MSG_ISENS3},  8,  8,    255, 0, 1,        0,  FALSE,  FALSE,  FALSE,  {CAN1_SIGNAL_NONE}, NULL_PTR,               NULL_PTR },
        { {CAN1_MSG_ISENS3}, 16, 32,  0xFFFFFFFF, 0, 0.001,    0,     FALSE,  FALSE,  FALSE,  {CAN1_SIGNAL_NONE}, &amp;cans_setcurr,       NULL_PTR },
        { {CAN1_MSG_DEBUG},   0, 64,  100, 0, 0.001,    0,     FALSE,  FALSE,  FALSE,  {CAN1_SIGNAL_NONE}, &amp;cans_setdebug,      NULL_PTR }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>array for received CAN1 signals definition </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" line="100" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cansignal__cfg_8c_1a76a2b16912c01559b1281c463d4d7a0f" prot="public" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t cans_CAN0_signals_tx_length</definition>
        <argsstring></argsstring>
        <name>cans_CAN0_signals_tx_length</name>
        <initializer>= sizeof(<ref refid="cansignal__cfg_8h_1a00b5c5f6e2c4347b7898ae4cd8946670" kindref="member">cans_CAN0_signals_tx</ref>)/sizeof(<ref refid="cansignal__cfg_8h_1a00b5c5f6e2c4347b7898ae4cd8946670" kindref="member">cans_CAN0_signals_tx</ref>[0])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>length of the array for the CAN0 tx signals </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" line="119" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cansignal__cfg_8c_1a1425407d1b20511625b6cd6b340ebd57" prot="public" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t cans_CAN1_signals_tx_length</definition>
        <argsstring></argsstring>
        <name>cans_CAN1_signals_tx_length</name>
        <initializer>= sizeof(<ref refid="cansignal__cfg_8h_1a7441a668581186628ab12dd0ebdd0f7c" kindref="member">cans_CAN1_signals_tx</ref>)/sizeof(<ref refid="cansignal__cfg_8h_1a7441a668581186628ab12dd0ebdd0f7c" kindref="member">cans_CAN1_signals_tx</ref>[0])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>length of the array for the CAN1 tx signals </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" line="120" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cansignal__cfg_8c_1a09fad45966212a86c0470b1608275b42" prot="public" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t cans_CAN0_signals_rx_length</definition>
        <argsstring></argsstring>
        <name>cans_CAN0_signals_rx_length</name>
        <initializer>= sizeof(<ref refid="cansignal__cfg_8h_1aab49b0b2fd3ee38354c5d64f75416425" kindref="member">cans_CAN0_signals_rx</ref>)/sizeof(<ref refid="cansignal__cfg_8h_1aab49b0b2fd3ee38354c5d64f75416425" kindref="member">cans_CAN0_signals_rx</ref>[0])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>length of the array for the CAN0 rx signals </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" line="122" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cansignal__cfg_8c_1a14f12d8fd481484941df1876cbd63c64" prot="public" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t cans_CAN1_signals_rx_length</definition>
        <argsstring></argsstring>
        <name>cans_CAN1_signals_rx_length</name>
        <initializer>= sizeof(<ref refid="cansignal__cfg_8h_1a6a25a471299bc5e3290e06a8f79989e7" kindref="member">cans_CAN1_signals_rx</ref>)/sizeof(<ref refid="cansignal__cfg_8h_1a6a25a471299bc5e3290e06a8f79989e7" kindref="member">cans_CAN1_signals_rx</ref>[0])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>length of the array for the CAN1 rx signals </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" line="123" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" bodystart="123" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cansignal__cfg_8c_1a2f765875c539a80f32b6c538ad8a0682" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t cans_setmux</definition>
        <argsstring>(uint32_t, void *)</argsstring>
        <name>cans_setmux</name>
        <param>
          <type>uint32_t</type>
          <defname>sigIdx</defname>
        </param>
        <param>
          <type>void *</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" line="52" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" bodystart="127" bodyend="136"/>
        <references refid="cansignal__cfg_8c_1a7f1cdf83dae8c7f1b2709d17d1290ef6" compoundref="cansignal__cfg_8c" startline="65">cans_signalToMuxMapping</references>
        <references refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" compoundref="std__types_8h" startline="40">NULL_PTR</references>
        <references refid="cansignal__cfg_8c_1aed67cd1a990077da6dae445d3e450612" compoundref="cansignal__cfg_8c" startline="68">cans_muxVal</references>
      </memberdef>
      <memberdef kind="function" id="cansignal__cfg_8c_1a057ddf53755e68c3fbdc18004df0bb52" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t cans_setvolt</definition>
        <argsstring>(uint32_t, void *)</argsstring>
        <name>cans_setvolt</name>
        <param>
          <type>uint32_t</type>
          <defname>sigIdx</defname>
        </param>
        <param>
          <type>void *</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" line="53" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" bodystart="139" bodyend="146"/>
        <references refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" compoundref="std__types_8h" startline="40">NULL_PTR</references>
      </memberdef>
      <memberdef kind="function" id="cansignal__cfg_8c_1a32d837ed072c1cda84c1788b94a0dbf4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t cans_settempering</definition>
        <argsstring>(uint32_t, void *)</argsstring>
        <name>cans_settempering</name>
        <param>
          <type>uint32_t</type>
          <defname>sigIdx</defname>
        </param>
        <param>
          <type>void *</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" line="54" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" bodystart="149" bodyend="156"/>
        <references refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" compoundref="std__types_8h" startline="40">NULL_PTR</references>
      </memberdef>
      <memberdef kind="function" id="cansignal__cfg_8c_1ac79e1eec5d24375711c0b657e8b178bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t cans_setcanerr</definition>
        <argsstring>(uint32_t, void *)</argsstring>
        <name>cans_setcanerr</name>
        <param>
          <type>uint32_t</type>
          <defname>sigIdx</defname>
        </param>
        <param>
          <type>void *</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" line="55" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" bodystart="159" bodyend="166"/>
        <references refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" compoundref="std__types_8h" startline="40">NULL_PTR</references>
      </memberdef>
      <memberdef kind="function" id="cansignal__cfg_8c_1aa91a174d1d806f64092db43ee0ab8d33" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t cans_setsocsoh</definition>
        <argsstring>(uint32_t, void *)</argsstring>
        <name>cans_setsocsoh</name>
        <param>
          <type>uint32_t</type>
          <defname>sigIdx</defname>
        </param>
        <param>
          <type>void *</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" line="56" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" bodystart="169" bodyend="176"/>
        <references refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" compoundref="std__types_8h" startline="40">NULL_PTR</references>
      </memberdef>
      <memberdef kind="function" id="cansignal__cfg_8c_1a176fe58869c5a39b5443cb425ebe04f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t cans_setsof</definition>
        <argsstring>(uint32_t, void *)</argsstring>
        <name>cans_setsof</name>
        <param>
          <type>uint32_t</type>
          <defname>sigIdx</defname>
        </param>
        <param>
          <type>void *</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" line="57" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" bodystart="179" bodyend="186"/>
        <references refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" compoundref="std__types_8h" startline="40">NULL_PTR</references>
      </memberdef>
      <memberdef kind="function" id="cansignal__cfg_8c_1ac7f8d6ef80568de8892020528ab245f5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t cans_setcurr</definition>
        <argsstring>(uint32_t, void *)</argsstring>
        <name>cans_setcurr</name>
        <param>
          <type>uint32_t</type>
          <defname>sigIdx</defname>
        </param>
        <param>
          <type>void *</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" line="58" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" bodystart="199" bodyend="251"/>
        <references refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" compoundref="std__types_8h" startline="40">NULL_PTR</references>
        <references refid="cansignal__cfg_8h_1ab17a7f254041e6ba97221eb5b9bffa1ea89ac08436e36acd17fbff0dd42f08617" compoundref="cansignal__cfg_8h" startline="139">CAN0_SIG_ISENS0_I_Measurement</references>
        <references refid="structDATA__BLOCK__CURRENT__s_1a857d4a45035277b85f7fe0be8792c51a" compoundref="database__cfg_8h" startline="246">DATA_BLOCK_CURRENT_s::previous_timestamp</references>
        <references refid="structDATA__BLOCK__CURRENT__s_1ac93da9c37d00d7942aeaa4b4473a6431" compoundref="database__cfg_8h" startline="247">DATA_BLOCK_CURRENT_s::timestamp</references>
        <references refid="mcu_8c_1a09e5f493b1f3dc15a07b7b72ad69cede" compoundref="mcu_8c" startline="164" endline="166">MCU_GetTimeStamp</references>
        <references refid="structDATA__BLOCK__CURRENT__s_1abe562fdb013652a32a8d1da374093206" compoundref="database__cfg_8h" startline="240">DATA_BLOCK_CURRENT_s::current</references>
        <references refid="structDATA__BLOCK__CURRENT__s_1a40c423bad6cadbffce033db5684d85bb" compoundref="database__cfg_8h" startline="248">DATA_BLOCK_CURRENT_s::state_current</references>
        <references refid="database_8c_1a71c46da113f917afb39cc80c56e598be" compoundref="database_8c" startline="78" endline="105">DATA_StoreDataBlock</references>
        <references refid="database__cfg_8h_1a8f42993f5e17a2d234df914e08d9e3a9" compoundref="database__cfg_8h" startline="123">DATA_BLOCK_ID_CURRENT</references>
        <references refid="cansignal__cfg_8h_1ab17a7f254041e6ba97221eb5b9bffa1eabbecea22c1e8e561122bce17e0d951ed" compoundref="cansignal__cfg_8h" startline="142">CAN0_SIG_ISENS1_U1_Measurement</references>
        <references refid="structDATA__BLOCK__CURRENT__s_1a2d89b6d53577d32d9698780894c4813e" compoundref="database__cfg_8h" startline="241">DATA_BLOCK_CURRENT_s::voltage</references>
        <references refid="structCANS__signal__s_1af6f88d38ca0971aaf347c2742e38dd87" compoundref="cansignal__cfg_8h" startline="205">CANS_signal_s::factor</references>
        <references refid="structDATA__BLOCK__CURRENT__s_1af7665f7da2491617b8303b1cb6cef712" compoundref="database__cfg_8h" startline="249">DATA_BLOCK_CURRENT_s::state_voltage</references>
        <references refid="cansignal__cfg_8h_1ab17a7f254041e6ba97221eb5b9bffa1eaad56681998fd7fed759b71dc1dcb5919" compoundref="cansignal__cfg_8h" startline="145">CAN0_SIG_ISENS2_U2_Measurement</references>
        <references refid="cansignal__cfg_8h_1ab17a7f254041e6ba97221eb5b9bffa1ea1dc57373b7d265833163729cc90afa93" compoundref="cansignal__cfg_8h" startline="148">CAN0_SIG_ISENS3_U3_Measurement</references>
      </memberdef>
      <memberdef kind="function" id="cansignal__cfg_8c_1a4358d6ba75a9d27e5cfb3e37bafa6150" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t cans_setminmaxvolt</definition>
        <argsstring>(uint32_t, void *)</argsstring>
        <name>cans_setminmaxvolt</name>
        <param>
          <type>uint32_t</type>
          <defname>sigIdx</defname>
        </param>
        <param>
          <type>void *</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" line="59" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" bodystart="189" bodyend="196"/>
        <references refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" compoundref="std__types_8h" startline="40">NULL_PTR</references>
      </memberdef>
      <memberdef kind="function" id="cansignal__cfg_8c_1a7651cc6ec1d238ce7110af01e47e1211" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t cans_setstaterequest</definition>
        <argsstring>(uint32_t, void *)</argsstring>
        <name>cans_setstaterequest</name>
        <param>
          <type>uint32_t</type>
          <defname>sigIdx</defname>
        </param>
        <param>
          <type>void *</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" line="60" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" bodystart="254" bodyend="277"/>
        <references refid="database_8c_1ace052ca2c5098dcade967992ecebc8bf" compoundref="database_8c" startline="195" endline="225">DATA_GetTable</references>
        <references refid="database__cfg_8h_1a0b445280174407a1a20ae8a173aeb6b9" compoundref="database__cfg_8h" startline="125">DATA_BLOCK_ID_STATEREQUEST</references>
        <references refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" compoundref="std__types_8h" startline="40">NULL_PTR</references>
        <references refid="cansignal__cfg_8h_1ab17a7f254041e6ba97221eb5b9bffa1ea5b78afc9ab348a6ccab013720ac0e7f4" compoundref="cansignal__cfg_8h" startline="136">CAN0_SIG_BMS10_Request</references>
        <references refid="cansignal__cfg_8h_1a37b74fc0f60066491693db4542271028a46dd2b02e51b71473a0f0fb55fd82b1b" compoundref="cansignal__cfg_8h" startline="158">CAN1_SIG_BMS10_Request</references>
        <references refid="structDATA__BLOCK__STATEREQUEST__s_1ac2f1c20c0e977eeb669b473f1c0df7d5" compoundref="database__cfg_8h" startline="280">DATA_BLOCK_STATEREQUEST_s::previous_state_request</references>
        <references refid="structDATA__BLOCK__STATEREQUEST__s_1adddc57fa75078eec60dc2f7150382b34" compoundref="database__cfg_8h" startline="279">DATA_BLOCK_STATEREQUEST_s::state_request</references>
        <references refid="mcu_8c_1a09e5f493b1f3dc15a07b7b72ad69cede" compoundref="mcu_8c" startline="164" endline="166">MCU_GetTimeStamp</references>
        <references refid="structDATA__BLOCK__STATEREQUEST__s_1ab503dd29a7cfaa03042b2acaeab1d5f7" compoundref="database__cfg_8h" startline="282">DATA_BLOCK_STATEREQUEST_s::timestamp</references>
        <references refid="structDATA__BLOCK__STATEREQUEST__s_1ab77605b0f0693cc4dd5b93861a5f6a3a" compoundref="database__cfg_8h" startline="281">DATA_BLOCK_STATEREQUEST_s::state_request_pending</references>
        <references refid="structDATA__BLOCK__STATEREQUEST__s_1afe4115eefe4358fc967e26121d70995a" compoundref="database__cfg_8h" startline="283">DATA_BLOCK_STATEREQUEST_s::previous_timestamp</references>
        <references refid="structDATA__BLOCK__STATEREQUEST__s_1a6f2500d7dd16a80a272eab4bf58bbcc4" compoundref="database__cfg_8h" startline="284">DATA_BLOCK_STATEREQUEST_s::state</references>
        <references refid="database_8c_1a71c46da113f917afb39cc80c56e598be" compoundref="database_8c" startline="78" endline="105">DATA_StoreDataBlock</references>
      </memberdef>
      <memberdef kind="function" id="cansignal__cfg_8c_1a21da08b9b118af9a1e13dd31ca7d557e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t cans_setdebug</definition>
        <argsstring>(uint32_t, void *)</argsstring>
        <name>cans_setdebug</name>
        <param>
          <type>uint32_t</type>
          <defname>sigIdx</defname>
        </param>
        <param>
          <type>void *</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" line="61" column="1" bodyfile="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c" bodystart="280" bodyend="323"/>
        <references refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" compoundref="std__types_8h" startline="40">NULL_PTR</references>
        <references refid="sox_8c_1a19c20347185aaa61f4bd404b9f0619cd" compoundref="sox_8c" startline="116" endline="141">SOC_SetValue</references>
        <references refid="database_8c_1ace052ca2c5098dcade967992ecebc8bf" compoundref="database_8c" startline="195" endline="225">DATA_GetTable</references>
        <references refid="database__cfg_8h_1a87757124a9f7cd18ce79f6d2bd393fec" compoundref="database__cfg_8h" startline="121">DATA_BLOCK_ID_BALANCING_CONTROL_VALUES</references>
        <references refid="structDATA__BLOCK__BALANCING__CONTROL__s_1a0f50ab29d007bb9287e4846c944ceb7b" compoundref="database__cfg_8h" startline="191">DATA_BLOCK_BALANCING_CONTROL_s::enable_balancing</references>
        <references refid="structDATA__BLOCK__BALANCING__CONTROL__s_1a78a30e9ed2447a8163f343cf62244f18" compoundref="database__cfg_8h" startline="192">DATA_BLOCK_BALANCING_CONTROL_s::threshold</references>
        <references refid="database_8c_1a71c46da113f917afb39cc80c56e598be" compoundref="database_8c" startline="78" endline="105">DATA_StoreDataBlock</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Configuration of the messages and signal settings for the CAN driver. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para><copy/> 2010 - 2017, Fraunhofer-Gesellschaft zur Foerderung der angewandten Forschung e.V. All rights reserved.</para></simplesect>
BSD 3-Clause License Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:<orderedlist>
<listitem><para>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</para></listitem><listitem><para>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</para></listitem><listitem><para>Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</para></listitem></orderedlist>
</para><para>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</para><para>We kindly request you to use one or more of the following phrases to refer to foxBMS in your hardware, software, documentation or advertising materials:</para><para><Prime/>This product uses parts of foxBMS<registered/><Prime/></para><para><Prime/>This product includes parts of foxBMS<registered/><Prime/></para><para><Prime/>This product is derived from foxBMS<registered/><Prime/></para><para><simplesect kind="author"><para>foxBMS Team </para></simplesect>
<simplesect kind="date"><para>16.09.2015 (date of creation)</para></simplesect>
<simplesect kind="par"><title>Module-prefix</title><para>CANS </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="34"><highlight class="comment">/*==================<sp/>Includes<sp/>=============================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>recommended<sp/>include<sp/>order<sp/>of<sp/>header<sp/>files:</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>1.<sp/><sp/><sp/><sp/>include<sp/>general.h</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>2.<sp/><sp/><sp/><sp/>include<sp/>module&apos;s<sp/>own<sp/>header</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>3...<sp/><sp/>other<sp/>headers</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="general_8h" kindref="compound">general.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cansignal__cfg_8h" kindref="compound">cansignal_cfg.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="database_8h" kindref="compound">database.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;bms.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mcu_8h" kindref="compound">mcu.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sox_8h" kindref="compound">sox.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Function<sp/>Prototypes<sp/>==================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="cansignal__cfg_8c_1a2f765875c539a80f32b6c538ad8a0682" kindref="member">cans_setmux</ref>(uint32_t,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="cansignal__cfg_8c_1a057ddf53755e68c3fbdc18004df0bb52" kindref="member">cans_setvolt</ref>(uint32_t,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="cansignal__cfg_8c_1a32d837ed072c1cda84c1788b94a0dbf4" kindref="member">cans_settempering</ref>(uint32_t,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="cansignal__cfg_8c_1ac79e1eec5d24375711c0b657e8b178bd" kindref="member">cans_setcanerr</ref>(uint32_t,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="cansignal__cfg_8c_1aa91a174d1d806f64092db43ee0ab8d33" kindref="member">cans_setsocsoh</ref>(uint32_t,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="cansignal__cfg_8c_1a176fe58869c5a39b5443cb425ebe04f9" kindref="member">cans_setsof</ref>(uint32_t,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="cansignal__cfg_8c_1ac7f8d6ef80568de8892020528ab245f5" kindref="member">cans_setcurr</ref>(uint32_t,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="cansignal__cfg_8c_1a4358d6ba75a9d27e5cfb3e37bafa6150" kindref="member">cans_setminmaxvolt</ref>(uint32_t,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="cansignal__cfg_8c_1a7651cc6ec1d238ce7110af01e47e1211" kindref="member">cans_setstaterequest</ref>(uint32_t,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="cansignal__cfg_8c_1a21da08b9b118af9a1e13dd31ca7d557e" kindref="member">cans_setdebug</ref>(uint32_t,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Macros<sp/>and<sp/>Definitions<sp/>===============================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="cansignal__cfg_8c_1a7f1cdf83dae8c7f1b2709d17d1290ef6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="cansignal__cfg_8c_1a7f1cdf83dae8c7f1b2709d17d1290ef6" kindref="member">cans_signalToMuxMapping</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="68" refid="cansignal__cfg_8c_1aed67cd1a990077da6dae445d3e450612" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="cansignal__cfg_8c_1aed67cd1a990077da6dae445d3e450612" kindref="member">cans_muxVal</ref>[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="cansignal__cfg_8c_1a7f1cdf83dae8c7f1b2709d17d1290ef6" kindref="member">cans_signalToMuxMapping</ref>)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="cansignal__cfg_8c_1a7f1cdf83dae8c7f1b2709d17d1290ef6" kindref="member">cans_signalToMuxMapping</ref>[0])];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="cansignal__cfg_8c_1a415dab297402d39a8f48f901c2a5c04a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structDATA__BLOCK__CURRENT__s" kindref="compound">DATA_BLOCK_CURRENT_s</ref><sp/><ref refid="cansignal__cfg_8c_1a415dab297402d39a8f48f901c2a5c04a" kindref="member">cans_current_tab</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Constant<sp/>and<sp/>Variable<sp/>Definitions<sp/>====================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="cansignal__cfg_8h_1a00b5c5f6e2c4347b7898ae4cd8946670" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCANS__signal__s" kindref="compound">CANS_signal_s</ref><sp/><ref refid="cansignal__cfg_8c_1a00b5c5f6e2c4347b7898ae4cd8946670" kindref="member">cans_CAN0_signals_tx</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal">};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="cansignal__cfg_8h_1a7441a668581186628ab12dd0ebdd0f7c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCANS__signal__s" kindref="compound">CANS_signal_s</ref><sp/><ref refid="cansignal__cfg_8c_1a7441a668581186628ab12dd0ebdd0f7c" kindref="member">cans_CAN1_signals_tx</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="cansignal__cfg_8h_1aab49b0b2fd3ee38354c5d64f75416425" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCANS__signal__s" kindref="compound">CANS_signal_s</ref><sp/><ref refid="cansignal__cfg_8c_1aab49b0b2fd3ee38354c5d64f75416425" kindref="member">cans_CAN0_signals_rx</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a85e44d1bb639235677ba9ed8600a3757" kindref="member">CAN0_MSG_BMS10</ref>},<sp/><sp/><sp/>0,<sp/><sp/>8,<sp/><sp/><sp/><sp/>32,<sp/>0,<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1ae5f77a630a6e5da831a285789ee32701ae27bd24c9ff9f6a948625a8242cb982e" kindref="member">CAN0_SIGNAL_NONE</ref>},<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a85e44d1bb639235677ba9ed8600a3757" kindref="member">CAN0_MSG_BMS10</ref>},<sp/><sp/><sp/>8,<sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/>0,<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1ae5f77a630a6e5da831a285789ee32701ae27bd24c9ff9f6a948625a8242cb982e" kindref="member">CAN0_SIGNAL_NONE</ref>},<sp/>&amp;<ref refid="cansignal__cfg_8c_1a7651cc6ec1d238ce7110af01e47e1211" kindref="member">cans_setstaterequest</ref>,<sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9ae9df40569e9594ac06ae16cf3f55359e" kindref="member">CAN0_MSG_ISENS0</ref>},<sp/><sp/>0,<sp/><sp/>8,<sp/><sp/><sp/><sp/>32,<sp/>0,<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1ae5f77a630a6e5da831a285789ee32701ae27bd24c9ff9f6a948625a8242cb982e" kindref="member">CAN0_SIGNAL_NONE</ref>},<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9ae9df40569e9594ac06ae16cf3f55359e" kindref="member">CAN0_MSG_ISENS0</ref>},<sp/><sp/>8,<sp/><sp/>8,<sp/><sp/>255,<sp/>0,<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1ae5f77a630a6e5da831a285789ee32701ae27bd24c9ff9f6a948625a8242cb982e" kindref="member">CAN0_SIGNAL_NONE</ref>},<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9ae9df40569e9594ac06ae16cf3f55359e" kindref="member">CAN0_MSG_ISENS0</ref>},<sp/>16,<sp/>32,<sp/>0xFFFFFFFF,<sp/>-3000,<sp/>0.001,<sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1ae5f77a630a6e5da831a285789ee32701ae27bd24c9ff9f6a948625a8242cb982e" kindref="member">CAN0_SIGNAL_NONE</ref>},<sp/>&amp;<ref refid="cansignal__cfg_8c_1ac7f8d6ef80568de8892020528ab245f5" kindref="member">cans_setcurr</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a02ed68f69d3f3c85a858d4987e992ea8" kindref="member">CAN0_MSG_ISENS1</ref>},<sp/><sp/>0,<sp/><sp/>8,<sp/><sp/><sp/><sp/>32,<sp/>0,<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1ae5f77a630a6e5da831a285789ee32701ae27bd24c9ff9f6a948625a8242cb982e" kindref="member">CAN0_SIGNAL_NONE</ref>},<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a02ed68f69d3f3c85a858d4987e992ea8" kindref="member">CAN0_MSG_ISENS1</ref>},<sp/><sp/>8,<sp/><sp/>8,<sp/><sp/><sp/><sp/>255,<sp/>0,<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1ae5f77a630a6e5da831a285789ee32701ae27bd24c9ff9f6a948625a8242cb982e" kindref="member">CAN0_SIGNAL_NONE</ref>},<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a02ed68f69d3f3c85a858d4987e992ea8" kindref="member">CAN0_MSG_ISENS1</ref>},<sp/>16,<sp/>32,<sp/><sp/>0xFFFFFFFF,<sp/>0,<sp/>0.001,<sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1ae5f77a630a6e5da831a285789ee32701ae27bd24c9ff9f6a948625a8242cb982e" kindref="member">CAN0_SIGNAL_NONE</ref>},<sp/>&amp;<ref refid="cansignal__cfg_8c_1ac7f8d6ef80568de8892020528ab245f5" kindref="member">cans_setcurr</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a4dae46f8b34cf49ab5f97848baa553ed" kindref="member">CAN0_MSG_ISENS2</ref>},<sp/><sp/>0,<sp/><sp/>8,<sp/><sp/><sp/><sp/>32,<sp/>0,<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1ae5f77a630a6e5da831a285789ee32701ae27bd24c9ff9f6a948625a8242cb982e" kindref="member">CAN0_SIGNAL_NONE</ref>},<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a4dae46f8b34cf49ab5f97848baa553ed" kindref="member">CAN0_MSG_ISENS2</ref>},<sp/><sp/>8,<sp/><sp/>8,<sp/><sp/><sp/><sp/>255,<sp/>0,<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1ae5f77a630a6e5da831a285789ee32701ae27bd24c9ff9f6a948625a8242cb982e" kindref="member">CAN0_SIGNAL_NONE</ref>},<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a4dae46f8b34cf49ab5f97848baa553ed" kindref="member">CAN0_MSG_ISENS2</ref>},<sp/>16,<sp/>32,<sp/><sp/>0xFFFFFFFF,<sp/>0,<sp/>0.001,<sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1ae5f77a630a6e5da831a285789ee32701ae27bd24c9ff9f6a948625a8242cb982e" kindref="member">CAN0_SIGNAL_NONE</ref>},<sp/>&amp;<ref refid="cansignal__cfg_8c_1ac7f8d6ef80568de8892020528ab245f5" kindref="member">cans_setcurr</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9aedebd95b31169f76d82fc3961e30c9ee" kindref="member">CAN0_MSG_ISENS3</ref>},<sp/><sp/>0,<sp/><sp/>8,<sp/><sp/><sp/><sp/>32,<sp/>0,<sp/>0.001,<sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1ae5f77a630a6e5da831a285789ee32701ae27bd24c9ff9f6a948625a8242cb982e" kindref="member">CAN0_SIGNAL_NONE</ref>},<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9aedebd95b31169f76d82fc3961e30c9ee" kindref="member">CAN0_MSG_ISENS3</ref>},<sp/><sp/>8,<sp/><sp/>8,<sp/><sp/><sp/><sp/>255,<sp/>0,<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1ae5f77a630a6e5da831a285789ee32701ae27bd24c9ff9f6a948625a8242cb982e" kindref="member">CAN0_SIGNAL_NONE</ref>},<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9aedebd95b31169f76d82fc3961e30c9ee" kindref="member">CAN0_MSG_ISENS3</ref>},<sp/>16,<sp/>32,<sp/><sp/>0xFFFFFFFF,<sp/>0,<sp/>0.001,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1ae5f77a630a6e5da831a285789ee32701ae27bd24c9ff9f6a948625a8242cb982e" kindref="member">CAN0_SIGNAL_NONE</ref>},<sp/>&amp;<ref refid="cansignal__cfg_8c_1ac7f8d6ef80568de8892020528ab245f5" kindref="member">cans_setcurr</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a70a8d0be873666389f678076f26ddcd5" kindref="member">CAN0_MSG_DEBUG</ref>},<sp/><sp/><sp/>0,<sp/>64,<sp/><sp/>100,<sp/>0,<sp/>0.001,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1ae5f77a630a6e5da831a285789ee32701ae27bd24c9ff9f6a948625a8242cb982e" kindref="member">CAN0_SIGNAL_NONE</ref>},<sp/>&amp;<ref refid="cansignal__cfg_8c_1a21da08b9b118af9a1e13dd31ca7d557e" kindref="member">cans_setdebug</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal">};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="cansignal__cfg_8h_1a6a25a471299bc5e3290e06a8f79989e7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structCANS__signal__s" kindref="compound">CANS_signal_s</ref><sp/><ref refid="cansignal__cfg_8c_1a6a25a471299bc5e3290e06a8f79989e7" kindref="member">cans_CAN1_signals_rx</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a1ed56e0d38e6397fa1dce103647f8643" kindref="member">CAN1_MSG_BMS10</ref>},<sp/><sp/><sp/>0,<sp/><sp/>8,<sp/><sp/><sp/><sp/>32,<sp/>0,<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1a5c9a69298eda1483fc3e8c37dbb3acbca3ba1668933e268670cc0fd283891836d" kindref="member">CAN1_SIGNAL_NONE</ref>},<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a1ed56e0d38e6397fa1dce103647f8643" kindref="member">CAN1_MSG_BMS10</ref>},<sp/><sp/><sp/>8,<sp/><sp/>8,<sp/><sp/><sp/><sp/>8,<sp/>0,<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1a5c9a69298eda1483fc3e8c37dbb3acbca3ba1668933e268670cc0fd283891836d" kindref="member">CAN1_SIGNAL_NONE</ref>},<sp/>&amp;<ref refid="cansignal__cfg_8c_1a7651cc6ec1d238ce7110af01e47e1211" kindref="member">cans_setstaterequest</ref>,<sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a6fd2b260b8792577157a773dfe6037a0" kindref="member">CAN1_MSG_ISENS0</ref>},<sp/><sp/>0,<sp/><sp/>8,<sp/><sp/><sp/><sp/>32,<sp/>0,<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1a5c9a69298eda1483fc3e8c37dbb3acbca3ba1668933e268670cc0fd283891836d" kindref="member">CAN1_SIGNAL_NONE</ref>},<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a6fd2b260b8792577157a773dfe6037a0" kindref="member">CAN1_MSG_ISENS0</ref>},<sp/><sp/>8,<sp/><sp/>8,<sp/><sp/><sp/><sp/>255,<sp/>0,<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1a5c9a69298eda1483fc3e8c37dbb3acbca3ba1668933e268670cc0fd283891836d" kindref="member">CAN1_SIGNAL_NONE</ref>},<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a6fd2b260b8792577157a773dfe6037a0" kindref="member">CAN1_MSG_ISENS0</ref>},<sp/>16,<sp/>32,<sp/><sp/>0xFFFFFFFF,<sp/>0,<sp/>0.001,<sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1a5c9a69298eda1483fc3e8c37dbb3acbca3ba1668933e268670cc0fd283891836d" kindref="member">CAN1_SIGNAL_NONE</ref>},<sp/>&amp;<ref refid="cansignal__cfg_8c_1ac7f8d6ef80568de8892020528ab245f5" kindref="member">cans_setcurr</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a990f3ffa166ef44c71c34c1fb674dd56" kindref="member">CAN1_MSG_ISENS1</ref>},<sp/><sp/>0,<sp/><sp/>8,<sp/><sp/><sp/><sp/>32,<sp/>0,<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1a5c9a69298eda1483fc3e8c37dbb3acbca3ba1668933e268670cc0fd283891836d" kindref="member">CAN1_SIGNAL_NONE</ref>},<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a990f3ffa166ef44c71c34c1fb674dd56" kindref="member">CAN1_MSG_ISENS1</ref>},<sp/><sp/>8,<sp/><sp/>8,<sp/><sp/><sp/><sp/>255,<sp/>0,<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1a5c9a69298eda1483fc3e8c37dbb3acbca3ba1668933e268670cc0fd283891836d" kindref="member">CAN1_SIGNAL_NONE</ref>},<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a990f3ffa166ef44c71c34c1fb674dd56" kindref="member">CAN1_MSG_ISENS1</ref>},<sp/>16,<sp/>32,<sp/><sp/>0xFFFFFFFF,<sp/>0,<sp/>0.001,<sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1a5c9a69298eda1483fc3e8c37dbb3acbca3ba1668933e268670cc0fd283891836d" kindref="member">CAN1_SIGNAL_NONE</ref>},<sp/>&amp;<ref refid="cansignal__cfg_8c_1ac7f8d6ef80568de8892020528ab245f5" kindref="member">cans_setcurr</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a10640886d86f84c25474d4292e85b622" kindref="member">CAN1_MSG_ISENS2</ref>},<sp/><sp/>0,<sp/><sp/>8,<sp/><sp/><sp/><sp/>32,<sp/>0,<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1a5c9a69298eda1483fc3e8c37dbb3acbca3ba1668933e268670cc0fd283891836d" kindref="member">CAN1_SIGNAL_NONE</ref>},<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a10640886d86f84c25474d4292e85b622" kindref="member">CAN1_MSG_ISENS2</ref>},<sp/><sp/>8,<sp/><sp/>8,<sp/><sp/><sp/><sp/>255,<sp/>0,<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1a5c9a69298eda1483fc3e8c37dbb3acbca3ba1668933e268670cc0fd283891836d" kindref="member">CAN1_SIGNAL_NONE</ref>},<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a10640886d86f84c25474d4292e85b622" kindref="member">CAN1_MSG_ISENS2</ref>},<sp/>16,<sp/>32,<sp/><sp/>0xFFFFFFFF,<sp/>0,<sp/>0.001,<sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1a5c9a69298eda1483fc3e8c37dbb3acbca3ba1668933e268670cc0fd283891836d" kindref="member">CAN1_SIGNAL_NONE</ref>},<sp/>&amp;<ref refid="cansignal__cfg_8c_1ac7f8d6ef80568de8892020528ab245f5" kindref="member">cans_setcurr</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a99718d65e027baea353300bc90cf9af4" kindref="member">CAN1_MSG_ISENS3</ref>},<sp/><sp/>0,<sp/><sp/>8,<sp/><sp/><sp/><sp/>32,<sp/>0,<sp/>0.001,<sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1a5c9a69298eda1483fc3e8c37dbb3acbca3ba1668933e268670cc0fd283891836d" kindref="member">CAN1_SIGNAL_NONE</ref>},<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a99718d65e027baea353300bc90cf9af4" kindref="member">CAN1_MSG_ISENS3</ref>},<sp/><sp/>8,<sp/><sp/>8,<sp/><sp/><sp/><sp/>255,<sp/>0,<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1a5c9a69298eda1483fc3e8c37dbb3acbca3ba1668933e268670cc0fd283891836d" kindref="member">CAN1_SIGNAL_NONE</ref>},<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a99718d65e027baea353300bc90cf9af4" kindref="member">CAN1_MSG_ISENS3</ref>},<sp/>16,<sp/>32,<sp/><sp/>0xFFFFFFFF,<sp/>0,<sp/>0.001,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1a5c9a69298eda1483fc3e8c37dbb3acbca3ba1668933e268670cc0fd283891836d" kindref="member">CAN1_SIGNAL_NONE</ref>},<sp/>&amp;<ref refid="cansignal__cfg_8c_1ac7f8d6ef80568de8892020528ab245f5" kindref="member">cans_setcurr</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>},</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<ref refid="cansignal__cfg_8h_1a87850e24db2ea06885d1bb80a40a93f9a4ddb2c53733c955566cd798e27c7f092" kindref="member">CAN1_MSG_DEBUG</ref>},<sp/><sp/><sp/>0,<sp/>64,<sp/><sp/>100,<sp/>0,<sp/>0.001,<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/><ref refid="std__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><sp/>{<ref refid="cansignal__cfg_8h_1a5c9a69298eda1483fc3e8c37dbb3acbca3ba1668933e268670cc0fd283891836d" kindref="member">CAN1_SIGNAL_NONE</ref>},<sp/>&amp;<ref refid="cansignal__cfg_8c_1a21da08b9b118af9a1e13dd31ca7d557e" kindref="member">cans_setdebug</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>NULL_PTR<sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="cansignal__cfg_8h_1a76a2b16912c01559b1281c463d4d7a0f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="cansignal__cfg_8c_1a76a2b16912c01559b1281c463d4d7a0f" kindref="member">cans_CAN0_signals_tx_length</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="cansignal__cfg_8c_1a00b5c5f6e2c4347b7898ae4cd8946670" kindref="member">cans_CAN0_signals_tx</ref>)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cans_CAN0_signals_tx[0]);</highlight></codeline>
<codeline lineno="120" refid="cansignal__cfg_8h_1a1425407d1b20511625b6cd6b340ebd57" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="cansignal__cfg_8c_1a1425407d1b20511625b6cd6b340ebd57" kindref="member">cans_CAN1_signals_tx_length</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="cansignal__cfg_8c_1a7441a668581186628ab12dd0ebdd0f7c" kindref="member">cans_CAN1_signals_tx</ref>)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cans_CAN1_signals_tx[0]);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="cansignal__cfg_8h_1a09fad45966212a86c0470b1608275b42" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="cansignal__cfg_8c_1a09fad45966212a86c0470b1608275b42" kindref="member">cans_CAN0_signals_rx_length</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="cansignal__cfg_8c_1aab49b0b2fd3ee38354c5d64f75416425" kindref="member">cans_CAN0_signals_rx</ref>)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cans_CAN0_signals_rx[0]);</highlight></codeline>
<codeline lineno="123" refid="cansignal__cfg_8h_1a14f12d8fd481484941df1876cbd63c64" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="cansignal__cfg_8c_1a14f12d8fd481484941df1876cbd63c64" kindref="member">cans_CAN1_signals_rx_length</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="cansignal__cfg_8c_1a6a25a471299bc5e3290e06a8f79989e7" kindref="member">cans_CAN1_signals_rx</ref>)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cans_CAN1_signals_rx[0]);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">/*==================<sp/>Function<sp/>Implementations<sp/>=============================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="cansignal__cfg_8c_1a2f765875c539a80f32b6c538ad8a0682" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cansignal__cfg_8c_1a2f765875c539a80f32b6c538ad8a0682" kindref="member">cans_setmux</ref>(uint32_t<sp/>sigIdx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i,<sp/>locMuxIdx<sp/>=0xFFFFFFFF;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="cansignal__cfg_8c_1a7f1cdf83dae8c7f1b2709d17d1290ef6" kindref="member">cans_signalToMuxMapping</ref>)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="cansignal__cfg_8c_1a7f1cdf83dae8c7f1b2709d17d1290ef6" kindref="member">cans_signalToMuxMapping</ref>[0]);<sp/>i++){</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigIdx<sp/>==<sp/><ref refid="cansignal__cfg_8c_1a7f1cdf83dae8c7f1b2709d17d1290ef6" kindref="member">cans_signalToMuxMapping</ref>[i])<sp/>locMuxIdx=i;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value<sp/>!=<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cansignal__cfg_8c_1aed67cd1a990077da6dae445d3e450612" kindref="member">cans_muxVal</ref>[locMuxIdx]<sp/>=<sp/>*(uint8_t*)<sp/>value;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="cansignal__cfg_8c_1a057ddf53755e68c3fbdc18004df0bb52" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cansignal__cfg_8c_1a057ddf53755e68c3fbdc18004df0bb52" kindref="member">cans_setvolt</ref>(uint32_t<sp/>sigIdx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>access_dummy;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value<sp/>!=<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(uint32_t<sp/>*)value<sp/>=<sp/>access_dummy;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>access_dummy++;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="cansignal__cfg_8c_1a32d837ed072c1cda84c1788b94a0dbf4" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cansignal__cfg_8c_1a32d837ed072c1cda84c1788b94a0dbf4" kindref="member">cans_settempering</ref>(uint32_t<sp/>sigIdx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>access_dummy;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value<sp/>!=<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(uint32_t<sp/>*)value<sp/>=<sp/>access_dummy;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>access_dummy++;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="cansignal__cfg_8c_1ac79e1eec5d24375711c0b657e8b178bd" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cansignal__cfg_8c_1ac79e1eec5d24375711c0b657e8b178bd" kindref="member">cans_setcanerr</ref>(uint32_t<sp/>sigIdx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>access_dummy;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value<sp/>!=<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(uint32_t<sp/>*)value<sp/>=<sp/>access_dummy;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>access_dummy++;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="cansignal__cfg_8c_1aa91a174d1d806f64092db43ee0ab8d33" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cansignal__cfg_8c_1aa91a174d1d806f64092db43ee0ab8d33" kindref="member">cans_setsocsoh</ref>(uint32_t<sp/>sigIdx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>access_dummy;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value<sp/>!=<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(uint32_t<sp/>*)value<sp/>=<sp/>access_dummy;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>access_dummy++;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="cansignal__cfg_8c_1a176fe58869c5a39b5443cb425ebe04f9" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cansignal__cfg_8c_1a176fe58869c5a39b5443cb425ebe04f9" kindref="member">cans_setsof</ref>(uint32_t<sp/>sigIdx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>access_dummy;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value<sp/>!=<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(uint32_t<sp/>*)value<sp/>=<sp/>access_dummy;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>access_dummy++;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="cansignal__cfg_8c_1a4358d6ba75a9d27e5cfb3e37bafa6150" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cansignal__cfg_8c_1a4358d6ba75a9d27e5cfb3e37bafa6150" kindref="member">cans_setminmaxvolt</ref>(uint32_t<sp/>sigIdx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>access_dummy;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value<sp/>!=<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(uint32_t<sp/>*)value<sp/>=<sp/>access_dummy;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>access_dummy++;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="cansignal__cfg_8c_1ac7f8d6ef80568de8892020528ab245f5" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cansignal__cfg_8c_1ac7f8d6ef80568de8892020528ab245f5" kindref="member">cans_setcurr</ref>(uint32_t<sp/>sigIdx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>currentValue;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>voltageValue[3];</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>idx<sp/>=0;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dummy[4]<sp/>=<sp/>{0,0,0,0};</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>dummy[0]<sp/>=<sp/>*(uint32_t<sp/>*)value<sp/>&amp;<sp/>0x000000FF;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>dummy[1]<sp/>=<sp/>(*(uint32_t<sp/>*)value<sp/>&amp;<sp/>0x0000FF00)<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>dummy[2]<sp/>=<sp/>(*(uint32_t<sp/>*)value<sp/>&amp;<sp/>0x00FF0000)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>dummy[3]<sp/>=<sp/>(*(uint32_t<sp/>*)value<sp/>&amp;<sp/>0xFF000000)<sp/>&gt;&gt;<sp/>24;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value<sp/>!=<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(sigIdx){</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cansignal__cfg_8h_1ab17a7f254041e6ba97221eb5b9bffa1ea89ac08436e36acd17fbff0dd42f08617" kindref="member">CAN0_SIG_ISENS0_I_Measurement</ref>:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>CAN1_SIG_ISENS0_I_Measurement:<sp/><sp/>uncommented<sp/>because<sp/>identical<sp/>position<sp/>in<sp/>CAN0<sp/>and<sp/>CAN1<sp/>rx<sp/>signal<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentValue<sp/>=<sp/>(int32_t)(dummy[3]<sp/>|<sp/>dummy[2]<sp/>&lt;&lt;<sp/>8</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>dummy[1]<sp/>&lt;&lt;<sp/>16<sp/>|<sp/>dummy[0]<sp/>&lt;&lt;<sp/>24);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cans_current_tab.<ref refid="structDATA__BLOCK__CURRENT__s_1a857d4a45035277b85f7fe0be8792c51a" kindref="member">previous_timestamp</ref><sp/>=<sp/>cans_current_tab.<ref refid="structDATA__BLOCK__CURRENT__s_1ac93da9c37d00d7942aeaa4b4473a6431" kindref="member">timestamp</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cans_current_tab.<ref refid="structDATA__BLOCK__CURRENT__s_1ac93da9c37d00d7942aeaa4b4473a6431" kindref="member">timestamp</ref><sp/>=<sp/><ref refid="mcu_8c_1a09e5f493b1f3dc15a07b7b72ad69cede" kindref="member">MCU_GetTimeStamp</ref>();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cans_current_tab.<ref refid="structDATA__BLOCK__CURRENT__s_1abe562fdb013652a32a8d1da374093206" kindref="member">current</ref>=(float)(currentValue);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cans_current_tab.<ref refid="structDATA__BLOCK__CURRENT__s_1a40c423bad6cadbffce033db5684d85bb" kindref="member">state_current</ref>++;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="database_8c_1a71c46da113f917afb39cc80c56e598be" kindref="member">DATA_StoreDataBlock</ref>(&amp;cans_current_tab,<ref refid="database__cfg_8h_1a8f42993f5e17a2d234df914e08d9e3a9" kindref="member">DATA_BLOCK_ID_CURRENT</ref>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cansignal__cfg_8h_1ab17a7f254041e6ba97221eb5b9bffa1eabbecea22c1e8e561122bce17e0d951ed" kindref="member">CAN0_SIG_ISENS1_U1_Measurement</ref>:</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>CAN1_SIG_ISENS1_U1_Measurement:<sp/><sp/>uncommented<sp/>because<sp/>identical<sp/>position<sp/>in<sp/>CAN0<sp/>and<sp/>CAN1<sp/>rx<sp/>signal<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>=0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>voltageValue[idx]<sp/>=<sp/>(int32_t)(dummy[3]<sp/>|<sp/>dummy[2]<sp/>&lt;&lt;<sp/>8</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>dummy[1]<sp/>&lt;&lt;<sp/>16<sp/>|<sp/>dummy[0]<sp/>&lt;&lt;<sp/>24);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cans_current_tab.<ref refid="structDATA__BLOCK__CURRENT__s_1a2d89b6d53577d32d9698780894c4813e" kindref="member">voltage</ref>[idx]=(float)(voltageValue[idx])*cans_CAN0_signals_rx[sigIdx].<ref refid="structCANS__signal__s_1af6f88d38ca0971aaf347c2742e38dd87" kindref="member">factor</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cans_current_tab.<ref refid="structDATA__BLOCK__CURRENT__s_1af7665f7da2491617b8303b1cb6cef712" kindref="member">state_voltage</ref>++;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="database_8c_1a71c46da113f917afb39cc80c56e598be" kindref="member">DATA_StoreDataBlock</ref>(&amp;cans_current_tab,<ref refid="database__cfg_8h_1a8f42993f5e17a2d234df914e08d9e3a9" kindref="member">DATA_BLOCK_ID_CURRENT</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cansignal__cfg_8h_1ab17a7f254041e6ba97221eb5b9bffa1eaad56681998fd7fed759b71dc1dcb5919" kindref="member">CAN0_SIG_ISENS2_U2_Measurement</ref>:</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>CAN1_SIG_ISENS2_U2_Measurement:<sp/><sp/>uncommented<sp/>because<sp/>identical<sp/>position<sp/>in<sp/>CAN0<sp/>and<sp/>CAN1<sp/>rx<sp/>signal<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>voltageValue[idx]<sp/>=<sp/>(int32_t)(dummy[3]<sp/>|<sp/>dummy[2]<sp/>&lt;&lt;<sp/>8</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>dummy[1]<sp/>&lt;&lt;<sp/>16<sp/>|<sp/>dummy[0]<sp/>&lt;&lt;<sp/>24);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cans_current_tab.<ref refid="structDATA__BLOCK__CURRENT__s_1a2d89b6d53577d32d9698780894c4813e" kindref="member">voltage</ref>[idx]=(float)(voltageValue[idx])*cans_CAN0_signals_rx[sigIdx].<ref refid="structCANS__signal__s_1af6f88d38ca0971aaf347c2742e38dd87" kindref="member">factor</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cans_current_tab.<ref refid="structDATA__BLOCK__CURRENT__s_1af7665f7da2491617b8303b1cb6cef712" kindref="member">state_voltage</ref>++;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="database_8c_1a71c46da113f917afb39cc80c56e598be" kindref="member">DATA_StoreDataBlock</ref>(&amp;cans_current_tab,<ref refid="database__cfg_8h_1a8f42993f5e17a2d234df914e08d9e3a9" kindref="member">DATA_BLOCK_ID_CURRENT</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cansignal__cfg_8h_1ab17a7f254041e6ba97221eb5b9bffa1ea1dc57373b7d265833163729cc90afa93" kindref="member">CAN0_SIG_ISENS3_U3_Measurement</ref>:</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>CAN1_SIG_ISENS3_U3_Measurement:<sp/><sp/>uncommented<sp/>because<sp/>identical<sp/>position<sp/>in<sp/>CAN0<sp/>and<sp/>CAN1<sp/>rx<sp/>signal<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>voltageValue[idx]<sp/>=<sp/>(int32_t)(dummy[3]<sp/>|<sp/>dummy[2]<sp/>&lt;&lt;<sp/>8</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>dummy[1]<sp/>&lt;&lt;<sp/>16<sp/>|<sp/>dummy[0]<sp/>&lt;&lt;<sp/>24);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cans_current_tab.<ref refid="structDATA__BLOCK__CURRENT__s_1a2d89b6d53577d32d9698780894c4813e" kindref="member">voltage</ref>[idx]=(float)(voltageValue[idx])*cans_CAN0_signals_rx[sigIdx].<ref refid="structCANS__signal__s_1af6f88d38ca0971aaf347c2742e38dd87" kindref="member">factor</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cans_current_tab.<ref refid="structDATA__BLOCK__CURRENT__s_1af7665f7da2491617b8303b1cb6cef712" kindref="member">state_voltage</ref>++;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="database_8c_1a71c46da113f917afb39cc80c56e598be" kindref="member">DATA_StoreDataBlock</ref>(&amp;cans_current_tab,<ref refid="database__cfg_8h_1a8f42993f5e17a2d234df914e08d9e3a9" kindref="member">DATA_BLOCK_ID_CURRENT</ref>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="cansignal__cfg_8c_1a7651cc6ec1d238ce7110af01e47e1211" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cansignal__cfg_8c_1a7651cc6ec1d238ce7110af01e47e1211" kindref="member">cans_setstaterequest</ref>(uint32_t<sp/>sigIdx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDATA__BLOCK__STATEREQUEST__s" kindref="compound">DATA_BLOCK_STATEREQUEST_s</ref><sp/>staterequest_tab;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>staterequest;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="database_8c_1ace052ca2c5098dcade967992ecebc8bf" kindref="member">DATA_GetTable</ref>(&amp;staterequest_tab,<ref refid="database__cfg_8h_1a0b445280174407a1a20ae8a173aeb6b9" kindref="member">DATA_BLOCK_ID_STATEREQUEST</ref>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value<sp/>!=<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigIdx<sp/>==<sp/><ref refid="cansignal__cfg_8h_1ab17a7f254041e6ba97221eb5b9bffa1ea5b78afc9ab348a6ccab013720ac0e7f4" kindref="member">CAN0_SIG_BMS10_Request</ref><sp/>||<sp/>sigIdx<sp/>==<sp/><ref refid="cansignal__cfg_8h_1a37b74fc0f60066491693db4542271028a46dd2b02e51b71473a0f0fb55fd82b1b" kindref="member">CAN1_SIG_BMS10_Request</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staterequest<sp/>=<sp/>*(uint8_t<sp/>*)value;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staterequest_tab.<ref refid="structDATA__BLOCK__STATEREQUEST__s_1ac2f1c20c0e977eeb669b473f1c0df7d5" kindref="member">previous_state_request</ref><sp/>=<sp/>staterequest_tab.<ref refid="structDATA__BLOCK__STATEREQUEST__s_1adddc57fa75078eec60dc2f7150382b34" kindref="member">state_request</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staterequest_tab.<ref refid="structDATA__BLOCK__STATEREQUEST__s_1adddc57fa75078eec60dc2f7150382b34" kindref="member">state_request</ref><sp/>=<sp/>staterequest;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((staterequest_tab.<ref refid="structDATA__BLOCK__STATEREQUEST__s_1adddc57fa75078eec60dc2f7150382b34" kindref="member">state_request</ref><sp/>!=<sp/>staterequest_tab.<ref refid="structDATA__BLOCK__STATEREQUEST__s_1ac2f1c20c0e977eeb669b473f1c0df7d5" kindref="member">previous_state_request</ref>)||<sp/>\</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="mcu_8c_1a09e5f493b1f3dc15a07b7b72ad69cede" kindref="member">MCU_GetTimeStamp</ref>()-<sp/>staterequest_tab.<ref refid="structDATA__BLOCK__STATEREQUEST__s_1ab503dd29a7cfaa03042b2acaeab1d5f7" kindref="member">timestamp</ref>)<sp/>&gt;<sp/>3000){</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staterequest_tab.<ref refid="structDATA__BLOCK__STATEREQUEST__s_1ab77605b0f0693cc4dd5b93861a5f6a3a" kindref="member">state_request_pending</ref><sp/>=<sp/>staterequest;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staterequest_tab.<ref refid="structDATA__BLOCK__STATEREQUEST__s_1afe4115eefe4358fc967e26121d70995a" kindref="member">previous_timestamp</ref><sp/>=<sp/>staterequest_tab.<ref refid="structDATA__BLOCK__STATEREQUEST__s_1ab503dd29a7cfaa03042b2acaeab1d5f7" kindref="member">timestamp</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staterequest_tab.<ref refid="structDATA__BLOCK__STATEREQUEST__s_1ab503dd29a7cfaa03042b2acaeab1d5f7" kindref="member">timestamp</ref><sp/>=<sp/><ref refid="mcu_8c_1a09e5f493b1f3dc15a07b7b72ad69cede" kindref="member">MCU_GetTimeStamp</ref>();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staterequest_tab.<ref refid="structDATA__BLOCK__STATEREQUEST__s_1a6f2500d7dd16a80a272eab4bf58bbcc4" kindref="member">state</ref>++;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="database_8c_1a71c46da113f917afb39cc80c56e598be" kindref="member">DATA_StoreDataBlock</ref>(&amp;staterequest_tab,<ref refid="database__cfg_8h_1a0b445280174407a1a20ae8a173aeb6b9" kindref="member">DATA_BLOCK_ID_STATEREQUEST</ref>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//SYSCRTL_VCUPresent(SYSCTRL_VCUPRESENCE_OK);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="cansignal__cfg_8c_1a21da08b9b118af9a1e13dd31ca7d557e" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cansignal__cfg_8c_1a21da08b9b118af9a1e13dd31ca7d557e" kindref="member">cans_setdebug</ref>(uint32_t<sp/>sigIdx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[8]<sp/>=<sp/>{0,0,0,0,0,0,0,0};</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structDATA__BLOCK__BALANCING__CONTROL__s" kindref="compound">DATA_BLOCK_BALANCING_CONTROL_s</ref><sp/>balancing_tab;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>*(uint64_t<sp/>*)value<sp/>&amp;<sp/>0x00000000000000FF;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>(*(uint64_t<sp/>*)value<sp/>&amp;<sp/>0x000000000000FF00)<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>data[2]<sp/>=<sp/>(*(uint64_t<sp/>*)value<sp/>&amp;<sp/>0x0000000000FF0000)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>data[3]<sp/>=<sp/>(*(uint64_t<sp/>*)value<sp/>&amp;<sp/>0x00000000FF000000)<sp/>&gt;&gt;<sp/>24;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>data[4]<sp/>=<sp/>(*(uint64_t<sp/>*)value<sp/>&amp;<sp/>0x000000FF00000000)<sp/>&gt;&gt;<sp/>32;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>data[5]<sp/>=<sp/>(*(uint64_t<sp/>*)value<sp/>&amp;<sp/>0x0000FF0000000000)<sp/>&gt;&gt;<sp/>40;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>data[6]<sp/>=<sp/>(*(uint64_t<sp/>*)value<sp/>&amp;<sp/>0x00FF000000000000)<sp/>&gt;&gt;<sp/>48;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>data[7]<sp/>=<sp/>(*(uint64_t<sp/>*)value<sp/>&amp;<sp/>0xFF00000000000000)<sp/>&gt;&gt;<sp/>56;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value<sp/>!=<sp/><ref refid="std__types_8h_1a530f11a96e508d171d28564c8dc20942" kindref="member">NULL_PTR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(data[0]){</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>11:<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>Soc<sp/>directly<sp/>with<sp/>value.<sp/>Unit<sp/>in<sp/>CAN<sp/>message:<sp/>0.01<sp/>percent<sp/>--&gt;<sp/>range<sp/>0...10000<sp/>means<sp/>0%Soc...100%Soc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sox_8c_1a19c20347185aaa61f4bd404b9f0619cd" kindref="member">SOC_SetValue</ref>(<sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)((data[1])&lt;&lt;8<sp/>|<sp/>(data[2])))/100.0<sp/>);<sp/></highlight><highlight class="comment">//divide<sp/>by<sp/>100<sp/>to<sp/>get<sp/>SOC<sp/>between<sp/>0<sp/>and<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>14:<sp/></highlight><highlight class="comment">//<sp/>debug<sp/>Message<sp/>for<sp/>Balancing<sp/>on<sp/>pack<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dataptr[1];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>balancing<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dataptr[2]/1000.0;<sp/><sp/><sp/>balancing<sp/>threshold,<sp/>mV<sp/>-&gt;<sp/>V</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LTC_BalancingEnablePack(dataptr[1],(((float)(dataptr[2]))/1000.0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data[1]<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="database_8c_1ace052ca2c5098dcade967992ecebc8bf" kindref="member">DATA_GetTable</ref>(&amp;balancing_tab,<sp/><ref refid="database__cfg_8h_1a87757124a9f7cd18ce79f6d2bd393fec" kindref="member">DATA_BLOCK_ID_BALANCING_CONTROL_VALUES</ref>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>balancing_tab.<ref refid="structDATA__BLOCK__BALANCING__CONTROL__s_1a0f50ab29d007bb9287e4846c944ceb7b" kindref="member">enable_balancing</ref>=1;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>balancing_tab.<ref refid="structDATA__BLOCK__BALANCING__CONTROL__s_1a78a30e9ed2447a8163f343cf62244f18" kindref="member">threshold</ref><sp/>=<sp/>data[2];<sp/></highlight><highlight class="comment">//get<sp/>threshold<sp/>in<sp/>mV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="database_8c_1a71c46da113f917afb39cc80c56e598be" kindref="member">DATA_StoreDataBlock</ref>(&amp;balancing_tab,<sp/><ref refid="database__cfg_8h_1a87757124a9f7cd18ce79f6d2bd393fec" kindref="member">DATA_BLOCK_ID_BALANCING_CONTROL_VALUES</ref>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="database_8c_1ace052ca2c5098dcade967992ecebc8bf" kindref="member">DATA_GetTable</ref>(&amp;balancing_tab,<sp/><ref refid="database__cfg_8h_1a87757124a9f7cd18ce79f6d2bd393fec" kindref="member">DATA_BLOCK_ID_BALANCING_CONTROL_VALUES</ref>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>balancing_tab.<ref refid="structDATA__BLOCK__BALANCING__CONTROL__s_1a0f50ab29d007bb9287e4846c944ceb7b" kindref="member">enable_balancing</ref>=0;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>balancing_tab.<ref refid="structDATA__BLOCK__BALANCING__CONTROL__s_1a78a30e9ed2447a8163f343cf62244f18" kindref="member">threshold</ref><sp/>=<sp/>data[2];<sp/></highlight><highlight class="comment">//get<sp/>threshold<sp/>in<sp/>mV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="database_8c_1a71c46da113f917afb39cc80c56e598be" kindref="member">DATA_StoreDataBlock</ref>(&amp;balancing_tab,<sp/><ref refid="database__cfg_8h_1a87757124a9f7cd18ce79f6d2bd393fec" kindref="member">DATA_BLOCK_ID_BALANCING_CONTROL_VALUES</ref>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/itri/foxBMS/src/foxBMS-setup/embedded-software/mcu-secondary/src/module/config/cansignal_cfg.c"/>
  </compounddef>
</doxygen>
